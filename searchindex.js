Search.setIndex({"docnames": ["CONTRIBUTING", "_generated/splinepy", "_generated/splinepy.bezier", "_generated/splinepy.bezier.Bezier", "_generated/splinepy.bezier.Bezier.basis", "_generated/splinepy.bezier.Bezier.basis_and_support", "_generated/splinepy.bezier.Bezier.basis_derivative", "_generated/splinepy.bezier.Bezier.basis_derivative_and_support", "_generated/splinepy.bezier.Bezier.bezier", "_generated/splinepy.bezier.Bezier.bspline", "_generated/splinepy.bezier.Bezier.clear", "_generated/splinepy.bezier.Bezier.compose", "_generated/splinepy.bezier.Bezier.composition_derivative", "_generated/splinepy.bezier.Bezier.copy", "_generated/splinepy.bezier.Bezier.current_core_properties", "_generated/splinepy.bezier.Bezier.derivative", "_generated/splinepy.bezier.Bezier.derivative_spline", "_generated/splinepy.bezier.Bezier.elevate_degrees", "_generated/splinepy.bezier.Bezier.evaluate", "_generated/splinepy.bezier.Bezier.export", "_generated/splinepy.bezier.Bezier.extract_dim", "_generated/splinepy.bezier.Bezier.greville_abscissae", "_generated/splinepy.bezier.Bezier.jacobian", "_generated/splinepy.bezier.Bezier.mapper", "_generated/splinepy.bezier.Bezier.nurbs", "_generated/splinepy.bezier.Bezier.proximities", "_generated/splinepy.bezier.Bezier.rationalbezier", "_generated/splinepy.bezier.Bezier.reduce_degrees", "_generated/splinepy.bezier.Bezier.sample", "_generated/splinepy.bezier.Bezier.show", "_generated/splinepy.bezier.Bezier.showable", "_generated/splinepy.bezier.Bezier.split", "_generated/splinepy.bezier.Bezier.support", "_generated/splinepy.bezier.Bezier.todict", "_generated/splinepy.bezier.BezierBase", "_generated/splinepy.bezier.BezierBase.basis", "_generated/splinepy.bezier.BezierBase.basis_and_support", "_generated/splinepy.bezier.BezierBase.basis_derivative", "_generated/splinepy.bezier.BezierBase.basis_derivative_and_support", "_generated/splinepy.bezier.BezierBase.clear", "_generated/splinepy.bezier.BezierBase.compose", "_generated/splinepy.bezier.BezierBase.composition_derivative", "_generated/splinepy.bezier.BezierBase.copy", "_generated/splinepy.bezier.BezierBase.current_core_properties", "_generated/splinepy.bezier.BezierBase.derivative", "_generated/splinepy.bezier.BezierBase.derivative_spline", "_generated/splinepy.bezier.BezierBase.elevate_degrees", "_generated/splinepy.bezier.BezierBase.evaluate", "_generated/splinepy.bezier.BezierBase.export", "_generated/splinepy.bezier.BezierBase.extract_dim", "_generated/splinepy.bezier.BezierBase.greville_abscissae", "_generated/splinepy.bezier.BezierBase.jacobian", "_generated/splinepy.bezier.BezierBase.mapper", "_generated/splinepy.bezier.BezierBase.proximities", "_generated/splinepy.bezier.BezierBase.reduce_degrees", "_generated/splinepy.bezier.BezierBase.sample", "_generated/splinepy.bezier.BezierBase.show", "_generated/splinepy.bezier.BezierBase.showable", "_generated/splinepy.bezier.BezierBase.split", "_generated/splinepy.bezier.BezierBase.support", "_generated/splinepy.bezier.BezierBase.todict", "_generated/splinepy.bspline", "_generated/splinepy.bspline.BSpline", "_generated/splinepy.bspline.BSpline.basis", "_generated/splinepy.bspline.BSpline.basis_and_support", "_generated/splinepy.bspline.BSpline.basis_derivative", "_generated/splinepy.bspline.BSpline.basis_derivative_and_support", "_generated/splinepy.bspline.BSpline.bspline", "_generated/splinepy.bspline.BSpline.clear", "_generated/splinepy.bspline.BSpline.copy", "_generated/splinepy.bspline.BSpline.current_core_properties", "_generated/splinepy.bspline.BSpline.derivative", "_generated/splinepy.bspline.BSpline.elevate_degrees", "_generated/splinepy.bspline.BSpline.evaluate", "_generated/splinepy.bspline.BSpline.export", "_generated/splinepy.bspline.BSpline.extract_bezier_patches", "_generated/splinepy.bspline.BSpline.greville_abscissae", "_generated/splinepy.bspline.BSpline.insert_knots", "_generated/splinepy.bspline.BSpline.jacobian", "_generated/splinepy.bspline.BSpline.knot_insertion_matrix", "_generated/splinepy.bspline.BSpline.mapper", "_generated/splinepy.bspline.BSpline.normalize_knot_vectors", "_generated/splinepy.bspline.BSpline.nurbs", "_generated/splinepy.bspline.BSpline.proximities", "_generated/splinepy.bspline.BSpline.reduce_degrees", "_generated/splinepy.bspline.BSpline.remove_knots", "_generated/splinepy.bspline.BSpline.sample", "_generated/splinepy.bspline.BSpline.show", "_generated/splinepy.bspline.BSpline.showable", "_generated/splinepy.bspline.BSpline.support", "_generated/splinepy.bspline.BSpline.todict", "_generated/splinepy.bspline.BSplineBase", "_generated/splinepy.bspline.BSplineBase.basis", "_generated/splinepy.bspline.BSplineBase.basis_and_support", "_generated/splinepy.bspline.BSplineBase.basis_derivative", "_generated/splinepy.bspline.BSplineBase.basis_derivative_and_support", "_generated/splinepy.bspline.BSplineBase.clear", "_generated/splinepy.bspline.BSplineBase.copy", "_generated/splinepy.bspline.BSplineBase.current_core_properties", "_generated/splinepy.bspline.BSplineBase.derivative", "_generated/splinepy.bspline.BSplineBase.elevate_degrees", "_generated/splinepy.bspline.BSplineBase.evaluate", "_generated/splinepy.bspline.BSplineBase.export", "_generated/splinepy.bspline.BSplineBase.extract_bezier_patches", "_generated/splinepy.bspline.BSplineBase.greville_abscissae", "_generated/splinepy.bspline.BSplineBase.insert_knots", "_generated/splinepy.bspline.BSplineBase.jacobian", "_generated/splinepy.bspline.BSplineBase.knot_insertion_matrix", "_generated/splinepy.bspline.BSplineBase.mapper", "_generated/splinepy.bspline.BSplineBase.normalize_knot_vectors", "_generated/splinepy.bspline.BSplineBase.proximities", "_generated/splinepy.bspline.BSplineBase.reduce_degrees", "_generated/splinepy.bspline.BSplineBase.remove_knots", "_generated/splinepy.bspline.BSplineBase.sample", "_generated/splinepy.bspline.BSplineBase.show", "_generated/splinepy.bspline.BSplineBase.showable", "_generated/splinepy.bspline.BSplineBase.support", "_generated/splinepy.bspline.BSplineBase.todict", "_generated/splinepy.cli", "_generated/splinepy.cli.convert", "_generated/splinepy.cli.entry", "_generated/splinepy.cli.show", "_generated/splinepy.helpme", "_generated/splinepy.helpme.check", "_generated/splinepy.helpme.check.Checker", "_generated/splinepy.helpme.check.Checker.clamped_knot_vectors", "_generated/splinepy.helpme.check.Checker.valid_queries", "_generated/splinepy.helpme.check.clamped_knot_vectors", "_generated/splinepy.helpme.check.valid_queries", "_generated/splinepy.helpme.create", "_generated/splinepy.helpme.create.Creator", "_generated/splinepy.helpme.create.Creator.determinant_spline", "_generated/splinepy.helpme.create.Creator.embedded", "_generated/splinepy.helpme.create.Creator.extruded", "_generated/splinepy.helpme.create.Creator.parametric_view", "_generated/splinepy.helpme.create.Creator.revolved", "_generated/splinepy.helpme.create.arc", "_generated/splinepy.helpme.create.box", "_generated/splinepy.helpme.create.circle", "_generated/splinepy.helpme.create.cone", "_generated/splinepy.helpme.create.determinant_spline", "_generated/splinepy.helpme.create.disk", "_generated/splinepy.helpme.create.embedded", "_generated/splinepy.helpme.create.extruded", "_generated/splinepy.helpme.create.from_bounds", "_generated/splinepy.helpme.create.line", "_generated/splinepy.helpme.create.parametric_view", "_generated/splinepy.helpme.create.plate", "_generated/splinepy.helpme.create.pyramid", "_generated/splinepy.helpme.create.revolved", "_generated/splinepy.helpme.create.sphere", "_generated/splinepy.helpme.create.surface_circle", "_generated/splinepy.helpme.create.torus", "_generated/splinepy.helpme.extract", "_generated/splinepy.helpme.extract.Extractor", "_generated/splinepy.helpme.extract.Extractor.arrow_data", "_generated/splinepy.helpme.extract.Extractor.beziers", "_generated/splinepy.helpme.extract.Extractor.boundaries", "_generated/splinepy.helpme.extract.Extractor.control_edges", "_generated/splinepy.helpme.extract.Extractor.control_faces", "_generated/splinepy.helpme.extract.Extractor.control_mesh", "_generated/splinepy.helpme.extract.Extractor.control_points", "_generated/splinepy.helpme.extract.Extractor.control_volumes", "_generated/splinepy.helpme.extract.Extractor.edges", "_generated/splinepy.helpme.extract.Extractor.faces", "_generated/splinepy.helpme.extract.Extractor.spline", "_generated/splinepy.helpme.extract.Extractor.volumes", "_generated/splinepy.helpme.extract.arrow_data", "_generated/splinepy.helpme.extract.boundaries", "_generated/splinepy.helpme.extract.control_edges", "_generated/splinepy.helpme.extract.control_faces", "_generated/splinepy.helpme.extract.control_mesh", "_generated/splinepy.helpme.extract.control_points", "_generated/splinepy.helpme.extract.control_volumes", "_generated/splinepy.helpme.extract.edges", "_generated/splinepy.helpme.extract.faces", "_generated/splinepy.helpme.extract.spline", "_generated/splinepy.helpme.extract.volumes", "_generated/splinepy.helpme.ffd", "_generated/splinepy.helpme.ffd.FFD", "_generated/splinepy.helpme.ffd.FFD.mesh", "_generated/splinepy.helpme.ffd.FFD.padding", "_generated/splinepy.helpme.ffd.FFD.show", "_generated/splinepy.helpme.ffd.FFD.showable", "_generated/splinepy.helpme.ffd.FFD.spline", "_generated/splinepy.helpme.fit", "_generated/splinepy.helpme.fit.compute_knot_vector", "_generated/splinepy.helpme.fit.curve", "_generated/splinepy.helpme.fit.parameterize", "_generated/splinepy.helpme.fit.solve_for_control_points", "_generated/splinepy.helpme.fit.surface", "_generated/splinepy.helpme.integrate", "_generated/splinepy.helpme.integrate.Integrator", "_generated/splinepy.helpme.integrate.Integrator.parametric_function", "_generated/splinepy.helpme.integrate.Integrator.volume", "_generated/splinepy.helpme.integrate.parametric_function", "_generated/splinepy.helpme.integrate.physical_function", "_generated/splinepy.helpme.integrate.volume", "_generated/splinepy.helpme.mapper", "_generated/splinepy.helpme.mapper.Mapper", "_generated/splinepy.helpme.mapper.Mapper.basis_function_derivatives", "_generated/splinepy.helpme.mapper.Mapper.basis_gradient_and_support", "_generated/splinepy.helpme.mapper.Mapper.basis_hessian_and_support", "_generated/splinepy.helpme.mapper.Mapper.basis_laplacian_and_support", "_generated/splinepy.helpme.mapper.Mapper.divergence", "_generated/splinepy.helpme.mapper.Mapper.field_derivatives", "_generated/splinepy.helpme.mapper.Mapper.gradient", "_generated/splinepy.helpme.mapper.Mapper.hessian", "_generated/splinepy.helpme.mapper.Mapper.laplacian", "_generated/splinepy.helpme.multi_index", "_generated/splinepy.helpme.multi_index.MultiIndex", "_generated/splinepy.helpme.reparametrize", "_generated/splinepy.helpme.reparametrize.flip_axes", "_generated/splinepy.helpme.reparametrize.permute_parametric_axes", "_generated/splinepy.helpme.visualize", "_generated/splinepy.helpme.visualize.MultipatchShowOption", "_generated/splinepy.helpme.visualize.MultipatchShowOption.clear", "_generated/splinepy.helpme.visualize.MultipatchShowOption.copy_valid_options", "_generated/splinepy.helpme.visualize.MultipatchShowOption.get", "_generated/splinepy.helpme.visualize.MultipatchShowOption.items", "_generated/splinepy.helpme.visualize.MultipatchShowOption.keys", "_generated/splinepy.helpme.visualize.MultipatchShowOption.pop", "_generated/splinepy.helpme.visualize.MultipatchShowOption.update", "_generated/splinepy.helpme.visualize.MultipatchShowOption.valid_keys", "_generated/splinepy.helpme.visualize.MultipatchShowOption.values", "_generated/splinepy.helpme.visualize.SplineShowOption", "_generated/splinepy.helpme.visualize.SplineShowOption.clear", "_generated/splinepy.helpme.visualize.SplineShowOption.copy_valid_options", "_generated/splinepy.helpme.visualize.SplineShowOption.get", "_generated/splinepy.helpme.visualize.SplineShowOption.items", "_generated/splinepy.helpme.visualize.SplineShowOption.keys", "_generated/splinepy.helpme.visualize.SplineShowOption.pop", "_generated/splinepy.helpme.visualize.SplineShowOption.update", "_generated/splinepy.helpme.visualize.SplineShowOption.valid_keys", "_generated/splinepy.helpme.visualize.SplineShowOption.values", "_generated/splinepy.helpme.visualize.make_showable", "_generated/splinepy.helpme.visualize.show", "_generated/splinepy.io", "_generated/splinepy.io.cats", "_generated/splinepy.io.cats.export", "_generated/splinepy.io.cats.load", "_generated/splinepy.io.default", "_generated/splinepy.io.default.export", "_generated/splinepy.io.default.load", "_generated/splinepy.io.gismo", "_generated/splinepy.io.gismo.export", "_generated/splinepy.io.gismo.load", "_generated/splinepy.io.iges", "_generated/splinepy.io.iges.export", "_generated/splinepy.io.iges.load", "_generated/splinepy.io.ioutils", "_generated/splinepy.io.ioutils.abs_fname", "_generated/splinepy.io.ioutils.dict_to_spline", "_generated/splinepy.io.ioutils.expand_tabs", "_generated/splinepy.io.ioutils.form_lines", "_generated/splinepy.io.ioutils.make_meaningful", "_generated/splinepy.io.ioutils.next_line", "_generated/splinepy.io.irit", "_generated/splinepy.io.irit.export", "_generated/splinepy.io.irit.load", "_generated/splinepy.io.json", "_generated/splinepy.io.json.export", "_generated/splinepy.io.json.load", "_generated/splinepy.io.mfem", "_generated/splinepy.io.mfem.dof_mapping", "_generated/splinepy.io.mfem.export", "_generated/splinepy.io.mfem.export_cartesian", "_generated/splinepy.io.mfem.load", "_generated/splinepy.io.mfem.read_solution", "_generated/splinepy.io.npz", "_generated/splinepy.io.npz.export", "_generated/splinepy.io.npz.load", "_generated/splinepy.io.svg", "_generated/splinepy.io.svg.export", "_generated/splinepy.microstructure", "_generated/splinepy.microstructure.microstructure", "_generated/splinepy.microstructure.microstructure.Microstructure", "_generated/splinepy.microstructure.microstructure.Microstructure.create", "_generated/splinepy.microstructure.microstructure.Microstructure.deformation_function", "_generated/splinepy.microstructure.microstructure.Microstructure.microtile", "_generated/splinepy.microstructure.microstructure.Microstructure.parameter_sensitivity_function", "_generated/splinepy.microstructure.microstructure.Microstructure.parametrization_function", "_generated/splinepy.microstructure.microstructure.Microstructure.show", "_generated/splinepy.microstructure.microstructure.Microstructure.tiling", "_generated/splinepy.microstructure.tiles", "_generated/splinepy.microstructure.tiles.armadillo", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.check_param_derivatives", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.check_params", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.closing_tile", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.create_tile", "_generated/splinepy.microstructure.tiles.chi", "_generated/splinepy.microstructure.tiles.chi.Chi", "_generated/splinepy.microstructure.tiles.chi.Chi.check_param_derivatives", "_generated/splinepy.microstructure.tiles.chi.Chi.check_params", "_generated/splinepy.microstructure.tiles.chi.Chi.create_tile", "_generated/splinepy.microstructure.tiles.cross_2d", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.check_param_derivatives", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.check_params", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.create_tile", "_generated/splinepy.microstructure.tiles.cross_3d", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.check_param_derivatives", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.check_params", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.create_tile", "_generated/splinepy.microstructure.tiles.cross_3d_linear", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_param_derivatives", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_params", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.create_tile", "_generated/splinepy.microstructure.tiles.cube_void", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.check_param_derivatives", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.check_params", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.create_tile", "_generated/splinepy.microstructure.tiles.double_lattice", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_param_derivatives", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_params", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.create_tile", "_generated/splinepy.microstructure.tiles.ellips_v_oid", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_param_derivatives", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_params", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.create_tile", "_generated/splinepy.microstructure.tiles.hollow_cube", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.check_param_derivatives", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.check_params", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.create_tile", "_generated/splinepy.microstructure.tiles.hollow_octagon", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_param_derivatives", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_params", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.create_tile", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_param_derivatives", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_params", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.closing_tile", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.create_tile", "_generated/splinepy.microstructure.tiles.inverse_cross_3d", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_param_derivatives", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_params", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.create_tile", "_generated/splinepy.microstructure.tiles.snappy", "_generated/splinepy.microstructure.tiles.snappy.Snappy", "_generated/splinepy.microstructure.tiles.snappy.Snappy.check_param_derivatives", "_generated/splinepy.microstructure.tiles.snappy.Snappy.check_params", "_generated/splinepy.microstructure.tiles.snappy.Snappy.create_tile", "_generated/splinepy.microstructure.tiles.tile_base", "_generated/splinepy.microstructure.tiles.tile_base.TileBase", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.check_param_derivatives", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.check_params", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.dim", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.evaluation_points", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.para_dim", "_generated/splinepy.multipatch", "_generated/splinepy.multipatch.Multipatch", "_generated/splinepy.multipatch.Multipatch.add_fields", "_generated/splinepy.multipatch.Multipatch.boundaries", "_generated/splinepy.multipatch.Multipatch.boundaries_from_continuity", "_generated/splinepy.multipatch.Multipatch.boundary_from_function", "_generated/splinepy.multipatch.Multipatch.boundary_multipatch", "_generated/splinepy.multipatch.Multipatch.boundary_patch_ids", "_generated/splinepy.multipatch.Multipatch.clear", "_generated/splinepy.multipatch.Multipatch.combine_boundaries", "_generated/splinepy.multipatch.Multipatch.control_point_offsets", "_generated/splinepy.multipatch.Multipatch.determine_interfaces", "_generated/splinepy.multipatch.Multipatch.dim", "_generated/splinepy.multipatch.Multipatch.evaluate", "_generated/splinepy.multipatch.Multipatch.extract", "_generated/splinepy.multipatch.Multipatch.fields", "_generated/splinepy.multipatch.Multipatch.get_interfaces", "_generated/splinepy.multipatch.Multipatch.interfaces", "_generated/splinepy.multipatch.Multipatch.para_dim", "_generated/splinepy.multipatch.Multipatch.patches", "_generated/splinepy.multipatch.Multipatch.sample", "_generated/splinepy.multipatch.Multipatch.set_boundary", "_generated/splinepy.multipatch.Multipatch.set_interfaces", "_generated/splinepy.multipatch.Multipatch.show", "_generated/splinepy.multipatch.Multipatch.show_options", "_generated/splinepy.multipatch.Multipatch.showable", "_generated/splinepy.multipatch.Multipatch.spline_data", "_generated/splinepy.multipatch.Multipatch.sub_multipatch", "_generated/splinepy.multipatch.Multipatch.sub_patch_centers", "_generated/splinepy.nurbs", "_generated/splinepy.nurbs.NURBS", "_generated/splinepy.nurbs.NURBS.basis", "_generated/splinepy.nurbs.NURBS.basis_and_support", "_generated/splinepy.nurbs.NURBS.basis_derivative", "_generated/splinepy.nurbs.NURBS.basis_derivative_and_support", "_generated/splinepy.nurbs.NURBS.clear", "_generated/splinepy.nurbs.NURBS.copy", "_generated/splinepy.nurbs.NURBS.current_core_properties", "_generated/splinepy.nurbs.NURBS.derivative", "_generated/splinepy.nurbs.NURBS.elevate_degrees", "_generated/splinepy.nurbs.NURBS.evaluate", "_generated/splinepy.nurbs.NURBS.export", "_generated/splinepy.nurbs.NURBS.extract_bezier_patches", "_generated/splinepy.nurbs.NURBS.greville_abscissae", "_generated/splinepy.nurbs.NURBS.insert_knots", "_generated/splinepy.nurbs.NURBS.jacobian", "_generated/splinepy.nurbs.NURBS.knot_insertion_matrix", "_generated/splinepy.nurbs.NURBS.mapper", "_generated/splinepy.nurbs.NURBS.normalize_knot_vectors", "_generated/splinepy.nurbs.NURBS.nurbs", "_generated/splinepy.nurbs.NURBS.proximities", "_generated/splinepy.nurbs.NURBS.reduce_degrees", "_generated/splinepy.nurbs.NURBS.remove_knots", "_generated/splinepy.nurbs.NURBS.sample", "_generated/splinepy.nurbs.NURBS.show", "_generated/splinepy.nurbs.NURBS.showable", "_generated/splinepy.nurbs.NURBS.support", "_generated/splinepy.nurbs.NURBS.todict", "_generated/splinepy.rational_bezier", "_generated/splinepy.rational_bezier.RationalBezier", "_generated/splinepy.rational_bezier.RationalBezier.basis", "_generated/splinepy.rational_bezier.RationalBezier.basis_and_support", "_generated/splinepy.rational_bezier.RationalBezier.basis_derivative", "_generated/splinepy.rational_bezier.RationalBezier.basis_derivative_and_support", "_generated/splinepy.rational_bezier.RationalBezier.clear", "_generated/splinepy.rational_bezier.RationalBezier.compose", "_generated/splinepy.rational_bezier.RationalBezier.composition_derivative", "_generated/splinepy.rational_bezier.RationalBezier.copy", "_generated/splinepy.rational_bezier.RationalBezier.current_core_properties", "_generated/splinepy.rational_bezier.RationalBezier.derivative", "_generated/splinepy.rational_bezier.RationalBezier.derivative_spline", "_generated/splinepy.rational_bezier.RationalBezier.elevate_degrees", "_generated/splinepy.rational_bezier.RationalBezier.evaluate", "_generated/splinepy.rational_bezier.RationalBezier.export", "_generated/splinepy.rational_bezier.RationalBezier.extract_dim", "_generated/splinepy.rational_bezier.RationalBezier.greville_abscissae", "_generated/splinepy.rational_bezier.RationalBezier.jacobian", "_generated/splinepy.rational_bezier.RationalBezier.mapper", "_generated/splinepy.rational_bezier.RationalBezier.nurbs", "_generated/splinepy.rational_bezier.RationalBezier.proximities", "_generated/splinepy.rational_bezier.RationalBezier.rationalbezier", "_generated/splinepy.rational_bezier.RationalBezier.reduce_degrees", "_generated/splinepy.rational_bezier.RationalBezier.sample", "_generated/splinepy.rational_bezier.RationalBezier.show", "_generated/splinepy.rational_bezier.RationalBezier.showable", "_generated/splinepy.rational_bezier.RationalBezier.split", "_generated/splinepy.rational_bezier.RationalBezier.support", "_generated/splinepy.rational_bezier.RationalBezier.todict", "_generated/splinepy.settings", "_generated/splinepy.settings.CHECK_BOUNDS", "_generated/splinepy.settings.NAME_TO_TYPE", "_generated/splinepy.settings.NTHREADS", "_generated/splinepy.settings.TOLERANCE", "_generated/splinepy.spline", "_generated/splinepy.spline.RequiredProperties", "_generated/splinepy.spline.RequiredProperties.intersection", "_generated/splinepy.spline.RequiredProperties.of", "_generated/splinepy.spline.RequiredProperties.union", "_generated/splinepy.spline.Spline", "_generated/splinepy.spline.Spline.basis", "_generated/splinepy.spline.Spline.basis_and_support", "_generated/splinepy.spline.Spline.basis_derivative", "_generated/splinepy.spline.Spline.basis_derivative_and_support", "_generated/splinepy.spline.Spline.check", "_generated/splinepy.spline.Spline.clear", "_generated/splinepy.spline.Spline.control_mesh_resolutions", "_generated/splinepy.spline.Spline.control_point_bounds", "_generated/splinepy.spline.Spline.control_points", "_generated/splinepy.spline.Spline.copy", "_generated/splinepy.spline.Spline.cps", "_generated/splinepy.spline.Spline.create", "_generated/splinepy.spline.Spline.current_core_properties", "_generated/splinepy.spline.Spline.degrees", "_generated/splinepy.spline.Spline.derivative", "_generated/splinepy.spline.Spline.dim", "_generated/splinepy.spline.Spline.ds", "_generated/splinepy.spline.Spline.elevate_degrees", "_generated/splinepy.spline.Spline.evaluate", "_generated/splinepy.spline.Spline.export", "_generated/splinepy.spline.Spline.extract", "_generated/splinepy.spline.Spline.greville_abscissae", "_generated/splinepy.spline.Spline.has_knot_vectors", "_generated/splinepy.spline.Spline.integrate", "_generated/splinepy.spline.Spline.is_rational", "_generated/splinepy.spline.Spline.jacobian", "_generated/splinepy.spline.Spline.knot_multiplicities", "_generated/splinepy.spline.Spline.knot_vectors", "_generated/splinepy.spline.Spline.kvs", "_generated/splinepy.spline.Spline.mapper", "_generated/splinepy.spline.Spline.multi_index", "_generated/splinepy.spline.Spline.name", "_generated/splinepy.spline.Spline.para_dim", "_generated/splinepy.spline.Spline.parametric_bounds", "_generated/splinepy.spline.Spline.proximities", "_generated/splinepy.spline.Spline.reduce_degrees", "_generated/splinepy.spline.Spline.required_properties", "_generated/splinepy.spline.Spline.sample", "_generated/splinepy.spline.Spline.show", "_generated/splinepy.spline.Spline.show_options", "_generated/splinepy.spline.Spline.showable", "_generated/splinepy.spline.Spline.spline_data", "_generated/splinepy.spline.Spline.support", "_generated/splinepy.spline.Spline.todict", "_generated/splinepy.spline.Spline.unique_knots", "_generated/splinepy.spline.Spline.weights", "_generated/splinepy.spline.Spline.whatami", "_generated/splinepy.spline.Spline.ws", "_generated/splinepy.splinepy_core", "_generated/splinepy.splinepy_core.ControlPointPointers", "_generated/splinepy.splinepy_core.ControlPointPointers.dim", "_generated/splinepy.splinepy_core.ControlPointPointers.len", "_generated/splinepy.splinepy_core.ControlPointPointers.set_row", "_generated/splinepy.splinepy_core.ControlPointPointers.set_rows", "_generated/splinepy.splinepy_core.ControlPointPointers.sync", "_generated/splinepy.splinepy_core.ControlPointPointers.sync_rows", "_generated/splinepy.splinepy_core.KnotVector", "_generated/splinepy.splinepy_core.KnotVector.find_span", "_generated/splinepy.splinepy_core.KnotVector.multiplicities", "_generated/splinepy.splinepy_core.KnotVector.numpy", "_generated/splinepy.splinepy_core.KnotVector.scale", "_generated/splinepy.splinepy_core.KnotVector.unique", "_generated/splinepy.splinepy_core.ParameterSpace", "_generated/splinepy.splinepy_core.ParameterSpace.copy", "_generated/splinepy.splinepy_core.ParameterSpace.unique_knots", "_generated/splinepy.splinepy_core.PyMultipatch", "_generated/splinepy.splinepy_core.PyMultipatch.add_fields", "_generated/splinepy.splinepy_core.PyMultipatch.boundary_multipatch", "_generated/splinepy.splinepy_core.PyMultipatch.boundary_patch_ids", "_generated/splinepy.splinepy_core.PyMultipatch.clear", "_generated/splinepy.splinepy_core.PyMultipatch.control_point_offsets", "_generated/splinepy.splinepy_core.PyMultipatch.control_points", "_generated/splinepy.splinepy_core.PyMultipatch.dim", "_generated/splinepy.splinepy_core.PyMultipatch.evaluate", "_generated/splinepy.splinepy_core.PyMultipatch.fields", "_generated/splinepy.splinepy_core.PyMultipatch.get_interfaces", "_generated/splinepy.splinepy_core.PyMultipatch.n_default_threads", "_generated/splinepy.splinepy_core.PyMultipatch.name", "_generated/splinepy.splinepy_core.PyMultipatch.para_dim", "_generated/splinepy.splinepy_core.PyMultipatch.patches", "_generated/splinepy.splinepy_core.PyMultipatch.same_parametric_bounds", "_generated/splinepy.splinepy_core.PyMultipatch.sample", "_generated/splinepy.splinepy_core.PyMultipatch.set_interfaces", "_generated/splinepy.splinepy_core.PyMultipatch.sub_multipatch", "_generated/splinepy.splinepy_core.PyMultipatch.sub_patch_centers", "_generated/splinepy.splinepy_core.PyMultipatch.tolerance", "_generated/splinepy.splinepy_core.PyMultipatch.whatami", "_generated/splinepy.splinepy_core.PySpline", "_generated/splinepy.splinepy_core.PySpline.basis", "_generated/splinepy.splinepy_core.PySpline.basis_and_support", "_generated/splinepy.splinepy_core.PySpline.basis_derivative", "_generated/splinepy.splinepy_core.PySpline.basis_derivative_and_support", "_generated/splinepy.splinepy_core.PySpline.control_mesh_resolutions", "_generated/splinepy.splinepy_core.PySpline.current_core_properties", "_generated/splinepy.splinepy_core.PySpline.derivative", "_generated/splinepy.splinepy_core.PySpline.dim", "_generated/splinepy.splinepy_core.PySpline.elevate_degrees", "_generated/splinepy.splinepy_core.PySpline.evaluate", "_generated/splinepy.splinepy_core.PySpline.has_knot_vectors", "_generated/splinepy.splinepy_core.PySpline.is_rational", "_generated/splinepy.splinepy_core.PySpline.jacobian", "_generated/splinepy.splinepy_core.PySpline.name", "_generated/splinepy.splinepy_core.PySpline.para_dim", "_generated/splinepy.splinepy_core.PySpline.parametric_bounds", "_generated/splinepy.splinepy_core.PySpline.proximities", "_generated/splinepy.splinepy_core.PySpline.reduce_degrees", "_generated/splinepy.splinepy_core.PySpline.sample", "_generated/splinepy.splinepy_core.PySpline.support", "_generated/splinepy.splinepy_core.PySpline.whatami", "_generated/splinepy.splinepy_core.WeightPointers", "_generated/splinepy.splinepy_core.WeightPointers.dim", "_generated/splinepy.splinepy_core.WeightPointers.len", "_generated/splinepy.splinepy_core.WeightPointers.set_row", "_generated/splinepy.splinepy_core.WeightPointers.set_rows", "_generated/splinepy.splinepy_core.WeightPointers.sync", "_generated/splinepy.splinepy_core.WeightPointers.sync_rows", "_generated/splinepy.splinepy_core.add", "_generated/splinepy.splinepy_core.annul_core", "_generated/splinepy.splinepy_core.bezier_extraction_matrix", "_generated/splinepy.splinepy_core.boundaries_from_continuity", "_generated/splinepy.splinepy_core.boundary_centers", "_generated/splinepy.splinepy_core.build_type", "_generated/splinepy.splinepy_core.compose", "_generated/splinepy.splinepy_core.compose_sensitivities", "_generated/splinepy.splinepy_core.composition_derivative", "_generated/splinepy.splinepy_core.core_id", "_generated/splinepy.splinepy_core.core_ref_count", "_generated/splinepy.splinepy_core.derivative_spline", "_generated/splinepy.splinepy_core.export_iges", "_generated/splinepy.splinepy_core.extract_all_boundary_splines", "_generated/splinepy.splinepy_core.extract_bezier_patches", "_generated/splinepy.splinepy_core.extract_boundaries", "_generated/splinepy.splinepy_core.extract_dim", "_generated/splinepy.splinepy_core.global_knot_insertion_matrix", "_generated/splinepy.splinepy_core.has_core", "_generated/splinepy.splinepy_core.insert_knots", "_generated/splinepy.splinepy_core.interfaces_from_boundary_centers", "_generated/splinepy.splinepy_core.is_minimal", "_generated/splinepy.splinepy_core.knot_insertion_matrix", "_generated/splinepy.splinepy_core.multiply", "_generated/splinepy.splinepy_core.null_spline", "_generated/splinepy.splinepy_core.orientations", "_generated/splinepy.splinepy_core.read_iges", "_generated/splinepy.splinepy_core.remove_knots", "_generated/splinepy.splinepy_core.same_spline_with_knot_vectors", "_generated/splinepy.splinepy_core.split", "_generated/splinepy.to_derived", "_generated/splinepy.utils", "_generated/splinepy.utils.data", "_generated/splinepy.utils.data.MultipatchData", "_generated/splinepy.utils.data.MultipatchData.as_arrow", "_generated/splinepy.utils.data.MultipatchData.as_scalar", "_generated/splinepy.utils.data.MultipatchData.clear", "_generated/splinepy.utils.data.MultipatchData.get", "_generated/splinepy.utils.data.MultipatchData.items", "_generated/splinepy.utils.data.MultipatchData.keys", "_generated/splinepy.utils.data.MultipatchData.pop", "_generated/splinepy.utils.data.MultipatchData.values", "_generated/splinepy.utils.data.PhysicalSpaceArray", "_generated/splinepy.utils.data.PhysicalSpaceArray.all", "_generated/splinepy.utils.data.PhysicalSpaceArray.any", "_generated/splinepy.utils.data.PhysicalSpaceArray.argmax", "_generated/splinepy.utils.data.PhysicalSpaceArray.argmin", "_generated/splinepy.utils.data.PhysicalSpaceArray.argpartition", "_generated/splinepy.utils.data.PhysicalSpaceArray.argsort", "_generated/splinepy.utils.data.PhysicalSpaceArray.astype", "_generated/splinepy.utils.data.PhysicalSpaceArray.byteswap", "_generated/splinepy.utils.data.PhysicalSpaceArray.choose", "_generated/splinepy.utils.data.PhysicalSpaceArray.clip", "_generated/splinepy.utils.data.PhysicalSpaceArray.compress", "_generated/splinepy.utils.data.PhysicalSpaceArray.conj", "_generated/splinepy.utils.data.PhysicalSpaceArray.conjugate", "_generated/splinepy.utils.data.PhysicalSpaceArray.copy", "_generated/splinepy.utils.data.PhysicalSpaceArray.cumprod", "_generated/splinepy.utils.data.PhysicalSpaceArray.cumsum", "_generated/splinepy.utils.data.PhysicalSpaceArray.diagonal", "_generated/splinepy.utils.data.PhysicalSpaceArray.dot", "_generated/splinepy.utils.data.PhysicalSpaceArray.dump", "_generated/splinepy.utils.data.PhysicalSpaceArray.dumps", "_generated/splinepy.utils.data.PhysicalSpaceArray.fill", "_generated/splinepy.utils.data.PhysicalSpaceArray.flatten", "_generated/splinepy.utils.data.PhysicalSpaceArray.full_row_indices", "_generated/splinepy.utils.data.PhysicalSpaceArray.getfield", "_generated/splinepy.utils.data.PhysicalSpaceArray.item", "_generated/splinepy.utils.data.PhysicalSpaceArray.itemset", "_generated/splinepy.utils.data.PhysicalSpaceArray.max", "_generated/splinepy.utils.data.PhysicalSpaceArray.mean", "_generated/splinepy.utils.data.PhysicalSpaceArray.min", "_generated/splinepy.utils.data.PhysicalSpaceArray.newbyteorder", "_generated/splinepy.utils.data.PhysicalSpaceArray.nonzero", "_generated/splinepy.utils.data.PhysicalSpaceArray.partition", "_generated/splinepy.utils.data.PhysicalSpaceArray.prod", "_generated/splinepy.utils.data.PhysicalSpaceArray.ptp", "_generated/splinepy.utils.data.PhysicalSpaceArray.put", "_generated/splinepy.utils.data.PhysicalSpaceArray.ravel", "_generated/splinepy.utils.data.PhysicalSpaceArray.repeat", "_generated/splinepy.utils.data.PhysicalSpaceArray.reshape", "_generated/splinepy.utils.data.PhysicalSpaceArray.resize", "_generated/splinepy.utils.data.PhysicalSpaceArray.round", "_generated/splinepy.utils.data.PhysicalSpaceArray.row_indices", "_generated/splinepy.utils.data.PhysicalSpaceArray.searchsorted", "_generated/splinepy.utils.data.PhysicalSpaceArray.setfield", "_generated/splinepy.utils.data.PhysicalSpaceArray.setflags", "_generated/splinepy.utils.data.PhysicalSpaceArray.sort", "_generated/splinepy.utils.data.PhysicalSpaceArray.squeeze", "_generated/splinepy.utils.data.PhysicalSpaceArray.std", "_generated/splinepy.utils.data.PhysicalSpaceArray.sum", "_generated/splinepy.utils.data.PhysicalSpaceArray.swapaxes", "_generated/splinepy.utils.data.PhysicalSpaceArray.take", "_generated/splinepy.utils.data.PhysicalSpaceArray.tobytes", "_generated/splinepy.utils.data.PhysicalSpaceArray.tofile", "_generated/splinepy.utils.data.PhysicalSpaceArray.tolist", "_generated/splinepy.utils.data.PhysicalSpaceArray.tostring", "_generated/splinepy.utils.data.PhysicalSpaceArray.trace", "_generated/splinepy.utils.data.PhysicalSpaceArray.transpose", "_generated/splinepy.utils.data.PhysicalSpaceArray.var", "_generated/splinepy.utils.data.PhysicalSpaceArray.view", "_generated/splinepy.utils.data.SplineData", "_generated/splinepy.utils.data.SplineData.as_arrow", "_generated/splinepy.utils.data.SplineData.as_scalar", "_generated/splinepy.utils.data.SplineData.clear", "_generated/splinepy.utils.data.SplineData.get", "_generated/splinepy.utils.data.SplineData.items", "_generated/splinepy.utils.data.SplineData.keys", "_generated/splinepy.utils.data.SplineData.pop", "_generated/splinepy.utils.data.SplineData.values", "_generated/splinepy.utils.data.SplineDataAdaptor", "_generated/splinepy.utils.data.SplineDataAdaptor.arrow_data_only", "_generated/splinepy.utils.data.SplineDataAdaptor.as_vertex_data", "_generated/splinepy.utils.data.SplineDataAdaptor.data", "_generated/splinepy.utils.data.SplineDataAdaptor.function", "_generated/splinepy.utils.data.SplineDataAdaptor.has_evaluate", "_generated/splinepy.utils.data.SplineDataAdaptor.has_function", "_generated/splinepy.utils.data.SplineDataAdaptor.has_locations", "_generated/splinepy.utils.data.SplineDataAdaptor.is_spline", "_generated/splinepy.utils.data.SplineDataAdaptor.locations", "_generated/splinepy.utils.data.SplineDataAdaptor.parametric_bounds", "_generated/splinepy.utils.data.cartesian_product", "_generated/splinepy.utils.data.enforce_contiguous", "_generated/splinepy.utils.data.enforce_contiguous_values", "_generated/splinepy.utils.data.make_matrix", "_generated/splinepy.utils.data.uniform_query", "_generated/splinepy.utils.log", "_generated/splinepy.utils.log.configure", "_generated/splinepy.utils.log.debug", "_generated/splinepy.utils.log.info", "_generated/splinepy.utils.log.prepend_log", "_generated/splinepy.utils.log.warning", "api_reference", "index", "python_api", "spline_intro"], "filenames": ["CONTRIBUTING.rst", "_generated/splinepy.rst", "_generated/splinepy.bezier.rst", "_generated/splinepy.bezier.Bezier.rst", "_generated/splinepy.bezier.Bezier.basis.rst", "_generated/splinepy.bezier.Bezier.basis_and_support.rst", "_generated/splinepy.bezier.Bezier.basis_derivative.rst", "_generated/splinepy.bezier.Bezier.basis_derivative_and_support.rst", "_generated/splinepy.bezier.Bezier.bezier.rst", "_generated/splinepy.bezier.Bezier.bspline.rst", "_generated/splinepy.bezier.Bezier.clear.rst", "_generated/splinepy.bezier.Bezier.compose.rst", "_generated/splinepy.bezier.Bezier.composition_derivative.rst", "_generated/splinepy.bezier.Bezier.copy.rst", "_generated/splinepy.bezier.Bezier.current_core_properties.rst", "_generated/splinepy.bezier.Bezier.derivative.rst", "_generated/splinepy.bezier.Bezier.derivative_spline.rst", "_generated/splinepy.bezier.Bezier.elevate_degrees.rst", "_generated/splinepy.bezier.Bezier.evaluate.rst", "_generated/splinepy.bezier.Bezier.export.rst", "_generated/splinepy.bezier.Bezier.extract_dim.rst", "_generated/splinepy.bezier.Bezier.greville_abscissae.rst", "_generated/splinepy.bezier.Bezier.jacobian.rst", "_generated/splinepy.bezier.Bezier.mapper.rst", "_generated/splinepy.bezier.Bezier.nurbs.rst", "_generated/splinepy.bezier.Bezier.proximities.rst", "_generated/splinepy.bezier.Bezier.rationalbezier.rst", "_generated/splinepy.bezier.Bezier.reduce_degrees.rst", "_generated/splinepy.bezier.Bezier.sample.rst", "_generated/splinepy.bezier.Bezier.show.rst", "_generated/splinepy.bezier.Bezier.showable.rst", "_generated/splinepy.bezier.Bezier.split.rst", "_generated/splinepy.bezier.Bezier.support.rst", "_generated/splinepy.bezier.Bezier.todict.rst", "_generated/splinepy.bezier.BezierBase.rst", "_generated/splinepy.bezier.BezierBase.basis.rst", "_generated/splinepy.bezier.BezierBase.basis_and_support.rst", "_generated/splinepy.bezier.BezierBase.basis_derivative.rst", "_generated/splinepy.bezier.BezierBase.basis_derivative_and_support.rst", "_generated/splinepy.bezier.BezierBase.clear.rst", "_generated/splinepy.bezier.BezierBase.compose.rst", "_generated/splinepy.bezier.BezierBase.composition_derivative.rst", "_generated/splinepy.bezier.BezierBase.copy.rst", "_generated/splinepy.bezier.BezierBase.current_core_properties.rst", "_generated/splinepy.bezier.BezierBase.derivative.rst", "_generated/splinepy.bezier.BezierBase.derivative_spline.rst", "_generated/splinepy.bezier.BezierBase.elevate_degrees.rst", "_generated/splinepy.bezier.BezierBase.evaluate.rst", "_generated/splinepy.bezier.BezierBase.export.rst", "_generated/splinepy.bezier.BezierBase.extract_dim.rst", "_generated/splinepy.bezier.BezierBase.greville_abscissae.rst", "_generated/splinepy.bezier.BezierBase.jacobian.rst", "_generated/splinepy.bezier.BezierBase.mapper.rst", "_generated/splinepy.bezier.BezierBase.proximities.rst", "_generated/splinepy.bezier.BezierBase.reduce_degrees.rst", "_generated/splinepy.bezier.BezierBase.sample.rst", "_generated/splinepy.bezier.BezierBase.show.rst", "_generated/splinepy.bezier.BezierBase.showable.rst", "_generated/splinepy.bezier.BezierBase.split.rst", "_generated/splinepy.bezier.BezierBase.support.rst", "_generated/splinepy.bezier.BezierBase.todict.rst", "_generated/splinepy.bspline.rst", "_generated/splinepy.bspline.BSpline.rst", "_generated/splinepy.bspline.BSpline.basis.rst", "_generated/splinepy.bspline.BSpline.basis_and_support.rst", "_generated/splinepy.bspline.BSpline.basis_derivative.rst", "_generated/splinepy.bspline.BSpline.basis_derivative_and_support.rst", "_generated/splinepy.bspline.BSpline.bspline.rst", "_generated/splinepy.bspline.BSpline.clear.rst", "_generated/splinepy.bspline.BSpline.copy.rst", "_generated/splinepy.bspline.BSpline.current_core_properties.rst", "_generated/splinepy.bspline.BSpline.derivative.rst", "_generated/splinepy.bspline.BSpline.elevate_degrees.rst", "_generated/splinepy.bspline.BSpline.evaluate.rst", "_generated/splinepy.bspline.BSpline.export.rst", "_generated/splinepy.bspline.BSpline.extract_bezier_patches.rst", "_generated/splinepy.bspline.BSpline.greville_abscissae.rst", "_generated/splinepy.bspline.BSpline.insert_knots.rst", "_generated/splinepy.bspline.BSpline.jacobian.rst", "_generated/splinepy.bspline.BSpline.knot_insertion_matrix.rst", "_generated/splinepy.bspline.BSpline.mapper.rst", "_generated/splinepy.bspline.BSpline.normalize_knot_vectors.rst", "_generated/splinepy.bspline.BSpline.nurbs.rst", "_generated/splinepy.bspline.BSpline.proximities.rst", "_generated/splinepy.bspline.BSpline.reduce_degrees.rst", "_generated/splinepy.bspline.BSpline.remove_knots.rst", "_generated/splinepy.bspline.BSpline.sample.rst", "_generated/splinepy.bspline.BSpline.show.rst", "_generated/splinepy.bspline.BSpline.showable.rst", "_generated/splinepy.bspline.BSpline.support.rst", "_generated/splinepy.bspline.BSpline.todict.rst", "_generated/splinepy.bspline.BSplineBase.rst", "_generated/splinepy.bspline.BSplineBase.basis.rst", "_generated/splinepy.bspline.BSplineBase.basis_and_support.rst", "_generated/splinepy.bspline.BSplineBase.basis_derivative.rst", "_generated/splinepy.bspline.BSplineBase.basis_derivative_and_support.rst", "_generated/splinepy.bspline.BSplineBase.clear.rst", "_generated/splinepy.bspline.BSplineBase.copy.rst", "_generated/splinepy.bspline.BSplineBase.current_core_properties.rst", "_generated/splinepy.bspline.BSplineBase.derivative.rst", "_generated/splinepy.bspline.BSplineBase.elevate_degrees.rst", "_generated/splinepy.bspline.BSplineBase.evaluate.rst", "_generated/splinepy.bspline.BSplineBase.export.rst", "_generated/splinepy.bspline.BSplineBase.extract_bezier_patches.rst", "_generated/splinepy.bspline.BSplineBase.greville_abscissae.rst", "_generated/splinepy.bspline.BSplineBase.insert_knots.rst", "_generated/splinepy.bspline.BSplineBase.jacobian.rst", "_generated/splinepy.bspline.BSplineBase.knot_insertion_matrix.rst", "_generated/splinepy.bspline.BSplineBase.mapper.rst", "_generated/splinepy.bspline.BSplineBase.normalize_knot_vectors.rst", "_generated/splinepy.bspline.BSplineBase.proximities.rst", "_generated/splinepy.bspline.BSplineBase.reduce_degrees.rst", "_generated/splinepy.bspline.BSplineBase.remove_knots.rst", "_generated/splinepy.bspline.BSplineBase.sample.rst", "_generated/splinepy.bspline.BSplineBase.show.rst", "_generated/splinepy.bspline.BSplineBase.showable.rst", "_generated/splinepy.bspline.BSplineBase.support.rst", "_generated/splinepy.bspline.BSplineBase.todict.rst", "_generated/splinepy.cli.rst", "_generated/splinepy.cli.convert.rst", "_generated/splinepy.cli.entry.rst", "_generated/splinepy.cli.show.rst", "_generated/splinepy.helpme.rst", "_generated/splinepy.helpme.check.rst", "_generated/splinepy.helpme.check.Checker.rst", "_generated/splinepy.helpme.check.Checker.clamped_knot_vectors.rst", "_generated/splinepy.helpme.check.Checker.valid_queries.rst", "_generated/splinepy.helpme.check.clamped_knot_vectors.rst", "_generated/splinepy.helpme.check.valid_queries.rst", "_generated/splinepy.helpme.create.rst", "_generated/splinepy.helpme.create.Creator.rst", "_generated/splinepy.helpme.create.Creator.determinant_spline.rst", "_generated/splinepy.helpme.create.Creator.embedded.rst", "_generated/splinepy.helpme.create.Creator.extruded.rst", "_generated/splinepy.helpme.create.Creator.parametric_view.rst", "_generated/splinepy.helpme.create.Creator.revolved.rst", "_generated/splinepy.helpme.create.arc.rst", "_generated/splinepy.helpme.create.box.rst", "_generated/splinepy.helpme.create.circle.rst", "_generated/splinepy.helpme.create.cone.rst", "_generated/splinepy.helpme.create.determinant_spline.rst", "_generated/splinepy.helpme.create.disk.rst", "_generated/splinepy.helpme.create.embedded.rst", "_generated/splinepy.helpme.create.extruded.rst", "_generated/splinepy.helpme.create.from_bounds.rst", "_generated/splinepy.helpme.create.line.rst", "_generated/splinepy.helpme.create.parametric_view.rst", "_generated/splinepy.helpme.create.plate.rst", "_generated/splinepy.helpme.create.pyramid.rst", "_generated/splinepy.helpme.create.revolved.rst", "_generated/splinepy.helpme.create.sphere.rst", "_generated/splinepy.helpme.create.surface_circle.rst", "_generated/splinepy.helpme.create.torus.rst", "_generated/splinepy.helpme.extract.rst", "_generated/splinepy.helpme.extract.Extractor.rst", "_generated/splinepy.helpme.extract.Extractor.arrow_data.rst", "_generated/splinepy.helpme.extract.Extractor.beziers.rst", "_generated/splinepy.helpme.extract.Extractor.boundaries.rst", "_generated/splinepy.helpme.extract.Extractor.control_edges.rst", "_generated/splinepy.helpme.extract.Extractor.control_faces.rst", "_generated/splinepy.helpme.extract.Extractor.control_mesh.rst", "_generated/splinepy.helpme.extract.Extractor.control_points.rst", "_generated/splinepy.helpme.extract.Extractor.control_volumes.rst", "_generated/splinepy.helpme.extract.Extractor.edges.rst", "_generated/splinepy.helpme.extract.Extractor.faces.rst", "_generated/splinepy.helpme.extract.Extractor.spline.rst", "_generated/splinepy.helpme.extract.Extractor.volumes.rst", "_generated/splinepy.helpme.extract.arrow_data.rst", "_generated/splinepy.helpme.extract.boundaries.rst", "_generated/splinepy.helpme.extract.control_edges.rst", "_generated/splinepy.helpme.extract.control_faces.rst", "_generated/splinepy.helpme.extract.control_mesh.rst", "_generated/splinepy.helpme.extract.control_points.rst", "_generated/splinepy.helpme.extract.control_volumes.rst", "_generated/splinepy.helpme.extract.edges.rst", "_generated/splinepy.helpme.extract.faces.rst", "_generated/splinepy.helpme.extract.spline.rst", "_generated/splinepy.helpme.extract.volumes.rst", "_generated/splinepy.helpme.ffd.rst", "_generated/splinepy.helpme.ffd.FFD.rst", "_generated/splinepy.helpme.ffd.FFD.mesh.rst", "_generated/splinepy.helpme.ffd.FFD.padding.rst", "_generated/splinepy.helpme.ffd.FFD.show.rst", "_generated/splinepy.helpme.ffd.FFD.showable.rst", "_generated/splinepy.helpme.ffd.FFD.spline.rst", "_generated/splinepy.helpme.fit.rst", "_generated/splinepy.helpme.fit.compute_knot_vector.rst", "_generated/splinepy.helpme.fit.curve.rst", "_generated/splinepy.helpme.fit.parameterize.rst", "_generated/splinepy.helpme.fit.solve_for_control_points.rst", "_generated/splinepy.helpme.fit.surface.rst", "_generated/splinepy.helpme.integrate.rst", "_generated/splinepy.helpme.integrate.Integrator.rst", "_generated/splinepy.helpme.integrate.Integrator.parametric_function.rst", "_generated/splinepy.helpme.integrate.Integrator.volume.rst", "_generated/splinepy.helpme.integrate.parametric_function.rst", "_generated/splinepy.helpme.integrate.physical_function.rst", "_generated/splinepy.helpme.integrate.volume.rst", "_generated/splinepy.helpme.mapper.rst", "_generated/splinepy.helpme.mapper.Mapper.rst", "_generated/splinepy.helpme.mapper.Mapper.basis_function_derivatives.rst", "_generated/splinepy.helpme.mapper.Mapper.basis_gradient_and_support.rst", "_generated/splinepy.helpme.mapper.Mapper.basis_hessian_and_support.rst", "_generated/splinepy.helpme.mapper.Mapper.basis_laplacian_and_support.rst", "_generated/splinepy.helpme.mapper.Mapper.divergence.rst", "_generated/splinepy.helpme.mapper.Mapper.field_derivatives.rst", "_generated/splinepy.helpme.mapper.Mapper.gradient.rst", "_generated/splinepy.helpme.mapper.Mapper.hessian.rst", "_generated/splinepy.helpme.mapper.Mapper.laplacian.rst", "_generated/splinepy.helpme.multi_index.rst", "_generated/splinepy.helpme.multi_index.MultiIndex.rst", "_generated/splinepy.helpme.reparametrize.rst", "_generated/splinepy.helpme.reparametrize.flip_axes.rst", "_generated/splinepy.helpme.reparametrize.permute_parametric_axes.rst", "_generated/splinepy.helpme.visualize.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.clear.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.copy_valid_options.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.get.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.items.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.keys.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.pop.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.update.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.valid_keys.rst", "_generated/splinepy.helpme.visualize.MultipatchShowOption.values.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.clear.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.copy_valid_options.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.get.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.items.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.keys.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.pop.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.update.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.valid_keys.rst", "_generated/splinepy.helpme.visualize.SplineShowOption.values.rst", "_generated/splinepy.helpme.visualize.make_showable.rst", "_generated/splinepy.helpme.visualize.show.rst", "_generated/splinepy.io.rst", "_generated/splinepy.io.cats.rst", "_generated/splinepy.io.cats.export.rst", "_generated/splinepy.io.cats.load.rst", "_generated/splinepy.io.default.rst", "_generated/splinepy.io.default.export.rst", "_generated/splinepy.io.default.load.rst", "_generated/splinepy.io.gismo.rst", "_generated/splinepy.io.gismo.export.rst", "_generated/splinepy.io.gismo.load.rst", "_generated/splinepy.io.iges.rst", "_generated/splinepy.io.iges.export.rst", "_generated/splinepy.io.iges.load.rst", "_generated/splinepy.io.ioutils.rst", "_generated/splinepy.io.ioutils.abs_fname.rst", "_generated/splinepy.io.ioutils.dict_to_spline.rst", "_generated/splinepy.io.ioutils.expand_tabs.rst", "_generated/splinepy.io.ioutils.form_lines.rst", "_generated/splinepy.io.ioutils.make_meaningful.rst", "_generated/splinepy.io.ioutils.next_line.rst", "_generated/splinepy.io.irit.rst", "_generated/splinepy.io.irit.export.rst", "_generated/splinepy.io.irit.load.rst", "_generated/splinepy.io.json.rst", "_generated/splinepy.io.json.export.rst", "_generated/splinepy.io.json.load.rst", "_generated/splinepy.io.mfem.rst", "_generated/splinepy.io.mfem.dof_mapping.rst", "_generated/splinepy.io.mfem.export.rst", "_generated/splinepy.io.mfem.export_cartesian.rst", "_generated/splinepy.io.mfem.load.rst", "_generated/splinepy.io.mfem.read_solution.rst", "_generated/splinepy.io.npz.rst", "_generated/splinepy.io.npz.export.rst", "_generated/splinepy.io.npz.load.rst", "_generated/splinepy.io.svg.rst", "_generated/splinepy.io.svg.export.rst", "_generated/splinepy.microstructure.rst", "_generated/splinepy.microstructure.microstructure.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.create.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.deformation_function.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.microtile.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.parameter_sensitivity_function.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.parametrization_function.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.show.rst", "_generated/splinepy.microstructure.microstructure.Microstructure.tiling.rst", "_generated/splinepy.microstructure.tiles.rst", "_generated/splinepy.microstructure.tiles.armadillo.rst", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.rst", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.check_params.rst", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.closing_tile.rst", "_generated/splinepy.microstructure.tiles.armadillo.Armadillo.create_tile.rst", "_generated/splinepy.microstructure.tiles.chi.rst", "_generated/splinepy.microstructure.tiles.chi.Chi.rst", "_generated/splinepy.microstructure.tiles.chi.Chi.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.chi.Chi.check_params.rst", "_generated/splinepy.microstructure.tiles.chi.Chi.create_tile.rst", "_generated/splinepy.microstructure.tiles.cross_2d.rst", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.rst", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.check_params.rst", "_generated/splinepy.microstructure.tiles.cross_2d.Cross2D.create_tile.rst", "_generated/splinepy.microstructure.tiles.cross_3d.rst", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.rst", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.check_params.rst", "_generated/splinepy.microstructure.tiles.cross_3d.Cross3D.create_tile.rst", "_generated/splinepy.microstructure.tiles.cross_3d_linear.rst", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.rst", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_params.rst", "_generated/splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.create_tile.rst", "_generated/splinepy.microstructure.tiles.cube_void.rst", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.rst", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.check_params.rst", "_generated/splinepy.microstructure.tiles.cube_void.CubeVoid.create_tile.rst", "_generated/splinepy.microstructure.tiles.double_lattice.rst", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.rst", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_params.rst", "_generated/splinepy.microstructure.tiles.double_lattice.DoubleLattice.create_tile.rst", "_generated/splinepy.microstructure.tiles.ellips_v_oid.rst", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.rst", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_params.rst", "_generated/splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.create_tile.rst", "_generated/splinepy.microstructure.tiles.hollow_cube.rst", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.rst", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.check_params.rst", "_generated/splinepy.microstructure.tiles.hollow_cube.HollowCube.create_tile.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_params.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.create_tile.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_params.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.closing_tile.rst", "_generated/splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.create_tile.rst", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.rst", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.rst", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_params.rst", "_generated/splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.create_tile.rst", "_generated/splinepy.microstructure.tiles.snappy.rst", "_generated/splinepy.microstructure.tiles.snappy.Snappy.rst", "_generated/splinepy.microstructure.tiles.snappy.Snappy.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.snappy.Snappy.check_params.rst", "_generated/splinepy.microstructure.tiles.snappy.Snappy.create_tile.rst", "_generated/splinepy.microstructure.tiles.tile_base.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.check_param_derivatives.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.check_params.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.dim.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.evaluation_points.rst", "_generated/splinepy.microstructure.tiles.tile_base.TileBase.para_dim.rst", "_generated/splinepy.multipatch.rst", "_generated/splinepy.multipatch.Multipatch.rst", "_generated/splinepy.multipatch.Multipatch.add_fields.rst", "_generated/splinepy.multipatch.Multipatch.boundaries.rst", "_generated/splinepy.multipatch.Multipatch.boundaries_from_continuity.rst", "_generated/splinepy.multipatch.Multipatch.boundary_from_function.rst", "_generated/splinepy.multipatch.Multipatch.boundary_multipatch.rst", "_generated/splinepy.multipatch.Multipatch.boundary_patch_ids.rst", "_generated/splinepy.multipatch.Multipatch.clear.rst", "_generated/splinepy.multipatch.Multipatch.combine_boundaries.rst", "_generated/splinepy.multipatch.Multipatch.control_point_offsets.rst", "_generated/splinepy.multipatch.Multipatch.determine_interfaces.rst", "_generated/splinepy.multipatch.Multipatch.dim.rst", "_generated/splinepy.multipatch.Multipatch.evaluate.rst", "_generated/splinepy.multipatch.Multipatch.extract.rst", "_generated/splinepy.multipatch.Multipatch.fields.rst", "_generated/splinepy.multipatch.Multipatch.get_interfaces.rst", "_generated/splinepy.multipatch.Multipatch.interfaces.rst", "_generated/splinepy.multipatch.Multipatch.para_dim.rst", "_generated/splinepy.multipatch.Multipatch.patches.rst", "_generated/splinepy.multipatch.Multipatch.sample.rst", "_generated/splinepy.multipatch.Multipatch.set_boundary.rst", "_generated/splinepy.multipatch.Multipatch.set_interfaces.rst", "_generated/splinepy.multipatch.Multipatch.show.rst", "_generated/splinepy.multipatch.Multipatch.show_options.rst", "_generated/splinepy.multipatch.Multipatch.showable.rst", "_generated/splinepy.multipatch.Multipatch.spline_data.rst", "_generated/splinepy.multipatch.Multipatch.sub_multipatch.rst", "_generated/splinepy.multipatch.Multipatch.sub_patch_centers.rst", "_generated/splinepy.nurbs.rst", "_generated/splinepy.nurbs.NURBS.rst", "_generated/splinepy.nurbs.NURBS.basis.rst", "_generated/splinepy.nurbs.NURBS.basis_and_support.rst", "_generated/splinepy.nurbs.NURBS.basis_derivative.rst", "_generated/splinepy.nurbs.NURBS.basis_derivative_and_support.rst", "_generated/splinepy.nurbs.NURBS.clear.rst", "_generated/splinepy.nurbs.NURBS.copy.rst", "_generated/splinepy.nurbs.NURBS.current_core_properties.rst", "_generated/splinepy.nurbs.NURBS.derivative.rst", "_generated/splinepy.nurbs.NURBS.elevate_degrees.rst", "_generated/splinepy.nurbs.NURBS.evaluate.rst", "_generated/splinepy.nurbs.NURBS.export.rst", "_generated/splinepy.nurbs.NURBS.extract_bezier_patches.rst", "_generated/splinepy.nurbs.NURBS.greville_abscissae.rst", "_generated/splinepy.nurbs.NURBS.insert_knots.rst", "_generated/splinepy.nurbs.NURBS.jacobian.rst", "_generated/splinepy.nurbs.NURBS.knot_insertion_matrix.rst", "_generated/splinepy.nurbs.NURBS.mapper.rst", "_generated/splinepy.nurbs.NURBS.normalize_knot_vectors.rst", "_generated/splinepy.nurbs.NURBS.nurbs.rst", "_generated/splinepy.nurbs.NURBS.proximities.rst", "_generated/splinepy.nurbs.NURBS.reduce_degrees.rst", "_generated/splinepy.nurbs.NURBS.remove_knots.rst", "_generated/splinepy.nurbs.NURBS.sample.rst", "_generated/splinepy.nurbs.NURBS.show.rst", "_generated/splinepy.nurbs.NURBS.showable.rst", "_generated/splinepy.nurbs.NURBS.support.rst", "_generated/splinepy.nurbs.NURBS.todict.rst", "_generated/splinepy.rational_bezier.rst", "_generated/splinepy.rational_bezier.RationalBezier.rst", "_generated/splinepy.rational_bezier.RationalBezier.basis.rst", "_generated/splinepy.rational_bezier.RationalBezier.basis_and_support.rst", "_generated/splinepy.rational_bezier.RationalBezier.basis_derivative.rst", "_generated/splinepy.rational_bezier.RationalBezier.basis_derivative_and_support.rst", "_generated/splinepy.rational_bezier.RationalBezier.clear.rst", "_generated/splinepy.rational_bezier.RationalBezier.compose.rst", "_generated/splinepy.rational_bezier.RationalBezier.composition_derivative.rst", "_generated/splinepy.rational_bezier.RationalBezier.copy.rst", "_generated/splinepy.rational_bezier.RationalBezier.current_core_properties.rst", "_generated/splinepy.rational_bezier.RationalBezier.derivative.rst", "_generated/splinepy.rational_bezier.RationalBezier.derivative_spline.rst", "_generated/splinepy.rational_bezier.RationalBezier.elevate_degrees.rst", "_generated/splinepy.rational_bezier.RationalBezier.evaluate.rst", "_generated/splinepy.rational_bezier.RationalBezier.export.rst", "_generated/splinepy.rational_bezier.RationalBezier.extract_dim.rst", "_generated/splinepy.rational_bezier.RationalBezier.greville_abscissae.rst", "_generated/splinepy.rational_bezier.RationalBezier.jacobian.rst", "_generated/splinepy.rational_bezier.RationalBezier.mapper.rst", "_generated/splinepy.rational_bezier.RationalBezier.nurbs.rst", "_generated/splinepy.rational_bezier.RationalBezier.proximities.rst", "_generated/splinepy.rational_bezier.RationalBezier.rationalbezier.rst", "_generated/splinepy.rational_bezier.RationalBezier.reduce_degrees.rst", "_generated/splinepy.rational_bezier.RationalBezier.sample.rst", "_generated/splinepy.rational_bezier.RationalBezier.show.rst", "_generated/splinepy.rational_bezier.RationalBezier.showable.rst", "_generated/splinepy.rational_bezier.RationalBezier.split.rst", "_generated/splinepy.rational_bezier.RationalBezier.support.rst", "_generated/splinepy.rational_bezier.RationalBezier.todict.rst", "_generated/splinepy.settings.rst", "_generated/splinepy.settings.CHECK_BOUNDS.rst", "_generated/splinepy.settings.NAME_TO_TYPE.rst", "_generated/splinepy.settings.NTHREADS.rst", "_generated/splinepy.settings.TOLERANCE.rst", "_generated/splinepy.spline.rst", "_generated/splinepy.spline.RequiredProperties.rst", "_generated/splinepy.spline.RequiredProperties.intersection.rst", "_generated/splinepy.spline.RequiredProperties.of.rst", "_generated/splinepy.spline.RequiredProperties.union.rst", "_generated/splinepy.spline.Spline.rst", "_generated/splinepy.spline.Spline.basis.rst", "_generated/splinepy.spline.Spline.basis_and_support.rst", "_generated/splinepy.spline.Spline.basis_derivative.rst", "_generated/splinepy.spline.Spline.basis_derivative_and_support.rst", "_generated/splinepy.spline.Spline.check.rst", "_generated/splinepy.spline.Spline.clear.rst", "_generated/splinepy.spline.Spline.control_mesh_resolutions.rst", "_generated/splinepy.spline.Spline.control_point_bounds.rst", "_generated/splinepy.spline.Spline.control_points.rst", "_generated/splinepy.spline.Spline.copy.rst", "_generated/splinepy.spline.Spline.cps.rst", "_generated/splinepy.spline.Spline.create.rst", "_generated/splinepy.spline.Spline.current_core_properties.rst", "_generated/splinepy.spline.Spline.degrees.rst", "_generated/splinepy.spline.Spline.derivative.rst", "_generated/splinepy.spline.Spline.dim.rst", "_generated/splinepy.spline.Spline.ds.rst", "_generated/splinepy.spline.Spline.elevate_degrees.rst", "_generated/splinepy.spline.Spline.evaluate.rst", "_generated/splinepy.spline.Spline.export.rst", "_generated/splinepy.spline.Spline.extract.rst", "_generated/splinepy.spline.Spline.greville_abscissae.rst", "_generated/splinepy.spline.Spline.has_knot_vectors.rst", "_generated/splinepy.spline.Spline.integrate.rst", "_generated/splinepy.spline.Spline.is_rational.rst", "_generated/splinepy.spline.Spline.jacobian.rst", "_generated/splinepy.spline.Spline.knot_multiplicities.rst", "_generated/splinepy.spline.Spline.knot_vectors.rst", "_generated/splinepy.spline.Spline.kvs.rst", "_generated/splinepy.spline.Spline.mapper.rst", "_generated/splinepy.spline.Spline.multi_index.rst", "_generated/splinepy.spline.Spline.name.rst", "_generated/splinepy.spline.Spline.para_dim.rst", "_generated/splinepy.spline.Spline.parametric_bounds.rst", "_generated/splinepy.spline.Spline.proximities.rst", "_generated/splinepy.spline.Spline.reduce_degrees.rst", "_generated/splinepy.spline.Spline.required_properties.rst", "_generated/splinepy.spline.Spline.sample.rst", "_generated/splinepy.spline.Spline.show.rst", "_generated/splinepy.spline.Spline.show_options.rst", "_generated/splinepy.spline.Spline.showable.rst", "_generated/splinepy.spline.Spline.spline_data.rst", "_generated/splinepy.spline.Spline.support.rst", "_generated/splinepy.spline.Spline.todict.rst", "_generated/splinepy.spline.Spline.unique_knots.rst", "_generated/splinepy.spline.Spline.weights.rst", "_generated/splinepy.spline.Spline.whatami.rst", "_generated/splinepy.spline.Spline.ws.rst", "_generated/splinepy.splinepy_core.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.dim.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.len.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.set_row.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.set_rows.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.sync.rst", "_generated/splinepy.splinepy_core.ControlPointPointers.sync_rows.rst", "_generated/splinepy.splinepy_core.KnotVector.rst", "_generated/splinepy.splinepy_core.KnotVector.find_span.rst", "_generated/splinepy.splinepy_core.KnotVector.multiplicities.rst", "_generated/splinepy.splinepy_core.KnotVector.numpy.rst", "_generated/splinepy.splinepy_core.KnotVector.scale.rst", "_generated/splinepy.splinepy_core.KnotVector.unique.rst", "_generated/splinepy.splinepy_core.ParameterSpace.rst", "_generated/splinepy.splinepy_core.ParameterSpace.copy.rst", "_generated/splinepy.splinepy_core.ParameterSpace.unique_knots.rst", "_generated/splinepy.splinepy_core.PyMultipatch.rst", "_generated/splinepy.splinepy_core.PyMultipatch.add_fields.rst", "_generated/splinepy.splinepy_core.PyMultipatch.boundary_multipatch.rst", "_generated/splinepy.splinepy_core.PyMultipatch.boundary_patch_ids.rst", "_generated/splinepy.splinepy_core.PyMultipatch.clear.rst", "_generated/splinepy.splinepy_core.PyMultipatch.control_point_offsets.rst", "_generated/splinepy.splinepy_core.PyMultipatch.control_points.rst", "_generated/splinepy.splinepy_core.PyMultipatch.dim.rst", "_generated/splinepy.splinepy_core.PyMultipatch.evaluate.rst", "_generated/splinepy.splinepy_core.PyMultipatch.fields.rst", "_generated/splinepy.splinepy_core.PyMultipatch.get_interfaces.rst", "_generated/splinepy.splinepy_core.PyMultipatch.n_default_threads.rst", "_generated/splinepy.splinepy_core.PyMultipatch.name.rst", "_generated/splinepy.splinepy_core.PyMultipatch.para_dim.rst", "_generated/splinepy.splinepy_core.PyMultipatch.patches.rst", "_generated/splinepy.splinepy_core.PyMultipatch.same_parametric_bounds.rst", "_generated/splinepy.splinepy_core.PyMultipatch.sample.rst", "_generated/splinepy.splinepy_core.PyMultipatch.set_interfaces.rst", "_generated/splinepy.splinepy_core.PyMultipatch.sub_multipatch.rst", "_generated/splinepy.splinepy_core.PyMultipatch.sub_patch_centers.rst", "_generated/splinepy.splinepy_core.PyMultipatch.tolerance.rst", "_generated/splinepy.splinepy_core.PyMultipatch.whatami.rst", "_generated/splinepy.splinepy_core.PySpline.rst", "_generated/splinepy.splinepy_core.PySpline.basis.rst", "_generated/splinepy.splinepy_core.PySpline.basis_and_support.rst", "_generated/splinepy.splinepy_core.PySpline.basis_derivative.rst", "_generated/splinepy.splinepy_core.PySpline.basis_derivative_and_support.rst", "_generated/splinepy.splinepy_core.PySpline.control_mesh_resolutions.rst", "_generated/splinepy.splinepy_core.PySpline.current_core_properties.rst", "_generated/splinepy.splinepy_core.PySpline.derivative.rst", "_generated/splinepy.splinepy_core.PySpline.dim.rst", "_generated/splinepy.splinepy_core.PySpline.elevate_degrees.rst", "_generated/splinepy.splinepy_core.PySpline.evaluate.rst", "_generated/splinepy.splinepy_core.PySpline.has_knot_vectors.rst", "_generated/splinepy.splinepy_core.PySpline.is_rational.rst", "_generated/splinepy.splinepy_core.PySpline.jacobian.rst", "_generated/splinepy.splinepy_core.PySpline.name.rst", "_generated/splinepy.splinepy_core.PySpline.para_dim.rst", "_generated/splinepy.splinepy_core.PySpline.parametric_bounds.rst", "_generated/splinepy.splinepy_core.PySpline.proximities.rst", "_generated/splinepy.splinepy_core.PySpline.reduce_degrees.rst", "_generated/splinepy.splinepy_core.PySpline.sample.rst", "_generated/splinepy.splinepy_core.PySpline.support.rst", "_generated/splinepy.splinepy_core.PySpline.whatami.rst", "_generated/splinepy.splinepy_core.WeightPointers.rst", "_generated/splinepy.splinepy_core.WeightPointers.dim.rst", "_generated/splinepy.splinepy_core.WeightPointers.len.rst", "_generated/splinepy.splinepy_core.WeightPointers.set_row.rst", "_generated/splinepy.splinepy_core.WeightPointers.set_rows.rst", "_generated/splinepy.splinepy_core.WeightPointers.sync.rst", "_generated/splinepy.splinepy_core.WeightPointers.sync_rows.rst", "_generated/splinepy.splinepy_core.add.rst", "_generated/splinepy.splinepy_core.annul_core.rst", "_generated/splinepy.splinepy_core.bezier_extraction_matrix.rst", "_generated/splinepy.splinepy_core.boundaries_from_continuity.rst", "_generated/splinepy.splinepy_core.boundary_centers.rst", "_generated/splinepy.splinepy_core.build_type.rst", "_generated/splinepy.splinepy_core.compose.rst", "_generated/splinepy.splinepy_core.compose_sensitivities.rst", "_generated/splinepy.splinepy_core.composition_derivative.rst", "_generated/splinepy.splinepy_core.core_id.rst", "_generated/splinepy.splinepy_core.core_ref_count.rst", "_generated/splinepy.splinepy_core.derivative_spline.rst", "_generated/splinepy.splinepy_core.export_iges.rst", "_generated/splinepy.splinepy_core.extract_all_boundary_splines.rst", "_generated/splinepy.splinepy_core.extract_bezier_patches.rst", "_generated/splinepy.splinepy_core.extract_boundaries.rst", "_generated/splinepy.splinepy_core.extract_dim.rst", "_generated/splinepy.splinepy_core.global_knot_insertion_matrix.rst", "_generated/splinepy.splinepy_core.has_core.rst", "_generated/splinepy.splinepy_core.insert_knots.rst", "_generated/splinepy.splinepy_core.interfaces_from_boundary_centers.rst", "_generated/splinepy.splinepy_core.is_minimal.rst", "_generated/splinepy.splinepy_core.knot_insertion_matrix.rst", "_generated/splinepy.splinepy_core.multiply.rst", "_generated/splinepy.splinepy_core.null_spline.rst", "_generated/splinepy.splinepy_core.orientations.rst", "_generated/splinepy.splinepy_core.read_iges.rst", "_generated/splinepy.splinepy_core.remove_knots.rst", "_generated/splinepy.splinepy_core.same_spline_with_knot_vectors.rst", "_generated/splinepy.splinepy_core.split.rst", "_generated/splinepy.to_derived.rst", "_generated/splinepy.utils.rst", "_generated/splinepy.utils.data.rst", "_generated/splinepy.utils.data.MultipatchData.rst", "_generated/splinepy.utils.data.MultipatchData.as_arrow.rst", "_generated/splinepy.utils.data.MultipatchData.as_scalar.rst", "_generated/splinepy.utils.data.MultipatchData.clear.rst", "_generated/splinepy.utils.data.MultipatchData.get.rst", "_generated/splinepy.utils.data.MultipatchData.items.rst", "_generated/splinepy.utils.data.MultipatchData.keys.rst", "_generated/splinepy.utils.data.MultipatchData.pop.rst", "_generated/splinepy.utils.data.MultipatchData.values.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.all.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.any.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.argmax.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.argmin.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.argpartition.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.argsort.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.astype.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.byteswap.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.choose.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.clip.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.compress.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.conj.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.conjugate.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.copy.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.cumprod.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.cumsum.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.diagonal.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.dot.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.dump.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.dumps.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.fill.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.flatten.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.full_row_indices.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.getfield.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.item.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.itemset.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.max.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.mean.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.min.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.newbyteorder.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.nonzero.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.partition.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.prod.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.ptp.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.put.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.ravel.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.repeat.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.reshape.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.resize.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.round.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.row_indices.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.searchsorted.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.setfield.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.setflags.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.sort.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.squeeze.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.std.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.sum.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.swapaxes.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.take.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.tobytes.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.tofile.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.tolist.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.tostring.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.trace.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.transpose.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.var.rst", "_generated/splinepy.utils.data.PhysicalSpaceArray.view.rst", "_generated/splinepy.utils.data.SplineData.rst", "_generated/splinepy.utils.data.SplineData.as_arrow.rst", "_generated/splinepy.utils.data.SplineData.as_scalar.rst", "_generated/splinepy.utils.data.SplineData.clear.rst", "_generated/splinepy.utils.data.SplineData.get.rst", "_generated/splinepy.utils.data.SplineData.items.rst", "_generated/splinepy.utils.data.SplineData.keys.rst", "_generated/splinepy.utils.data.SplineData.pop.rst", "_generated/splinepy.utils.data.SplineData.values.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.arrow_data_only.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.as_vertex_data.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.data.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.function.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.has_evaluate.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.has_function.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.has_locations.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.is_spline.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.locations.rst", "_generated/splinepy.utils.data.SplineDataAdaptor.parametric_bounds.rst", "_generated/splinepy.utils.data.cartesian_product.rst", "_generated/splinepy.utils.data.enforce_contiguous.rst", "_generated/splinepy.utils.data.enforce_contiguous_values.rst", "_generated/splinepy.utils.data.make_matrix.rst", "_generated/splinepy.utils.data.uniform_query.rst", "_generated/splinepy.utils.log.rst", "_generated/splinepy.utils.log.configure.rst", "_generated/splinepy.utils.log.debug.rst", "_generated/splinepy.utils.log.info.rst", "_generated/splinepy.utils.log.prepend_log.rst", "_generated/splinepy.utils.log.warning.rst", "api_reference.rst", "index.rst", "python_api.rst", "spline_intro.rst"], "titles": ["Contributing", "splinepy", "splinepy.bezier", "splinepy.bezier.Bezier", "splinepy.bezier.Bezier.basis", "splinepy.bezier.Bezier.basis_and_support", "splinepy.bezier.Bezier.basis_derivative", "splinepy.bezier.Bezier.basis_derivative_and_support", "splinepy.bezier.Bezier.bezier", "splinepy.bezier.Bezier.bspline", "splinepy.bezier.Bezier.clear", "splinepy.bezier.Bezier.compose", "splinepy.bezier.Bezier.composition_derivative", "splinepy.bezier.Bezier.copy", "splinepy.bezier.Bezier.current_core_properties", "splinepy.bezier.Bezier.derivative", "splinepy.bezier.Bezier.derivative_spline", "splinepy.bezier.Bezier.elevate_degrees", "splinepy.bezier.Bezier.evaluate", "splinepy.bezier.Bezier.export", "splinepy.bezier.Bezier.extract_dim", "splinepy.bezier.Bezier.greville_abscissae", "splinepy.bezier.Bezier.jacobian", "splinepy.bezier.Bezier.mapper", "splinepy.bezier.Bezier.nurbs", "splinepy.bezier.Bezier.proximities", "splinepy.bezier.Bezier.rationalbezier", "splinepy.bezier.Bezier.reduce_degrees", "splinepy.bezier.Bezier.sample", "splinepy.bezier.Bezier.show", "splinepy.bezier.Bezier.showable", "splinepy.bezier.Bezier.split", "splinepy.bezier.Bezier.support", "splinepy.bezier.Bezier.todict", "splinepy.bezier.BezierBase", "splinepy.bezier.BezierBase.basis", "splinepy.bezier.BezierBase.basis_and_support", "splinepy.bezier.BezierBase.basis_derivative", "splinepy.bezier.BezierBase.basis_derivative_and_support", "splinepy.bezier.BezierBase.clear", "splinepy.bezier.BezierBase.compose", "splinepy.bezier.BezierBase.composition_derivative", "splinepy.bezier.BezierBase.copy", "splinepy.bezier.BezierBase.current_core_properties", "splinepy.bezier.BezierBase.derivative", "splinepy.bezier.BezierBase.derivative_spline", "splinepy.bezier.BezierBase.elevate_degrees", "splinepy.bezier.BezierBase.evaluate", "splinepy.bezier.BezierBase.export", "splinepy.bezier.BezierBase.extract_dim", "splinepy.bezier.BezierBase.greville_abscissae", "splinepy.bezier.BezierBase.jacobian", "splinepy.bezier.BezierBase.mapper", "splinepy.bezier.BezierBase.proximities", "splinepy.bezier.BezierBase.reduce_degrees", "splinepy.bezier.BezierBase.sample", "splinepy.bezier.BezierBase.show", "splinepy.bezier.BezierBase.showable", "splinepy.bezier.BezierBase.split", "splinepy.bezier.BezierBase.support", "splinepy.bezier.BezierBase.todict", "splinepy.bspline", "splinepy.bspline.BSpline", "splinepy.bspline.BSpline.basis", "splinepy.bspline.BSpline.basis_and_support", "splinepy.bspline.BSpline.basis_derivative", "splinepy.bspline.BSpline.basis_derivative_and_support", "splinepy.bspline.BSpline.bspline", "splinepy.bspline.BSpline.clear", "splinepy.bspline.BSpline.copy", "splinepy.bspline.BSpline.current_core_properties", "splinepy.bspline.BSpline.derivative", "splinepy.bspline.BSpline.elevate_degrees", "splinepy.bspline.BSpline.evaluate", "splinepy.bspline.BSpline.export", "splinepy.bspline.BSpline.extract_bezier_patches", "splinepy.bspline.BSpline.greville_abscissae", "splinepy.bspline.BSpline.insert_knots", "splinepy.bspline.BSpline.jacobian", "splinepy.bspline.BSpline.knot_insertion_matrix", "splinepy.bspline.BSpline.mapper", "splinepy.bspline.BSpline.normalize_knot_vectors", "splinepy.bspline.BSpline.nurbs", "splinepy.bspline.BSpline.proximities", "splinepy.bspline.BSpline.reduce_degrees", "splinepy.bspline.BSpline.remove_knots", "splinepy.bspline.BSpline.sample", "splinepy.bspline.BSpline.show", "splinepy.bspline.BSpline.showable", "splinepy.bspline.BSpline.support", "splinepy.bspline.BSpline.todict", "splinepy.bspline.BSplineBase", "splinepy.bspline.BSplineBase.basis", "splinepy.bspline.BSplineBase.basis_and_support", "splinepy.bspline.BSplineBase.basis_derivative", "splinepy.bspline.BSplineBase.basis_derivative_and_support", "splinepy.bspline.BSplineBase.clear", "splinepy.bspline.BSplineBase.copy", "splinepy.bspline.BSplineBase.current_core_properties", "splinepy.bspline.BSplineBase.derivative", "splinepy.bspline.BSplineBase.elevate_degrees", "splinepy.bspline.BSplineBase.evaluate", "splinepy.bspline.BSplineBase.export", "splinepy.bspline.BSplineBase.extract_bezier_patches", "splinepy.bspline.BSplineBase.greville_abscissae", "splinepy.bspline.BSplineBase.insert_knots", "splinepy.bspline.BSplineBase.jacobian", "splinepy.bspline.BSplineBase.knot_insertion_matrix", "splinepy.bspline.BSplineBase.mapper", "splinepy.bspline.BSplineBase.normalize_knot_vectors", "splinepy.bspline.BSplineBase.proximities", "splinepy.bspline.BSplineBase.reduce_degrees", "splinepy.bspline.BSplineBase.remove_knots", "splinepy.bspline.BSplineBase.sample", "splinepy.bspline.BSplineBase.show", "splinepy.bspline.BSplineBase.showable", "splinepy.bspline.BSplineBase.support", "splinepy.bspline.BSplineBase.todict", "splinepy.cli", "splinepy.cli.convert", "splinepy.cli.entry", "splinepy.cli.show", "splinepy.helpme", "splinepy.helpme.check", "splinepy.helpme.check.Checker", "splinepy.helpme.check.Checker.clamped_knot_vectors", "splinepy.helpme.check.Checker.valid_queries", "splinepy.helpme.check.clamped_knot_vectors", "splinepy.helpme.check.valid_queries", "splinepy.helpme.create", "splinepy.helpme.create.Creator", "splinepy.helpme.create.Creator.determinant_spline", "splinepy.helpme.create.Creator.embedded", "splinepy.helpme.create.Creator.extruded", "splinepy.helpme.create.Creator.parametric_view", "splinepy.helpme.create.Creator.revolved", "splinepy.helpme.create.arc", "splinepy.helpme.create.box", "splinepy.helpme.create.circle", "splinepy.helpme.create.cone", "splinepy.helpme.create.determinant_spline", "splinepy.helpme.create.disk", "splinepy.helpme.create.embedded", "splinepy.helpme.create.extruded", "splinepy.helpme.create.from_bounds", "splinepy.helpme.create.line", "splinepy.helpme.create.parametric_view", "splinepy.helpme.create.plate", "splinepy.helpme.create.pyramid", "splinepy.helpme.create.revolved", "splinepy.helpme.create.sphere", "splinepy.helpme.create.surface_circle", "splinepy.helpme.create.torus", "splinepy.helpme.extract", "splinepy.helpme.extract.Extractor", "splinepy.helpme.extract.Extractor.arrow_data", "splinepy.helpme.extract.Extractor.beziers", "splinepy.helpme.extract.Extractor.boundaries", "splinepy.helpme.extract.Extractor.control_edges", "splinepy.helpme.extract.Extractor.control_faces", "splinepy.helpme.extract.Extractor.control_mesh", "splinepy.helpme.extract.Extractor.control_points", "splinepy.helpme.extract.Extractor.control_volumes", "splinepy.helpme.extract.Extractor.edges", "splinepy.helpme.extract.Extractor.faces", "splinepy.helpme.extract.Extractor.spline", "splinepy.helpme.extract.Extractor.volumes", "splinepy.helpme.extract.arrow_data", "splinepy.helpme.extract.boundaries", "splinepy.helpme.extract.control_edges", "splinepy.helpme.extract.control_faces", "splinepy.helpme.extract.control_mesh", "splinepy.helpme.extract.control_points", "splinepy.helpme.extract.control_volumes", "splinepy.helpme.extract.edges", "splinepy.helpme.extract.faces", "splinepy.helpme.extract.spline", "splinepy.helpme.extract.volumes", "splinepy.helpme.ffd", "splinepy.helpme.ffd.FFD", "splinepy.helpme.ffd.FFD.mesh", "splinepy.helpme.ffd.FFD.padding", "splinepy.helpme.ffd.FFD.show", "splinepy.helpme.ffd.FFD.showable", "splinepy.helpme.ffd.FFD.spline", "splinepy.helpme.fit", "splinepy.helpme.fit.compute_knot_vector", "splinepy.helpme.fit.curve", "splinepy.helpme.fit.parameterize", "splinepy.helpme.fit.solve_for_control_points", "splinepy.helpme.fit.surface", "splinepy.helpme.integrate", "splinepy.helpme.integrate.Integrator", "splinepy.helpme.integrate.Integrator.parametric_function", "splinepy.helpme.integrate.Integrator.volume", "splinepy.helpme.integrate.parametric_function", "splinepy.helpme.integrate.physical_function", "splinepy.helpme.integrate.volume", "splinepy.helpme.mapper", "splinepy.helpme.mapper.Mapper", "splinepy.helpme.mapper.Mapper.basis_function_derivatives", "splinepy.helpme.mapper.Mapper.basis_gradient_and_support", "splinepy.helpme.mapper.Mapper.basis_hessian_and_support", "splinepy.helpme.mapper.Mapper.basis_laplacian_and_support", "splinepy.helpme.mapper.Mapper.divergence", "splinepy.helpme.mapper.Mapper.field_derivatives", "splinepy.helpme.mapper.Mapper.gradient", "splinepy.helpme.mapper.Mapper.hessian", "splinepy.helpme.mapper.Mapper.laplacian", "splinepy.helpme.multi_index", "splinepy.helpme.multi_index.MultiIndex", "splinepy.helpme.reparametrize", "splinepy.helpme.reparametrize.flip_axes", "splinepy.helpme.reparametrize.permute_parametric_axes", "splinepy.helpme.visualize", "splinepy.helpme.visualize.MultipatchShowOption", "splinepy.helpme.visualize.MultipatchShowOption.clear", "splinepy.helpme.visualize.MultipatchShowOption.copy_valid_options", "splinepy.helpme.visualize.MultipatchShowOption.get", "splinepy.helpme.visualize.MultipatchShowOption.items", "splinepy.helpme.visualize.MultipatchShowOption.keys", "splinepy.helpme.visualize.MultipatchShowOption.pop", "splinepy.helpme.visualize.MultipatchShowOption.update", "splinepy.helpme.visualize.MultipatchShowOption.valid_keys", "splinepy.helpme.visualize.MultipatchShowOption.values", "splinepy.helpme.visualize.SplineShowOption", "splinepy.helpme.visualize.SplineShowOption.clear", "splinepy.helpme.visualize.SplineShowOption.copy_valid_options", "splinepy.helpme.visualize.SplineShowOption.get", "splinepy.helpme.visualize.SplineShowOption.items", "splinepy.helpme.visualize.SplineShowOption.keys", "splinepy.helpme.visualize.SplineShowOption.pop", "splinepy.helpme.visualize.SplineShowOption.update", "splinepy.helpme.visualize.SplineShowOption.valid_keys", "splinepy.helpme.visualize.SplineShowOption.values", "splinepy.helpme.visualize.make_showable", "splinepy.helpme.visualize.show", "splinepy.io", "splinepy.io.cats", "splinepy.io.cats.export", "splinepy.io.cats.load", "splinepy.io.default", "splinepy.io.default.export", "splinepy.io.default.load", "splinepy.io.gismo", "splinepy.io.gismo.export", "splinepy.io.gismo.load", "splinepy.io.iges", "splinepy.io.iges.export", "splinepy.io.iges.load", "splinepy.io.ioutils", "splinepy.io.ioutils.abs_fname", "splinepy.io.ioutils.dict_to_spline", "splinepy.io.ioutils.expand_tabs", "splinepy.io.ioutils.form_lines", "splinepy.io.ioutils.make_meaningful", "splinepy.io.ioutils.next_line", "splinepy.io.irit", "splinepy.io.irit.export", "splinepy.io.irit.load", "splinepy.io.json", "splinepy.io.json.export", "splinepy.io.json.load", "splinepy.io.mfem", "splinepy.io.mfem.dof_mapping", "splinepy.io.mfem.export", "splinepy.io.mfem.export_cartesian", "splinepy.io.mfem.load", "splinepy.io.mfem.read_solution", "splinepy.io.npz", "splinepy.io.npz.export", "splinepy.io.npz.load", "splinepy.io.svg", "splinepy.io.svg.export", "splinepy.microstructure", "splinepy.microstructure.microstructure", "splinepy.microstructure.microstructure.Microstructure", "splinepy.microstructure.microstructure.Microstructure.create", "splinepy.microstructure.microstructure.Microstructure.deformation_function", "splinepy.microstructure.microstructure.Microstructure.microtile", "splinepy.microstructure.microstructure.Microstructure.parameter_sensitivity_function", "splinepy.microstructure.microstructure.Microstructure.parametrization_function", "splinepy.microstructure.microstructure.Microstructure.show", "splinepy.microstructure.microstructure.Microstructure.tiling", "splinepy.microstructure.tiles", "splinepy.microstructure.tiles.armadillo", "splinepy.microstructure.tiles.armadillo.Armadillo", "splinepy.microstructure.tiles.armadillo.Armadillo.check_param_derivatives", "splinepy.microstructure.tiles.armadillo.Armadillo.check_params", "splinepy.microstructure.tiles.armadillo.Armadillo.closing_tile", "splinepy.microstructure.tiles.armadillo.Armadillo.create_tile", "splinepy.microstructure.tiles.chi", "splinepy.microstructure.tiles.chi.Chi", "splinepy.microstructure.tiles.chi.Chi.check_param_derivatives", "splinepy.microstructure.tiles.chi.Chi.check_params", "splinepy.microstructure.tiles.chi.Chi.create_tile", "splinepy.microstructure.tiles.cross_2d", "splinepy.microstructure.tiles.cross_2d.Cross2D", "splinepy.microstructure.tiles.cross_2d.Cross2D.check_param_derivatives", "splinepy.microstructure.tiles.cross_2d.Cross2D.check_params", "splinepy.microstructure.tiles.cross_2d.Cross2D.create_tile", "splinepy.microstructure.tiles.cross_3d", "splinepy.microstructure.tiles.cross_3d.Cross3D", "splinepy.microstructure.tiles.cross_3d.Cross3D.check_param_derivatives", "splinepy.microstructure.tiles.cross_3d.Cross3D.check_params", "splinepy.microstructure.tiles.cross_3d.Cross3D.create_tile", "splinepy.microstructure.tiles.cross_3d_linear", "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear", "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_param_derivatives", "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_params", "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.create_tile", "splinepy.microstructure.tiles.cube_void", "splinepy.microstructure.tiles.cube_void.CubeVoid", "splinepy.microstructure.tiles.cube_void.CubeVoid.check_param_derivatives", "splinepy.microstructure.tiles.cube_void.CubeVoid.check_params", "splinepy.microstructure.tiles.cube_void.CubeVoid.create_tile", "splinepy.microstructure.tiles.double_lattice", "splinepy.microstructure.tiles.double_lattice.DoubleLattice", "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_param_derivatives", "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_params", "splinepy.microstructure.tiles.double_lattice.DoubleLattice.create_tile", "splinepy.microstructure.tiles.ellips_v_oid", "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid", "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_param_derivatives", "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_params", "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.create_tile", "splinepy.microstructure.tiles.hollow_cube", "splinepy.microstructure.tiles.hollow_cube.HollowCube", "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_param_derivatives", "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_params", "splinepy.microstructure.tiles.hollow_cube.HollowCube.create_tile", "splinepy.microstructure.tiles.hollow_octagon", "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon", "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_param_derivatives", "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_params", "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.create_tile", "splinepy.microstructure.tiles.hollow_octagon_extrude", "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude", "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_param_derivatives", "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_params", "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.closing_tile", "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.create_tile", "splinepy.microstructure.tiles.inverse_cross_3d", "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D", "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_param_derivatives", "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_params", "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.create_tile", "splinepy.microstructure.tiles.snappy", "splinepy.microstructure.tiles.snappy.Snappy", "splinepy.microstructure.tiles.snappy.Snappy.check_param_derivatives", "splinepy.microstructure.tiles.snappy.Snappy.check_params", "splinepy.microstructure.tiles.snappy.Snappy.create_tile", "splinepy.microstructure.tiles.tile_base", "splinepy.microstructure.tiles.tile_base.TileBase", "splinepy.microstructure.tiles.tile_base.TileBase.check_param_derivatives", "splinepy.microstructure.tiles.tile_base.TileBase.check_params", "splinepy.microstructure.tiles.tile_base.TileBase.dim", "splinepy.microstructure.tiles.tile_base.TileBase.evaluation_points", "splinepy.microstructure.tiles.tile_base.TileBase.para_dim", "splinepy.multipatch", "splinepy.multipatch.Multipatch", "splinepy.multipatch.Multipatch.add_fields", "splinepy.multipatch.Multipatch.boundaries", "splinepy.multipatch.Multipatch.boundaries_from_continuity", "splinepy.multipatch.Multipatch.boundary_from_function", "splinepy.multipatch.Multipatch.boundary_multipatch", "splinepy.multipatch.Multipatch.boundary_patch_ids", "splinepy.multipatch.Multipatch.clear", "splinepy.multipatch.Multipatch.combine_boundaries", "splinepy.multipatch.Multipatch.control_point_offsets", "splinepy.multipatch.Multipatch.determine_interfaces", "splinepy.multipatch.Multipatch.dim", "splinepy.multipatch.Multipatch.evaluate", "splinepy.multipatch.Multipatch.extract", "splinepy.multipatch.Multipatch.fields", "splinepy.multipatch.Multipatch.get_interfaces", "splinepy.multipatch.Multipatch.interfaces", "splinepy.multipatch.Multipatch.para_dim", "splinepy.multipatch.Multipatch.patches", "splinepy.multipatch.Multipatch.sample", "splinepy.multipatch.Multipatch.set_boundary", "splinepy.multipatch.Multipatch.set_interfaces", "splinepy.multipatch.Multipatch.show", "splinepy.multipatch.Multipatch.show_options", "splinepy.multipatch.Multipatch.showable", "splinepy.multipatch.Multipatch.spline_data", "splinepy.multipatch.Multipatch.sub_multipatch", "splinepy.multipatch.Multipatch.sub_patch_centers", "splinepy.nurbs", "splinepy.nurbs.NURBS", "splinepy.nurbs.NURBS.basis", "splinepy.nurbs.NURBS.basis_and_support", "splinepy.nurbs.NURBS.basis_derivative", "splinepy.nurbs.NURBS.basis_derivative_and_support", "splinepy.nurbs.NURBS.clear", "splinepy.nurbs.NURBS.copy", "splinepy.nurbs.NURBS.current_core_properties", "splinepy.nurbs.NURBS.derivative", "splinepy.nurbs.NURBS.elevate_degrees", "splinepy.nurbs.NURBS.evaluate", "splinepy.nurbs.NURBS.export", "splinepy.nurbs.NURBS.extract_bezier_patches", "splinepy.nurbs.NURBS.greville_abscissae", "splinepy.nurbs.NURBS.insert_knots", "splinepy.nurbs.NURBS.jacobian", "splinepy.nurbs.NURBS.knot_insertion_matrix", "splinepy.nurbs.NURBS.mapper", "splinepy.nurbs.NURBS.normalize_knot_vectors", "splinepy.nurbs.NURBS.nurbs", "splinepy.nurbs.NURBS.proximities", "splinepy.nurbs.NURBS.reduce_degrees", "splinepy.nurbs.NURBS.remove_knots", "splinepy.nurbs.NURBS.sample", "splinepy.nurbs.NURBS.show", "splinepy.nurbs.NURBS.showable", "splinepy.nurbs.NURBS.support", "splinepy.nurbs.NURBS.todict", "splinepy.rational_bezier", "splinepy.rational_bezier.RationalBezier", "splinepy.rational_bezier.RationalBezier.basis", "splinepy.rational_bezier.RationalBezier.basis_and_support", "splinepy.rational_bezier.RationalBezier.basis_derivative", "splinepy.rational_bezier.RationalBezier.basis_derivative_and_support", "splinepy.rational_bezier.RationalBezier.clear", "splinepy.rational_bezier.RationalBezier.compose", "splinepy.rational_bezier.RationalBezier.composition_derivative", "splinepy.rational_bezier.RationalBezier.copy", "splinepy.rational_bezier.RationalBezier.current_core_properties", "splinepy.rational_bezier.RationalBezier.derivative", "splinepy.rational_bezier.RationalBezier.derivative_spline", "splinepy.rational_bezier.RationalBezier.elevate_degrees", "splinepy.rational_bezier.RationalBezier.evaluate", "splinepy.rational_bezier.RationalBezier.export", "splinepy.rational_bezier.RationalBezier.extract_dim", "splinepy.rational_bezier.RationalBezier.greville_abscissae", "splinepy.rational_bezier.RationalBezier.jacobian", "splinepy.rational_bezier.RationalBezier.mapper", "splinepy.rational_bezier.RationalBezier.nurbs", "splinepy.rational_bezier.RationalBezier.proximities", "splinepy.rational_bezier.RationalBezier.rationalbezier", "splinepy.rational_bezier.RationalBezier.reduce_degrees", "splinepy.rational_bezier.RationalBezier.sample", "splinepy.rational_bezier.RationalBezier.show", "splinepy.rational_bezier.RationalBezier.showable", "splinepy.rational_bezier.RationalBezier.split", "splinepy.rational_bezier.RationalBezier.support", "splinepy.rational_bezier.RationalBezier.todict", "splinepy.settings", "splinepy.settings.CHECK_BOUNDS", "splinepy.settings.NAME_TO_TYPE", "splinepy.settings.NTHREADS", "splinepy.settings.TOLERANCE", "splinepy.spline", "splinepy.spline.RequiredProperties", "splinepy.spline.RequiredProperties.intersection", "splinepy.spline.RequiredProperties.of", "splinepy.spline.RequiredProperties.union", "splinepy.spline.Spline", "splinepy.spline.Spline.basis", "splinepy.spline.Spline.basis_and_support", "splinepy.spline.Spline.basis_derivative", "splinepy.spline.Spline.basis_derivative_and_support", "splinepy.spline.Spline.check", "splinepy.spline.Spline.clear", "splinepy.spline.Spline.control_mesh_resolutions", "splinepy.spline.Spline.control_point_bounds", "splinepy.spline.Spline.control_points", "splinepy.spline.Spline.copy", "splinepy.spline.Spline.cps", "splinepy.spline.Spline.create", "splinepy.spline.Spline.current_core_properties", "splinepy.spline.Spline.degrees", "splinepy.spline.Spline.derivative", "splinepy.spline.Spline.dim", "splinepy.spline.Spline.ds", "splinepy.spline.Spline.elevate_degrees", "splinepy.spline.Spline.evaluate", "splinepy.spline.Spline.export", "splinepy.spline.Spline.extract", "splinepy.spline.Spline.greville_abscissae", "splinepy.spline.Spline.has_knot_vectors", "splinepy.spline.Spline.integrate", "splinepy.spline.Spline.is_rational", "splinepy.spline.Spline.jacobian", "splinepy.spline.Spline.knot_multiplicities", "splinepy.spline.Spline.knot_vectors", "splinepy.spline.Spline.kvs", "splinepy.spline.Spline.mapper", "splinepy.spline.Spline.multi_index", "splinepy.spline.Spline.name", "splinepy.spline.Spline.para_dim", "splinepy.spline.Spline.parametric_bounds", "splinepy.spline.Spline.proximities", "splinepy.spline.Spline.reduce_degrees", "splinepy.spline.Spline.required_properties", "splinepy.spline.Spline.sample", "splinepy.spline.Spline.show", "splinepy.spline.Spline.show_options", "splinepy.spline.Spline.showable", "splinepy.spline.Spline.spline_data", "splinepy.spline.Spline.support", "splinepy.spline.Spline.todict", "splinepy.spline.Spline.unique_knots", "splinepy.spline.Spline.weights", "splinepy.spline.Spline.whatami", "splinepy.spline.Spline.ws", "splinepy.splinepy_core", "splinepy.splinepy_core.ControlPointPointers", "splinepy.splinepy_core.ControlPointPointers.dim", "splinepy.splinepy_core.ControlPointPointers.len", "splinepy.splinepy_core.ControlPointPointers.set_row", "splinepy.splinepy_core.ControlPointPointers.set_rows", "splinepy.splinepy_core.ControlPointPointers.sync", "splinepy.splinepy_core.ControlPointPointers.sync_rows", "splinepy.splinepy_core.KnotVector", "splinepy.splinepy_core.KnotVector.find_span", "splinepy.splinepy_core.KnotVector.multiplicities", "splinepy.splinepy_core.KnotVector.numpy", "splinepy.splinepy_core.KnotVector.scale", "splinepy.splinepy_core.KnotVector.unique", "splinepy.splinepy_core.ParameterSpace", "splinepy.splinepy_core.ParameterSpace.copy", "splinepy.splinepy_core.ParameterSpace.unique_knots", "splinepy.splinepy_core.PyMultipatch", "splinepy.splinepy_core.PyMultipatch.add_fields", "splinepy.splinepy_core.PyMultipatch.boundary_multipatch", "splinepy.splinepy_core.PyMultipatch.boundary_patch_ids", "splinepy.splinepy_core.PyMultipatch.clear", "splinepy.splinepy_core.PyMultipatch.control_point_offsets", "splinepy.splinepy_core.PyMultipatch.control_points", "splinepy.splinepy_core.PyMultipatch.dim", "splinepy.splinepy_core.PyMultipatch.evaluate", "splinepy.splinepy_core.PyMultipatch.fields", "splinepy.splinepy_core.PyMultipatch.get_interfaces", "splinepy.splinepy_core.PyMultipatch.n_default_threads", "splinepy.splinepy_core.PyMultipatch.name", "splinepy.splinepy_core.PyMultipatch.para_dim", "splinepy.splinepy_core.PyMultipatch.patches", "splinepy.splinepy_core.PyMultipatch.same_parametric_bounds", "splinepy.splinepy_core.PyMultipatch.sample", "splinepy.splinepy_core.PyMultipatch.set_interfaces", "splinepy.splinepy_core.PyMultipatch.sub_multipatch", "splinepy.splinepy_core.PyMultipatch.sub_patch_centers", "splinepy.splinepy_core.PyMultipatch.tolerance", "splinepy.splinepy_core.PyMultipatch.whatami", "splinepy.splinepy_core.PySpline", "splinepy.splinepy_core.PySpline.basis", "splinepy.splinepy_core.PySpline.basis_and_support", "splinepy.splinepy_core.PySpline.basis_derivative", "splinepy.splinepy_core.PySpline.basis_derivative_and_support", "splinepy.splinepy_core.PySpline.control_mesh_resolutions", "splinepy.splinepy_core.PySpline.current_core_properties", "splinepy.splinepy_core.PySpline.derivative", "splinepy.splinepy_core.PySpline.dim", "splinepy.splinepy_core.PySpline.elevate_degrees", "splinepy.splinepy_core.PySpline.evaluate", "splinepy.splinepy_core.PySpline.has_knot_vectors", "splinepy.splinepy_core.PySpline.is_rational", "splinepy.splinepy_core.PySpline.jacobian", "splinepy.splinepy_core.PySpline.name", "splinepy.splinepy_core.PySpline.para_dim", "splinepy.splinepy_core.PySpline.parametric_bounds", "splinepy.splinepy_core.PySpline.proximities", "splinepy.splinepy_core.PySpline.reduce_degrees", "splinepy.splinepy_core.PySpline.sample", "splinepy.splinepy_core.PySpline.support", "splinepy.splinepy_core.PySpline.whatami", "splinepy.splinepy_core.WeightPointers", "splinepy.splinepy_core.WeightPointers.dim", "splinepy.splinepy_core.WeightPointers.len", "splinepy.splinepy_core.WeightPointers.set_row", "splinepy.splinepy_core.WeightPointers.set_rows", "splinepy.splinepy_core.WeightPointers.sync", "splinepy.splinepy_core.WeightPointers.sync_rows", "splinepy.splinepy_core.add", "splinepy.splinepy_core.annul_core", "splinepy.splinepy_core.bezier_extraction_matrix", "splinepy.splinepy_core.boundaries_from_continuity", "splinepy.splinepy_core.boundary_centers", "splinepy.splinepy_core.build_type", "splinepy.splinepy_core.compose", "splinepy.splinepy_core.compose_sensitivities", "splinepy.splinepy_core.composition_derivative", "splinepy.splinepy_core.core_id", "splinepy.splinepy_core.core_ref_count", "splinepy.splinepy_core.derivative_spline", "splinepy.splinepy_core.export_iges", "splinepy.splinepy_core.extract_all_boundary_splines", "splinepy.splinepy_core.extract_bezier_patches", "splinepy.splinepy_core.extract_boundaries", "splinepy.splinepy_core.extract_dim", "splinepy.splinepy_core.global_knot_insertion_matrix", "splinepy.splinepy_core.has_core", "splinepy.splinepy_core.insert_knots", "splinepy.splinepy_core.interfaces_from_boundary_centers", "splinepy.splinepy_core.is_minimal", "splinepy.splinepy_core.knot_insertion_matrix", "splinepy.splinepy_core.multiply", "splinepy.splinepy_core.null_spline", "splinepy.splinepy_core.orientations", "splinepy.splinepy_core.read_iges", "splinepy.splinepy_core.remove_knots", "splinepy.splinepy_core.same_spline_with_knot_vectors", "splinepy.splinepy_core.split", "splinepy.to_derived", "splinepy.utils", "splinepy.utils.data", "splinepy.utils.data.MultipatchData", "splinepy.utils.data.MultipatchData.as_arrow", "splinepy.utils.data.MultipatchData.as_scalar", "splinepy.utils.data.MultipatchData.clear", "splinepy.utils.data.MultipatchData.get", "splinepy.utils.data.MultipatchData.items", "splinepy.utils.data.MultipatchData.keys", "splinepy.utils.data.MultipatchData.pop", "splinepy.utils.data.MultipatchData.values", "splinepy.utils.data.PhysicalSpaceArray", "splinepy.utils.data.PhysicalSpaceArray.all", "splinepy.utils.data.PhysicalSpaceArray.any", "splinepy.utils.data.PhysicalSpaceArray.argmax", "splinepy.utils.data.PhysicalSpaceArray.argmin", "splinepy.utils.data.PhysicalSpaceArray.argpartition", "splinepy.utils.data.PhysicalSpaceArray.argsort", "splinepy.utils.data.PhysicalSpaceArray.astype", "splinepy.utils.data.PhysicalSpaceArray.byteswap", "splinepy.utils.data.PhysicalSpaceArray.choose", "splinepy.utils.data.PhysicalSpaceArray.clip", "splinepy.utils.data.PhysicalSpaceArray.compress", "splinepy.utils.data.PhysicalSpaceArray.conj", "splinepy.utils.data.PhysicalSpaceArray.conjugate", "splinepy.utils.data.PhysicalSpaceArray.copy", "splinepy.utils.data.PhysicalSpaceArray.cumprod", "splinepy.utils.data.PhysicalSpaceArray.cumsum", "splinepy.utils.data.PhysicalSpaceArray.diagonal", "splinepy.utils.data.PhysicalSpaceArray.dot", "splinepy.utils.data.PhysicalSpaceArray.dump", "splinepy.utils.data.PhysicalSpaceArray.dumps", "splinepy.utils.data.PhysicalSpaceArray.fill", "splinepy.utils.data.PhysicalSpaceArray.flatten", "splinepy.utils.data.PhysicalSpaceArray.full_row_indices", "splinepy.utils.data.PhysicalSpaceArray.getfield", "splinepy.utils.data.PhysicalSpaceArray.item", "splinepy.utils.data.PhysicalSpaceArray.itemset", "splinepy.utils.data.PhysicalSpaceArray.max", "splinepy.utils.data.PhysicalSpaceArray.mean", "splinepy.utils.data.PhysicalSpaceArray.min", "splinepy.utils.data.PhysicalSpaceArray.newbyteorder", "splinepy.utils.data.PhysicalSpaceArray.nonzero", "splinepy.utils.data.PhysicalSpaceArray.partition", "splinepy.utils.data.PhysicalSpaceArray.prod", "splinepy.utils.data.PhysicalSpaceArray.ptp", "splinepy.utils.data.PhysicalSpaceArray.put", "splinepy.utils.data.PhysicalSpaceArray.ravel", "splinepy.utils.data.PhysicalSpaceArray.repeat", "splinepy.utils.data.PhysicalSpaceArray.reshape", "splinepy.utils.data.PhysicalSpaceArray.resize", "splinepy.utils.data.PhysicalSpaceArray.round", "splinepy.utils.data.PhysicalSpaceArray.row_indices", "splinepy.utils.data.PhysicalSpaceArray.searchsorted", "splinepy.utils.data.PhysicalSpaceArray.setfield", "splinepy.utils.data.PhysicalSpaceArray.setflags", "splinepy.utils.data.PhysicalSpaceArray.sort", "splinepy.utils.data.PhysicalSpaceArray.squeeze", "splinepy.utils.data.PhysicalSpaceArray.std", "splinepy.utils.data.PhysicalSpaceArray.sum", "splinepy.utils.data.PhysicalSpaceArray.swapaxes", "splinepy.utils.data.PhysicalSpaceArray.take", "splinepy.utils.data.PhysicalSpaceArray.tobytes", "splinepy.utils.data.PhysicalSpaceArray.tofile", "splinepy.utils.data.PhysicalSpaceArray.tolist", "splinepy.utils.data.PhysicalSpaceArray.tostring", "splinepy.utils.data.PhysicalSpaceArray.trace", "splinepy.utils.data.PhysicalSpaceArray.transpose", "splinepy.utils.data.PhysicalSpaceArray.var", "splinepy.utils.data.PhysicalSpaceArray.view", "splinepy.utils.data.SplineData", "splinepy.utils.data.SplineData.as_arrow", "splinepy.utils.data.SplineData.as_scalar", "splinepy.utils.data.SplineData.clear", "splinepy.utils.data.SplineData.get", "splinepy.utils.data.SplineData.items", "splinepy.utils.data.SplineData.keys", "splinepy.utils.data.SplineData.pop", "splinepy.utils.data.SplineData.values", "splinepy.utils.data.SplineDataAdaptor", "splinepy.utils.data.SplineDataAdaptor.arrow_data_only", "splinepy.utils.data.SplineDataAdaptor.as_vertex_data", "splinepy.utils.data.SplineDataAdaptor.data", "splinepy.utils.data.SplineDataAdaptor.function", "splinepy.utils.data.SplineDataAdaptor.has_evaluate", "splinepy.utils.data.SplineDataAdaptor.has_function", "splinepy.utils.data.SplineDataAdaptor.has_locations", "splinepy.utils.data.SplineDataAdaptor.is_spline", "splinepy.utils.data.SplineDataAdaptor.locations", "splinepy.utils.data.SplineDataAdaptor.parametric_bounds", "splinepy.utils.data.cartesian_product", "splinepy.utils.data.enforce_contiguous", "splinepy.utils.data.enforce_contiguous_values", "splinepy.utils.data.make_matrix", "splinepy.utils.data.uniform_query", "splinepy.utils.log", "splinepy.utils.log.configure", "splinepy.utils.log.debug", "splinepy.utils.log.info", "splinepy.utils.log.prepend_log", "splinepy.utils.log.warning", "API References", "splinepy", "&lt;no title&gt;", "Introduction to Splines"], "terms": {"splinepi": [0, 706, 709], "welcom": 0, "appreci": 0, "discuss": [0, 457, 709], "issu": [0, 179, 709], "pull": 0, "request": [0, 16, 45, 126, 128, 340, 429, 448], "onc": [0, 34, 245, 648, 709], "repo": 0, "i": [0, 3, 11, 12, 13, 19, 25, 33, 34, 40, 41, 42, 48, 53, 60, 62, 69, 74, 79, 83, 90, 91, 97, 102, 107, 110, 117, 121, 124, 125, 127, 131, 133, 134, 136, 140, 143, 144, 146, 157, 158, 159, 164, 168, 169, 170, 173, 175, 179, 182, 190, 199, 200, 205, 206, 207, 212, 213, 218, 228, 236, 242, 243, 251, 253, 255, 256, 261, 273, 279, 289, 290, 295, 300, 305, 310, 330, 335, 340, 341, 346, 351, 357, 361, 362, 364, 372, 376, 389, 395, 400, 405, 409, 416, 418, 424, 425, 426, 432, 438, 446, 449, 454, 456, 457, 467, 477, 482, 489, 492, 501, 504, 609, 611, 623, 624, 633, 637, 638, 640, 641, 642, 646, 648, 654, 655, 660, 661, 667, 668, 669, 672, 677, 679, 684, 695, 696, 697, 698, 706, 707, 709], "fork": 0, "one": [0, 3, 62, 119, 133, 138, 143, 147, 157, 164, 168, 175, 200, 205, 289, 290, 300, 305, 310, 335, 340, 341, 346, 389, 418, 623, 638, 641, 642, 662, 697, 701, 704, 709], "possibl": [0, 21, 50, 76, 104, 152, 245, 255, 273, 402, 434, 479, 623, 642, 709], "point": [0, 3, 11, 12, 25, 34, 40, 41, 53, 62, 79, 83, 91, 107, 110, 120, 132, 136, 142, 145, 161, 162, 172, 179, 186, 187, 188, 189, 190, 199, 200, 204, 205, 206, 207, 208, 209, 266, 273, 277, 280, 281, 289, 290, 300, 305, 310, 335, 340, 341, 346, 364, 370, 389, 405, 409, 418, 424, 425, 438, 465, 466, 468, 488, 492, 684, 695, 698, 707, 709], "would": [0, 25, 53, 83, 110, 376, 409, 438, 492, 621, 622, 641, 648, 707], "creat": [0, 79, 107, 155, 167, 252, 253, 284, 289, 290, 295, 300, 305, 310, 315, 320, 325, 330, 335, 340, 341, 346, 351, 405, 630, 684, 698, 699, 706, 707], "new": [0, 11, 40, 77, 79, 105, 107, 130, 132, 133, 142, 143, 213, 253, 364, 368, 370, 380, 403, 405, 424, 469, 610, 621, 623, 625, 646, 648, 654, 655, 667, 672, 678, 697, 709], "environ": 0, "exampl": [0, 34, 91, 124, 130, 154, 182, 192, 236, 273, 376, 455, 457, 462, 469, 478, 481, 482, 623, 624, 637, 638, 640, 641, 642, 648, 654, 655, 659, 660, 661, 667, 669, 672], "us": [0, 11, 21, 23, 34, 40, 50, 52, 76, 79, 80, 91, 104, 107, 108, 124, 135, 136, 139, 149, 154, 164, 165, 175, 179, 184, 187, 188, 189, 190, 199, 204, 206, 207, 208, 210, 212, 213, 245, 261, 267, 273, 280, 281, 289, 290, 295, 300, 305, 310, 312, 320, 322, 330, 335, 340, 341, 346, 351, 361, 363, 364, 365, 372, 387, 389, 402, 405, 406, 424, 434, 436, 449, 457, 469, 479, 487, 488, 489, 606, 623, 625, 641, 642, 648, 655, 660, 661, 668, 684, 695, 698, 706, 707, 709], "conda": 0, "3": [0, 3, 62, 130, 138, 164, 166, 173, 175, 177, 265, 273, 289, 290, 315, 325, 351, 357, 376, 389, 418, 624, 637, 638, 641, 642, 648, 655, 659, 660, 661, 667, 669, 672, 709], "10": [0, 265, 457, 654], "n": [0, 3, 4, 5, 6, 7, 15, 18, 22, 25, 28, 32, 35, 36, 37, 38, 44, 47, 51, 53, 55, 59, 62, 63, 64, 65, 66, 71, 73, 78, 83, 86, 89, 91, 92, 93, 94, 95, 99, 101, 106, 110, 113, 116, 131, 132, 137, 140, 142, 144, 145, 186, 187, 189, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 361, 372, 389, 390, 391, 392, 393, 397, 399, 404, 409, 412, 415, 418, 419, 420, 421, 422, 428, 431, 435, 438, 441, 445, 457, 458, 459, 460, 461, 466, 468, 472, 476, 483, 492, 495, 500, 503, 505, 651, 655, 672, 686, 695, 709], "splinepyenv": 0, "activ": [0, 245], "git": [0, 707], "clone": [0, 707], "github": [0, 707], "com": [0, 695, 707], "path": [0, 259, 635, 668], "your": [0, 449, 709], "cd": [0, 707], "forknam": 0, "submodul": [0, 707], "updat": [0, 660, 706, 707], "init": [0, 267, 707], "recurs": [0, 91, 669, 697, 707], "checkout": 0, "b": [0, 3, 21, 34, 50, 62, 76, 91, 104, 131, 140, 199, 273, 351, 389, 402, 418, 434, 457, 479, 574, 597, 624, 655, 661, 667], "feature0": 0, "pip": [0, 707], "instal": 0, "e": [0, 3, 12, 34, 41, 91, 205, 212, 213, 245, 273, 340, 351, 376, 389, 418, 425, 457, 489, 668, 707, 709], "v": [0, 3, 62, 277, 322, 389, 418, 658], "config": 0, "set": [0, 11, 25, 40, 53, 79, 81, 83, 91, 107, 109, 110, 121, 126, 128, 132, 134, 142, 146, 179, 183, 245, 253, 280, 281, 312, 320, 322, 364, 365, 372, 380, 405, 407, 409, 424, 438, 492, 623, 625, 642, 651, 655, 660, 674, 684, 701, 706, 709], "cmake": [0, 707], "arg": [0, 34, 91, 119, 121, 221, 231, 254, 630, 641, 642, 674], "dsplinepy_mor": 0, "off": [0, 273, 709], "type": [0, 3, 4, 6, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 186, 188, 189, 193, 194, 195, 197, 200, 204, 205, 206, 207, 208, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 242, 243, 245, 246, 248, 249, 251, 252, 253, 254, 256, 258, 259, 261, 262, 265, 266, 267, 268, 270, 271, 273, 277, 278, 280, 281, 282, 283, 287, 288, 293, 294, 295, 298, 299, 303, 304, 308, 309, 313, 314, 318, 319, 320, 323, 324, 328, 329, 330, 333, 334, 338, 339, 344, 345, 346, 349, 350, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 368, 370, 372, 373, 374, 376, 377, 378, 379, 380, 383, 384, 385, 387, 389, 390, 392, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 418, 419, 421, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 440, 441, 442, 443, 444, 445, 446, 449, 454, 455, 456, 457, 458, 460, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 604, 609, 611, 612, 613, 614, 615, 623, 624, 638, 640, 641, 646, 655, 659, 660, 667, 668, 669, 672, 677, 679, 680, 681, 682, 683, 686, 695, 696, 697, 698, 701, 702, 703, 704, 705, 706, 707], "debug": [0, 701, 704, 706], "argument": [0, 3, 11, 34, 40, 62, 79, 91, 107, 132, 133, 135, 142, 143, 149, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 182, 200, 205, 389, 405, 418, 424, 641, 642, 648, 654, 655, 661, 672, 709], "spline": [0, 3, 10, 11, 15, 16, 18, 19, 20, 21, 22, 23, 25, 28, 29, 30, 31, 33, 34, 39, 40, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 60, 62, 68, 71, 73, 74, 76, 78, 79, 80, 83, 86, 87, 88, 90, 91, 96, 99, 101, 102, 104, 106, 107, 108, 110, 113, 114, 115, 117, 119, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 186, 187, 189, 190, 192, 193, 194, 195, 197, 199, 212, 213, 225, 235, 236, 238, 239, 240, 245, 246, 248, 249, 252, 258, 259, 260, 261, 262, 263, 264, 266, 267, 270, 271, 273, 277, 278, 279, 290, 295, 300, 305, 310, 315, 320, 325, 330, 335, 340, 341, 346, 351, 359, 360, 361, 363, 365, 372, 373, 374, 378, 379, 380, 384, 385, 389, 394, 397, 399, 400, 402, 404, 405, 406, 409, 412, 413, 414, 416, 418, 423, 424, 428, 429, 431, 432, 433, 434, 435, 436, 438, 441, 442, 443, 444, 446, 575, 576, 578, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 599, 601, 602, 603, 604, 675, 684, 698, 706], "up": [0, 199, 245, 457, 641, 642, 648, 661], "3d": [0, 287, 293, 298, 303, 308, 313, 318, 323, 328, 333, 338, 344, 349, 354], "both": [0, 25, 53, 83, 110, 190, 199, 205, 389, 409, 438, 492, 661, 684, 709], "parametr": [0, 3, 11, 12, 25, 28, 34, 40, 41, 53, 55, 77, 79, 83, 86, 91, 105, 107, 110, 113, 126, 128, 133, 134, 135, 138, 143, 144, 146, 149, 157, 163, 164, 165, 168, 174, 175, 176, 179, 181, 188, 189, 190, 193, 195, 200, 205, 212, 213, 280, 281, 283, 289, 290, 300, 305, 310, 312, 322, 335, 340, 346, 357, 358, 361, 372, 377, 379, 403, 405, 409, 412, 424, 425, 438, 441, 457, 490, 492, 495, 515, 684, 707, 709], "physic": [0, 3, 20, 23, 25, 49, 52, 53, 62, 80, 83, 108, 110, 131, 132, 140, 142, 144, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 356, 371, 389, 406, 409, 418, 433, 436, 438, 457, 473, 487, 492], "dimens": [0, 3, 20, 28, 49, 55, 62, 79, 86, 91, 107, 113, 131, 132, 133, 135, 140, 141, 142, 143, 144, 148, 149, 163, 164, 165, 174, 175, 176, 179, 181, 188, 190, 212, 213, 265, 283, 289, 290, 300, 305, 310, 330, 335, 340, 346, 351, 371, 377, 379, 389, 405, 412, 418, 433, 441, 457, 473, 490, 495, 638, 695, 707, 709], "thei": [0, 21, 50, 76, 91, 104, 236, 289, 290, 300, 305, 310, 330, 335, 340, 341, 351, 363, 364, 402, 434, 479, 648, 661, 696, 709], "ar": [0, 3, 19, 21, 25, 34, 48, 50, 53, 62, 74, 76, 77, 79, 83, 85, 91, 102, 104, 105, 107, 110, 112, 119, 126, 128, 134, 146, 152, 164, 175, 179, 182, 187, 188, 189, 190, 199, 205, 236, 245, 265, 269, 273, 290, 300, 305, 310, 315, 320, 325, 335, 341, 346, 351, 362, 363, 372, 376, 378, 380, 389, 400, 402, 403, 405, 409, 411, 418, 432, 434, 438, 477, 479, 489, 492, 623, 624, 626, 635, 640, 641, 646, 647, 648, 655, 660, 668, 669, 684, 696, 697, 706, 707], "part": [0, 141, 179, 245, 624, 640], "templat": 0, "paramet": [0, 3, 4, 5, 6, 7, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 242, 243, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 264, 265, 266, 267, 268, 270, 271, 273, 277, 278, 280, 281, 282, 283, 287, 288, 289, 290, 293, 294, 295, 298, 299, 300, 303, 304, 305, 308, 309, 310, 313, 314, 315, 318, 319, 320, 323, 324, 325, 328, 329, 330, 333, 334, 335, 338, 339, 340, 341, 344, 345, 346, 349, 350, 351, 354, 355, 356, 357, 358, 361, 363, 364, 365, 368, 370, 372, 373, 374, 379, 380, 383, 384, 385, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 604, 608, 609, 611, 614, 623, 624, 635, 636, 637, 638, 640, 641, 642, 646, 648, 654, 655, 659, 660, 661, 667, 668, 669, 672, 676, 677, 679, 682, 684, 686, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 709], "wai": [0, 457, 611, 648, 655, 679, 707, 709], "we": [0, 3, 25, 34, 53, 62, 83, 91, 110, 179, 199, 389, 409, 418, 438, 457, 492, 640, 695, 706, 707, 709], "can": [0, 3, 23, 34, 52, 62, 79, 80, 91, 107, 108, 121, 131, 140, 144, 161, 162, 163, 172, 174, 199, 200, 205, 210, 212, 213, 217, 227, 236, 273, 389, 405, 406, 418, 436, 448, 457, 462, 469, 478, 481, 487, 623, 635, 640, 641, 646, 648, 655, 660, 661, 668, 698, 701, 707, 709], "reduc": [0, 27, 54, 84, 111, 410, 440, 493, 707, 709], "compil": [0, 660, 707], "time": [0, 5, 7, 34, 36, 38, 64, 66, 91, 93, 95, 256, 391, 393, 420, 422, 459, 461, 709], "also": [0, 3, 11, 25, 34, 40, 53, 62, 83, 110, 121, 125, 127, 190, 205, 389, 409, 418, 424, 438, 492, 642, 646, 696, 697, 706, 707, 709], "experi": 0, "dure": [0, 179], "develop": 0, "let": [0, 707], "u": [0, 3, 11, 12, 34, 40, 41, 62, 91, 131, 140, 199, 389, 418, 424, 425, 709], "know": [0, 25, 53, 83, 110, 409, 438, 492], "you": [0, 25, 53, 83, 110, 163, 174, 198, 209, 210, 409, 438, 449, 488, 489, 492, 642, 655, 684, 701, 707, 709], "have": [0, 6, 7, 15, 25, 34, 37, 38, 44, 53, 65, 66, 71, 83, 91, 94, 95, 99, 110, 125, 127, 144, 190, 213, 245, 287, 288, 293, 294, 298, 299, 303, 304, 308, 309, 313, 314, 318, 319, 323, 324, 328, 329, 333, 334, 338, 339, 344, 345, 349, 350, 354, 355, 389, 392, 393, 397, 409, 418, 421, 422, 428, 438, 449, 460, 461, 472, 492, 655, 707, 709], "good": [0, 668, 709], "idea": [0, 709], "pep": 0, "8": [0, 621, 640, 648, 660, 707, 709], "guid": [0, 709], "complex": [0, 25, 53, 83, 110, 409, 438, 492, 623, 624, 628, 629, 640, 707, 709], "comphrehens": 0, "fit": [0, 181, 364, 640, 706, 707, 709], "line": [0, 3, 62, 163, 174, 254, 255, 256, 273, 389, 418, 660, 706, 709], "2": [0, 3, 25, 53, 62, 79, 83, 91, 107, 110, 138, 141, 144, 147, 150, 152, 159, 164, 170, 175, 190, 199, 207, 253, 273, 315, 325, 335, 340, 341, 351, 376, 389, 405, 409, 418, 438, 465, 491, 492, 623, 624, 637, 638, 640, 641, 642, 648, 655, 660, 661, 667, 669, 672, 707, 709], "max": [0, 518, 623, 626, 706], "total": [0, 277], "necessari": [0, 315, 325, 655], "first": [0, 34, 91, 132, 142, 199, 273, 295, 320, 346, 351, 642, 648, 661, 668, 707, 709], "letter": [0, 660], "abbrevi": 0, "element": [0, 91, 135, 149, 265, 376, 617, 618, 623, 624, 628, 629, 631, 632, 637, 638, 640, 641, 642, 644, 647, 648, 649, 653, 654, 655, 656, 658, 661, 663, 664, 666, 669, 673, 697, 709], "loop": [0, 256, 642], "kv": [0, 706], "knot_vector": [0, 62, 186, 187, 190, 269, 389, 455, 457, 486, 706, 707, 709], "j": [0, 3, 62, 131, 140, 157, 168, 199, 206, 389, 418, 640, 672, 709], "k": [0, 3, 11, 12, 40, 41, 62, 206, 389, 418, 424, 425, 623, 638, 707], "l": [0, 3, 62, 91, 389, 418], "pure": [0, 238], "index": [0, 264, 376, 488, 625, 641, 642, 648, 695, 707], "enumer": 0, "modul": [0, 1, 119, 122, 237, 274, 284, 447, 605, 660, 706], "import": [0, 119, 243, 637, 707, 709], "lead": 0, "underscor": 0, "from": [0, 11, 12, 25, 28, 40, 41, 53, 55, 62, 83, 86, 110, 113, 119, 121, 124, 130, 134, 146, 154, 157, 163, 164, 165, 166, 168, 174, 175, 176, 177, 218, 228, 242, 243, 252, 256, 259, 262, 273, 335, 340, 341, 363, 368, 379, 409, 412, 424, 425, 438, 441, 457, 492, 495, 623, 625, 646, 662, 666, 667, 695, 698, 707, 709], "_set": 0, "make": [0, 25, 34, 53, 83, 110, 184, 273, 409, 438, 492, 655, 696], "sure": [0, 642, 655], "function": [0, 1, 3, 4, 5, 6, 7, 11, 12, 34, 35, 36, 37, 38, 40, 41, 62, 63, 64, 65, 66, 91, 92, 93, 94, 95, 118, 119, 121, 123, 129, 153, 155, 167, 179, 182, 183, 185, 191, 193, 195, 196, 198, 199, 200, 201, 202, 203, 205, 211, 212, 213, 214, 238, 241, 244, 246, 247, 250, 257, 260, 263, 264, 269, 272, 277, 278, 279, 280, 281, 282, 357, 364, 373, 389, 390, 391, 392, 393, 418, 419, 420, 421, 422, 424, 425, 449, 457, 458, 459, 460, 461, 506, 606, 617, 618, 619, 620, 621, 622, 625, 626, 627, 628, 629, 631, 632, 633, 641, 643, 644, 645, 647, 649, 650, 651, 652, 653, 654, 656, 658, 660, 662, 663, 664, 665, 666, 668, 669, 671, 672, 673, 684, 698, 700, 704, 706, 707], "wrapper": [0, 455, 700], "properli": [0, 660], "see": [0, 3, 29, 30, 34, 56, 57, 62, 79, 87, 88, 91, 107, 114, 115, 119, 183, 200, 201, 202, 203, 204, 205, 206, 273, 312, 322, 384, 389, 405, 413, 414, 418, 442, 443, 496, 498, 623, 648, 658, 660, 661, 707, 709], "g": [0, 205, 212, 213, 245, 351, 376, 668, 709], "helpm": [0, 29, 30, 56, 57, 87, 88, 114, 115, 384, 413, 414, 442, 443, 462, 478, 481, 496, 498, 706, 709], "creator": [0, 469, 706, 709], "": [0, 3, 11, 12, 25, 40, 41, 53, 62, 83, 110, 133, 143, 179, 181, 199, 238, 312, 322, 389, 409, 418, 424, 425, 438, 492, 641, 642, 646, 659, 667, 668, 670, 672, 698, 707, 709], "member": [0, 132, 133, 135, 142, 143, 149, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "For": [0, 3, 25, 34, 53, 62, 83, 91, 110, 389, 409, 418, 438, 457, 492, 654, 658, 669, 707, 709], "ve": 0, "prepar": [0, 235, 684], "clang": 0, "just": [0, 131, 140, 163, 174, 709], "run": 0, "close": [0, 16, 45, 182, 273, 277, 289, 290, 300, 305, 310, 335, 340, 346, 351, 429, 623, 709], "follow": [0, 3, 62, 164, 175, 199, 238, 245, 389, 418, 637, 704, 707, 709], "name": [0, 3, 62, 200, 205, 239, 245, 261, 265, 266, 273, 389, 418, 635, 660, 670, 706, 709], "scheme": 0, "suggest": [0, 709], "googl": 0, "stype": 0, "clear": [0, 706], "except": [0, 641, 660, 669, 709], "file": [0, 121, 239, 242, 243, 245, 246, 253, 256, 259, 261, 262, 266, 269, 273, 635, 660, 668, 706, 707], "hpp": 0, "inl": 0, "cpp": [0, 25, 53, 83, 110, 409, 438, 489, 492], "here": [0, 3, 12, 19, 41, 48, 62, 74, 91, 102, 199, 400, 425, 432, 477, 706, 709], "anoth": [0, 119, 457, 655, 660], "pragma": 0, "To": [0, 179, 372, 623, 684, 709], "code": [0, 642, 646, 709], "command": [0, 120, 709], "pre": 0, "commit": 0, "precommit": 0, "r": [0, 3, 62, 91, 138, 150, 351, 389, 418, 457, 686, 709], "doc": 0, "requir": [0, 200, 205, 265, 273, 277, 280, 281, 320, 453, 454, 455, 456, 494, 623, 684, 707, 709], "txt": 0, "python3": [0, 707], "sourc": [0, 3, 34, 40, 41, 45, 49, 58, 62, 91, 103, 105, 107, 109, 112, 119, 120, 121, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 182, 183, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 215, 225, 235, 236, 239, 240, 242, 243, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 264, 265, 266, 267, 268, 270, 271, 273, 276, 277, 282, 286, 289, 290, 292, 295, 297, 300, 302, 305, 307, 310, 312, 315, 317, 320, 322, 325, 327, 330, 332, 335, 337, 340, 341, 343, 346, 348, 351, 353, 354, 355, 360, 361, 363, 364, 365, 368, 370, 372, 379, 380, 382, 384, 389, 418, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 467, 472, 475, 476, 477, 479, 483, 487, 492, 493, 495, 496, 498, 500, 501, 604, 607, 608, 609, 616, 630, 639, 657, 674, 675, 676, 677, 684, 686, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 707], "handle_markdown": 0, "py": [0, 178, 284, 447, 462, 478, 481, 606, 700], "sphinx": 0, "html": 0, "now": [0, 62, 389, 635, 668, 709], "open": [0, 34, 91, 125, 127, 138, 182, 236, 256, 668, 709], "browser": 0, "class": [2, 3, 34, 61, 62, 91, 123, 124, 129, 130, 153, 154, 178, 179, 191, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 214, 215, 225, 275, 276, 279, 285, 286, 291, 292, 296, 297, 301, 302, 306, 307, 311, 312, 316, 317, 321, 322, 326, 327, 331, 332, 336, 337, 342, 343, 347, 348, 352, 353, 359, 360, 388, 389, 417, 418, 449, 452, 453, 457, 506, 507, 514, 520, 523, 545, 567, 606, 607, 616, 623, 669, 675, 684, 706, 709], "degre": [3, 4, 5, 6, 7, 17, 27, 32, 35, 36, 37, 38, 46, 54, 59, 62, 63, 64, 65, 66, 72, 84, 89, 91, 92, 93, 94, 95, 100, 111, 116, 134, 135, 136, 138, 139, 141, 145, 146, 148, 149, 150, 152, 186, 187, 190, 201, 202, 203, 207, 269, 273, 346, 361, 389, 390, 391, 392, 393, 398, 410, 415, 418, 419, 420, 421, 422, 430, 440, 445, 455, 457, 458, 459, 460, 461, 474, 475, 493, 500, 591, 596, 706, 707, 709], "nonecontrol_point": [3, 62, 79, 107, 162, 187, 189, 190, 236, 269, 273, 389, 405, 418, 455, 457, 616, 706, 707, 709], "base": [3, 34, 62, 91, 124, 130, 139, 148, 154, 160, 171, 179, 192, 199, 210, 215, 225, 276, 277, 280, 286, 290, 292, 295, 297, 300, 302, 305, 307, 310, 312, 317, 320, 322, 327, 330, 332, 335, 337, 341, 343, 346, 348, 351, 353, 360, 387, 389, 418, 453, 457, 507, 514, 520, 523, 545, 567, 604, 607, 616, 623, 660, 669, 675, 684, 696, 706, 707], "bezierbas": [3, 11, 12, 16, 418, 424, 425, 429, 457, 706], "pass": [3, 34, 62, 91, 165, 182, 277, 282, 305, 310, 389, 418, 623, 648, 654], "all": [3, 11, 33, 34, 40, 60, 62, 75, 79, 81, 82, 90, 91, 103, 107, 109, 117, 156, 157, 163, 168, 174, 216, 226, 245, 259, 287, 293, 298, 303, 308, 313, 315, 318, 323, 325, 328, 333, 338, 344, 349, 354, 364, 365, 368, 374, 389, 401, 405, 407, 416, 418, 424, 446, 454, 456, 457, 501, 623, 628, 637, 646, 648, 651, 660, 661, 669, 706, 707, 709], "super": [3, 34, 62, 91, 389, 418], "__init__": [3, 34, 62, 91, 284, 389, 418, 449], "distinguish": 3, "between": [3, 21, 50, 76, 79, 104, 107, 264, 289, 290, 300, 305, 310, 320, 335, 340, 341, 361, 363, 370, 402, 405, 434, 479, 623, 624, 640, 668, 707, 709], "differ": [3, 11, 12, 25, 40, 41, 53, 83, 110, 389, 409, 424, 425, 438, 449, 457, 492, 624, 646, 648, 661, 668, 707], "depend": 3, "space": [3, 23, 52, 62, 79, 80, 107, 108, 165, 176, 179, 199, 245, 253, 265, 273, 280, 356, 358, 389, 405, 406, 418, 436, 487, 655, 709], "simplic": [3, 62, 389, 418], "restrict": [3, 62, 389, 418, 633, 709], "ourselv": [3, 62, 389, 418, 709], "three": [3, 62, 389, 418, 709], "most": [3, 62, 389, 418, 655, 660, 669, 706, 707, 709], "common": [3, 62, 235, 389, 418, 706, 707], "curv": [3, 62, 141, 236, 389, 418, 706, 707], "surfac": [3, 62, 139, 141, 151, 164, 175, 277, 289, 340, 389, 418, 706, 707, 709], "volum": [3, 62, 139, 160, 164, 171, 173, 175, 192, 389, 418, 481, 706, 709], "although": [3, 62, 389, 418, 669], "support": [3, 4, 5, 6, 7, 34, 35, 36, 37, 38, 62, 63, 64, 65, 66, 92, 93, 94, 95, 119, 120, 134, 144, 146, 179, 201, 202, 203, 242, 243, 263, 267, 282, 389, 390, 391, 392, 393, 418, 419, 420, 421, 422, 454, 456, 457, 458, 459, 460, 461, 668, 684, 698, 706, 707, 709], "higher": [3, 62, 133, 143, 164, 175, 389, 418, 709], "document": [3, 34, 62, 91, 200, 201, 202, 203, 204, 205, 206, 389, 418, 457, 617, 618, 619, 620, 621, 622, 625, 626, 627, 628, 629, 631, 632, 633, 643, 644, 645, 647, 649, 650, 651, 652, 653, 654, 656, 658, 661, 662, 663, 664, 665, 666, 671, 672, 673, 706, 707], "more": [3, 62, 79, 107, 119, 120, 183, 199, 200, 201, 202, 203, 204, 205, 206, 273, 312, 322, 389, 405, 418, 457, 709], "inform": [3, 25, 53, 62, 83, 110, 119, 120, 125, 127, 183, 187, 190, 273, 312, 322, 360, 363, 370, 389, 409, 418, 438, 492, 641, 660, 668], "1": [3, 4, 5, 6, 7, 15, 21, 25, 31, 32, 34, 35, 36, 37, 38, 44, 50, 53, 58, 59, 62, 63, 64, 65, 66, 71, 76, 79, 81, 82, 83, 89, 91, 92, 93, 94, 95, 99, 104, 107, 109, 110, 116, 130, 134, 136, 138, 141, 145, 146, 147, 150, 152, 157, 158, 168, 169, 186, 187, 188, 189, 190, 199, 201, 202, 203, 207, 265, 269, 273, 300, 305, 310, 315, 325, 335, 340, 341, 346, 351, 365, 366, 376, 389, 390, 391, 392, 393, 397, 402, 405, 407, 409, 415, 418, 419, 420, 421, 422, 428, 434, 438, 444, 445, 450, 458, 459, 460, 461, 469, 472, 479, 492, 500, 503, 505, 525, 526, 546, 547, 548, 549, 552, 555, 558, 562, 564, 565, 577, 587, 599, 621, 622, 623, 624, 633, 635, 637, 638, 640, 641, 642, 648, 649, 655, 659, 660, 661, 667, 668, 669, 670, 671, 672, 707, 709], "A": [3, 62, 79, 91, 107, 131, 140, 256, 389, 405, 418, 623, 624, 635, 638, 640, 641, 648, 660, 661, 667, 670, 684, 698], "p": [3, 34, 62, 91, 389, 418, 672, 709], "control": [3, 11, 12, 40, 41, 62, 79, 91, 107, 132, 142, 145, 158, 159, 161, 162, 169, 170, 172, 173, 186, 187, 189, 190, 199, 209, 273, 277, 346, 361, 389, 405, 418, 424, 425, 464, 465, 466, 468, 488, 623, 667, 698, 707, 709], "mathbb": [3, 62, 91, 389, 418, 457, 709], "n_": [3, 34, 62, 91, 389, 418, 457, 709], "phy": [3, 62, 389, 418, 457], "dimension": [3, 34, 62, 133, 143, 194, 197, 280, 281, 289, 290, 300, 305, 310, 315, 325, 356, 358, 361, 371, 377, 389, 418, 457, 667, 709], "param": [3, 34, 62, 91, 288, 294, 299, 304, 309, 314, 319, 324, 329, 334, 339, 345, 350, 355, 389, 418, 457], "correspond": [3, 11, 40, 62, 157, 168, 380, 389, 418, 424, 698], "embed": [3, 62, 365, 389, 418, 457, 706, 709], "c": [3, 21, 50, 62, 76, 79, 104, 107, 236, 273, 351, 389, 402, 405, 418, 434, 479, 623, 638, 654, 655, 660, 661, 667, 668, 670, 698, 706, 707, 709], "sum_": [3, 62, 389, 418, 709], "0": [3, 31, 34, 58, 62, 79, 81, 91, 107, 109, 131, 136, 138, 139, 140, 141, 147, 150, 152, 163, 174, 179, 190, 273, 289, 290, 300, 305, 310, 320, 335, 340, 341, 346, 351, 365, 376, 389, 405, 407, 418, 444, 621, 623, 624, 633, 635, 637, 639, 640, 641, 642, 648, 655, 656, 659, 660, 661, 663, 664, 667, 668, 669, 670, 671, 672, 673, 707, 709], "q": [3, 62, 389, 418], "cdot": [3, 12, 41, 425, 698, 709], "two": [3, 21, 50, 62, 76, 104, 199, 266, 289, 290, 300, 305, 310, 363, 370, 389, 402, 418, 434, 479, 642, 648, 707, 709], "m": [3, 6, 7, 11, 15, 37, 38, 40, 44, 62, 65, 66, 71, 94, 95, 99, 187, 188, 189, 190, 389, 392, 393, 397, 418, 421, 422, 424, 428, 457, 460, 461, 472, 686, 709], "due": [3, 62, 709], "tensor": [3, 62, 709], "product": [3, 28, 55, 62, 86, 113, 372, 379, 412, 441, 495, 631, 649, 695, 709], "natur": [3, 62], "basi": [3, 5, 6, 7, 11, 32, 34, 36, 37, 38, 40, 59, 62, 64, 65, 66, 89, 91, 93, 94, 95, 116, 134, 146, 198, 199, 200, 201, 202, 203, 205, 389, 391, 392, 393, 415, 418, 420, 421, 422, 424, 445, 459, 460, 461, 500, 698, 706, 707], "thi": [3, 11, 12, 25, 40, 41, 53, 62, 83, 91, 110, 125, 127, 133, 143, 155, 167, 179, 182, 183, 212, 213, 218, 228, 256, 264, 289, 290, 300, 305, 310, 335, 340, 341, 363, 389, 409, 418, 424, 425, 438, 449, 492, 621, 622, 623, 624, 627, 637, 641, 642, 648, 654, 655, 660, 661, 667, 668, 669, 672, 684, 696, 697, 698, 701, 707, 709], "often": [3, 62], "rewritten": [3, 62], "term": [3, 62, 709], "multi": [3, 34, 62, 79, 107, 405, 488, 707], "variat": [3, 62, 91], "tild": [3, 62, 199, 251, 389, 418], "w": [3, 62, 389, 418, 660, 706, 709], "introduc": [3, 62, 418, 709], "instanc": [3, 62, 389, 418, 696], "construct": [3, 34, 62, 91, 276, 357, 389, 418, 625, 667], "accordingli": [3, 62, 389, 418, 684], "usag": [3, 34, 62, 79, 91, 107, 389, 405, 418, 457], "polynomi": [3, 34, 91, 709], "polynomial_bezi": 3, "para_dim": [3, 4, 5, 6, 7, 15, 16, 18, 21, 22, 25, 31, 32, 35, 36, 37, 38, 44, 45, 47, 50, 51, 53, 58, 59, 62, 63, 64, 65, 66, 71, 73, 76, 78, 83, 89, 92, 93, 94, 95, 99, 101, 104, 106, 110, 116, 157, 158, 159, 163, 164, 166, 168, 169, 170, 173, 174, 175, 176, 177, 200, 201, 202, 203, 204, 205, 206, 207, 208, 236, 269, 305, 310, 372, 389, 390, 391, 392, 393, 397, 399, 402, 404, 409, 415, 418, 419, 420, 421, 422, 428, 429, 431, 434, 435, 438, 444, 445, 457, 458, 459, 460, 461, 464, 471, 472, 474, 476, 479, 483, 491, 492, 500, 554, 563, 591, 593, 594, 598, 601, 603, 706], "list": [3, 11, 17, 27, 31, 33, 40, 46, 54, 58, 60, 62, 72, 75, 77, 79, 84, 85, 90, 100, 103, 105, 107, 111, 112, 117, 137, 156, 157, 163, 164, 165, 166, 168, 174, 175, 177, 187, 190, 212, 213, 217, 227, 236, 239, 245, 246, 248, 249, 252, 258, 259, 261, 262, 264, 266, 270, 271, 273, 277, 279, 280, 281, 283, 289, 290, 295, 300, 305, 310, 315, 320, 325, 330, 335, 340, 341, 346, 351, 361, 362, 368, 374, 378, 389, 398, 401, 403, 405, 410, 411, 416, 424, 430, 440, 444, 446, 454, 455, 456, 457, 475, 484, 485, 486, 493, 501, 502, 521, 522, 524, 532, 563, 577, 581, 586, 587, 588, 589, 591, 593, 599, 600, 601, 603, 608, 609, 624, 648, 661, 669, 676, 677, 686, 695, 696, 709], "like": [3, 4, 5, 6, 7, 15, 16, 18, 22, 25, 28, 31, 32, 34, 35, 36, 37, 38, 44, 45, 47, 51, 53, 55, 58, 59, 62, 63, 64, 65, 66, 71, 73, 78, 79, 83, 86, 89, 91, 92, 93, 94, 95, 99, 101, 106, 107, 110, 113, 116, 144, 186, 188, 190, 194, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 236, 245, 246, 364, 368, 370, 372, 389, 390, 391, 392, 393, 397, 399, 404, 405, 409, 412, 415, 418, 419, 420, 421, 422, 428, 429, 431, 435, 438, 441, 444, 445, 457, 458, 459, 460, 461, 472, 476, 483, 492, 495, 500, 503, 505, 608, 623, 668, 676, 684, 686, 695, 696, 699, 707, 709], "dim": [3, 15, 18, 20, 22, 25, 28, 44, 47, 49, 51, 53, 55, 62, 71, 73, 78, 83, 86, 99, 101, 106, 110, 113, 132, 138, 142, 187, 188, 189, 190, 194, 197, 206, 265, 269, 372, 379, 389, 397, 399, 404, 409, 412, 418, 428, 431, 433, 435, 438, 441, 457, 465, 466, 468, 472, 476, 483, 492, 495, 598, 706], "return": [3, 4, 5, 6, 7, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 193, 194, 195, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 242, 243, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 264, 265, 266, 267, 268, 270, 271, 273, 277, 278, 280, 281, 282, 283, 287, 288, 290, 293, 294, 295, 298, 299, 300, 303, 304, 305, 308, 309, 310, 313, 314, 315, 318, 319, 320, 323, 324, 325, 328, 329, 330, 333, 334, 335, 338, 339, 340, 341, 344, 345, 346, 349, 350, 351, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 368, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 383, 384, 385, 387, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 449, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 516, 517, 519, 604, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 629, 631, 632, 633, 636, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 652, 654, 655, 656, 657, 659, 661, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 676, 677, 679, 680, 681, 682, 683, 686, 695, 696, 697, 698, 701, 702, 703, 704, 705], "method": [3, 34, 62, 91, 124, 130, 154, 179, 192, 199, 210, 215, 225, 276, 286, 292, 297, 302, 307, 312, 317, 322, 327, 332, 337, 343, 348, 353, 360, 389, 418, 453, 457, 507, 514, 520, 523, 545, 567, 607, 616, 641, 642, 654, 668, 675, 684, 706, 709], "attribut": [3, 34, 62, 91, 179, 245, 276, 280, 281, 286, 292, 297, 302, 307, 312, 317, 322, 327, 332, 337, 343, 348, 353, 360, 389, 418, 447, 457, 523, 545, 616, 642, 684], "queri": [4, 5, 6, 7, 15, 18, 22, 25, 32, 35, 36, 37, 38, 44, 47, 51, 53, 59, 63, 64, 65, 66, 71, 73, 78, 79, 83, 89, 92, 93, 94, 95, 99, 101, 106, 107, 110, 116, 124, 126, 128, 189, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 372, 390, 391, 392, 393, 397, 399, 404, 405, 409, 415, 419, 420, 421, 422, 428, 431, 435, 438, 445, 448, 458, 459, 460, 461, 462, 472, 476, 483, 492, 500, 531, 546, 547, 548, 549, 552, 555, 558, 562, 565, 684, 698, 699, 707], "nthread": [4, 5, 6, 7, 15, 18, 22, 25, 28, 32, 35, 36, 37, 38, 44, 47, 51, 53, 55, 59, 63, 64, 65, 66, 71, 73, 78, 83, 86, 89, 92, 93, 94, 95, 99, 101, 106, 110, 113, 116, 200, 201, 202, 203, 204, 205, 206, 207, 208, 361, 363, 365, 372, 379, 390, 391, 392, 393, 397, 399, 404, 409, 412, 415, 419, 420, 421, 422, 428, 431, 435, 438, 441, 445, 458, 459, 460, 461, 472, 476, 483, 492, 495, 500, 524, 531, 539, 546, 547, 548, 549, 552, 555, 558, 562, 564, 565, 577, 587, 599, 706, 707], "valu": [4, 5, 11, 21, 25, 33, 35, 36, 40, 50, 53, 60, 63, 64, 76, 83, 90, 91, 92, 93, 104, 110, 117, 165, 176, 186, 187, 188, 189, 190, 192, 199, 200, 204, 205, 218, 221, 228, 231, 273, 289, 290, 300, 305, 310, 315, 325, 335, 340, 341, 362, 363, 364, 380, 390, 391, 402, 409, 416, 419, 420, 424, 434, 438, 446, 458, 459, 462, 479, 492, 501, 510, 511, 512, 513, 570, 571, 572, 573, 609, 611, 612, 614, 619, 620, 623, 624, 626, 637, 640, 642, 643, 645, 646, 648, 650, 651, 659, 660, 677, 679, 680, 682, 684, 697, 698, 706, 709], "given": [4, 5, 6, 7, 11, 12, 25, 31, 32, 34, 35, 36, 37, 38, 40, 41, 53, 58, 59, 63, 64, 65, 66, 79, 83, 89, 92, 93, 94, 95, 107, 110, 116, 121, 131, 132, 133, 134, 136, 140, 142, 143, 144, 146, 147, 156, 163, 174, 176, 179, 187, 188, 190, 192, 194, 197, 268, 273, 289, 290, 300, 305, 310, 335, 365, 376, 390, 391, 392, 393, 405, 409, 415, 419, 420, 421, 422, 424, 425, 438, 444, 445, 454, 456, 458, 459, 460, 461, 492, 500, 515, 518, 608, 609, 611, 619, 620, 623, 626, 627, 631, 632, 640, 643, 644, 645, 646, 649, 650, 656, 663, 664, 666, 673, 676, 677, 679, 698, 699, 709], "arrai": [4, 5, 6, 7, 15, 16, 18, 22, 25, 28, 31, 32, 35, 36, 37, 38, 44, 45, 47, 51, 53, 55, 58, 59, 62, 63, 64, 65, 66, 71, 73, 78, 79, 83, 86, 89, 92, 93, 94, 95, 99, 101, 106, 107, 110, 113, 116, 126, 128, 144, 145, 186, 187, 188, 189, 190, 194, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 236, 264, 287, 289, 290, 293, 295, 298, 300, 303, 305, 308, 310, 313, 315, 318, 320, 323, 325, 328, 333, 335, 338, 341, 344, 346, 349, 351, 354, 362, 364, 368, 370, 372, 376, 380, 390, 391, 392, 393, 397, 399, 404, 405, 409, 412, 415, 418, 419, 420, 421, 422, 428, 429, 431, 435, 438, 441, 444, 445, 457, 458, 459, 460, 461, 472, 476, 483, 484, 492, 495, 500, 503, 505, 517, 608, 616, 621, 622, 623, 624, 625, 626, 627, 630, 633, 635, 636, 637, 638, 640, 641, 642, 644, 646, 648, 649, 652, 653, 654, 655, 659, 660, 661, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 676, 684, 686, 695, 696, 697, 699, 707], "n_thread": [4, 5, 18, 22, 32, 35, 36, 47, 51, 59, 63, 64, 73, 78, 89, 92, 93, 101, 106, 116, 390, 391, 399, 404, 415, 419, 420, 431, 435, 445, 458, 459, 476, 483, 500], "int": [4, 5, 6, 7, 15, 18, 20, 22, 25, 28, 31, 32, 35, 36, 37, 38, 44, 47, 49, 51, 53, 55, 58, 59, 63, 64, 65, 66, 71, 73, 77, 78, 79, 83, 85, 86, 89, 92, 93, 94, 95, 99, 101, 105, 106, 107, 110, 112, 113, 116, 135, 136, 138, 141, 149, 150, 163, 164, 165, 166, 174, 175, 176, 177, 186, 187, 190, 200, 201, 202, 203, 204, 205, 206, 207, 208, 236, 253, 273, 283, 340, 356, 358, 361, 363, 364, 365, 366, 371, 372, 377, 379, 380, 390, 391, 392, 393, 397, 399, 403, 404, 405, 409, 411, 412, 415, 419, 420, 421, 422, 428, 431, 433, 435, 438, 441, 444, 445, 458, 459, 460, 461, 472, 473, 476, 483, 490, 492, 495, 500, 508, 509, 510, 515, 524, 525, 526, 531, 539, 546, 547, 548, 549, 552, 555, 558, 562, 564, 565, 568, 569, 570, 577, 583, 584, 587, 590, 591, 593, 594, 596, 598, 599, 601, 603, 623, 640, 642, 648, 655, 659, 661, 669, 672, 698], "prod": [4, 5, 6, 7, 32, 35, 36, 37, 38, 59, 63, 64, 65, 66, 89, 92, 93, 94, 95, 116, 201, 202, 203, 207, 390, 391, 392, 393, 415, 419, 420, 421, 422, 445, 458, 459, 460, 461, 500, 706], "np": [4, 5, 6, 7, 15, 18, 21, 22, 25, 28, 32, 33, 35, 36, 37, 38, 44, 47, 50, 51, 53, 55, 59, 60, 63, 64, 65, 66, 71, 73, 76, 78, 79, 83, 86, 89, 90, 92, 93, 94, 95, 99, 101, 104, 106, 107, 110, 113, 116, 117, 126, 128, 133, 135, 143, 149, 193, 195, 201, 202, 203, 204, 206, 207, 208, 210, 269, 287, 288, 289, 290, 293, 294, 295, 298, 299, 300, 303, 304, 305, 308, 309, 310, 313, 314, 315, 318, 319, 320, 323, 324, 325, 328, 329, 330, 333, 334, 335, 338, 339, 340, 341, 344, 345, 346, 349, 350, 351, 354, 355, 357, 362, 372, 376, 379, 380, 387, 390, 391, 392, 393, 397, 399, 402, 404, 405, 409, 412, 415, 416, 419, 420, 421, 422, 428, 431, 434, 435, 438, 441, 445, 446, 458, 459, 460, 461, 464, 465, 466, 468, 471, 472, 474, 476, 479, 483, 484, 491, 492, 495, 500, 501, 609, 623, 624, 637, 638, 639, 640, 641, 642, 648, 655, 657, 659, 660, 661, 667, 669, 672, 677, 695, 696, 698, 707], "ndarrai": [4, 5, 6, 7, 15, 18, 21, 22, 25, 28, 32, 33, 35, 36, 37, 38, 44, 47, 50, 51, 53, 55, 59, 60, 63, 64, 65, 66, 71, 73, 76, 78, 83, 86, 89, 90, 92, 93, 94, 95, 99, 101, 104, 106, 110, 113, 116, 117, 133, 135, 143, 145, 149, 193, 195, 201, 202, 203, 204, 206, 207, 208, 269, 287, 288, 289, 290, 293, 294, 295, 298, 299, 300, 303, 304, 305, 308, 309, 310, 313, 314, 318, 319, 320, 323, 324, 328, 329, 330, 333, 334, 335, 338, 339, 340, 341, 344, 345, 349, 350, 351, 354, 355, 357, 362, 366, 369, 372, 375, 376, 379, 380, 381, 387, 390, 391, 392, 393, 397, 399, 402, 404, 409, 412, 415, 416, 419, 420, 421, 422, 428, 431, 434, 435, 438, 441, 445, 446, 458, 459, 460, 461, 464, 465, 466, 468, 471, 472, 474, 476, 479, 483, 491, 492, 495, 500, 501, 510, 511, 512, 513, 516, 517, 519, 526, 528, 531, 533, 539, 540, 542, 546, 547, 548, 549, 552, 554, 555, 558, 562, 563, 564, 565, 571, 572, 573, 577, 578, 585, 587, 589, 591, 593, 594, 596, 599, 601, 603, 609, 616, 623, 624, 638, 642, 652, 654, 669, 672, 677, 695, 696, 698], "id": [5, 7, 32, 36, 38, 59, 64, 66, 89, 93, 95, 116, 209, 265, 273, 362, 364, 365, 368, 376, 380, 391, 393, 415, 420, 422, 445, 459, 461, 488, 500, 510, 511, 513, 570, 571, 573], "same": [5, 7, 16, 36, 38, 45, 64, 66, 93, 95, 134, 146, 161, 162, 172, 200, 205, 210, 245, 251, 389, 391, 393, 420, 422, 429, 459, 461, 489, 623, 624, 637, 639, 646, 654, 657, 669, 670, 672, 696, 699, 709], "call": [5, 7, 13, 34, 36, 38, 42, 64, 66, 69, 91, 93, 95, 97, 132, 133, 134, 135, 142, 143, 146, 149, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 193, 194, 195, 197, 201, 202, 203, 221, 222, 231, 232, 252, 364, 391, 393, 395, 420, 422, 426, 459, 461, 467, 655, 660, 669, 701, 709], "order": [6, 7, 15, 16, 37, 38, 44, 45, 65, 66, 71, 91, 94, 95, 99, 193, 194, 195, 196, 197, 199, 213, 264, 265, 273, 280, 281, 392, 393, 397, 421, 422, 428, 429, 460, 461, 472, 548, 549, 552, 585, 621, 622, 623, 638, 646, 648, 652, 654, 655, 658, 661, 667, 668, 670, 672, 695, 709], "deriv": [6, 7, 11, 12, 16, 23, 34, 37, 38, 40, 41, 45, 52, 65, 66, 80, 94, 95, 108, 180, 198, 199, 200, 205, 277, 287, 293, 298, 303, 308, 313, 315, 318, 323, 325, 328, 333, 335, 338, 340, 341, 344, 349, 351, 354, 392, 393, 406, 421, 422, 424, 425, 429, 436, 449, 460, 461, 487, 604, 698, 706, 707, 709], "evalu": [6, 15, 22, 37, 44, 51, 65, 71, 78, 94, 99, 106, 179, 187, 189, 190, 200, 204, 205, 206, 207, 208, 280, 281, 289, 290, 300, 305, 310, 330, 335, 340, 341, 351, 357, 387, 392, 397, 404, 421, 428, 435, 460, 472, 483, 617, 618, 684, 706, 707], "iff": [6, 7, 15, 37, 38, 44, 65, 66, 71, 94, 95, 99, 158, 159, 164, 166, 169, 170, 173, 175, 177, 212, 213, 236, 392, 393, 397, 421, 422, 428, 460, 461, 472, 480, 482], "shape": [6, 7, 15, 25, 37, 38, 44, 53, 65, 66, 71, 83, 94, 95, 99, 110, 147, 148, 152, 199, 287, 288, 293, 294, 298, 299, 303, 304, 308, 309, 313, 314, 318, 319, 323, 324, 328, 329, 333, 334, 338, 339, 344, 345, 349, 350, 354, 355, 389, 392, 393, 397, 409, 421, 422, 428, 438, 460, 461, 472, 492, 623, 639, 654, 655, 672, 707, 709], "basis_deriv": [7, 38, 66, 95, 393, 422, 461, 706], "properti": [8, 9, 24, 26, 67, 82, 91, 180, 181, 184, 261, 278, 279, 280, 281, 283, 356, 357, 358, 362, 371, 373, 374, 376, 377, 378, 383, 385, 387, 408, 437, 439, 453, 454, 456, 462, 464, 465, 466, 468, 469, 471, 473, 474, 478, 480, 481, 482, 484, 485, 486, 488, 489, 490, 491, 494, 497, 499, 502, 503, 504, 505, 529, 530, 534, 535, 536, 537, 538, 543, 544, 550, 553, 556, 557, 559, 560, 561, 566, 672], "core": [10, 39, 68, 96, 394, 423, 457, 463], "save": [10, 13, 25, 39, 42, 53, 68, 69, 83, 96, 97, 110, 239, 245, 248, 258, 261, 270, 374, 394, 395, 409, 423, 426, 438, 463, 467, 492, 610, 614, 678, 682], "data": [10, 13, 39, 42, 68, 69, 96, 97, 134, 146, 242, 261, 280, 281, 385, 394, 395, 423, 426, 463, 467, 499, 706, 707, 709], "inner_funct": [11, 40, 424], "compute_sensit": [11, 40, 424], "fals": [11, 25, 33, 40, 53, 60, 77, 79, 83, 85, 90, 105, 107, 110, 112, 117, 134, 146, 164, 166, 175, 177, 182, 187, 190, 200, 205, 212, 245, 255, 259, 261, 273, 282, 370, 372, 375, 403, 405, 409, 411, 416, 424, 438, 446, 448, 492, 501, 533, 562, 617, 618, 619, 620, 623, 624, 643, 644, 645, 649, 650, 655, 660, 663, 664, 673, 674, 695, 696, 698, 701], "calcul": [11, 16, 23, 40, 45, 52, 80, 108, 189, 199, 204, 206, 207, 208, 277, 280, 406, 424, 429, 436, 487], "form": [11, 12, 16, 40, 41, 45, 179, 199, 206, 207, 240, 249, 259, 271, 289, 290, 300, 312, 315, 322, 325, 335, 374, 376, 424, 425, 429, 637, 666, 672, 707, 709], "composit": [11, 12, 40, 41, 75, 103, 357, 401, 424, 425, 707], "inner": [11, 12, 40, 41, 141, 150, 152, 290, 300, 305, 310, 320, 335, 340, 341, 346, 351, 424, 425, 580, 581, 582, 707], "caller": [11, 40, 424], "outer": [11, 12, 40, 41, 141, 150, 277, 278, 424, 425, 580, 581, 582, 707], "deform": [11, 12, 40, 41, 178, 179, 180, 182, 278, 280, 424, 425], "an": [11, 12, 40, 41, 131, 133, 135, 138, 140, 143, 149, 179, 273, 289, 312, 322, 325, 346, 368, 376, 389, 418, 424, 425, 457, 624, 625, 626, 636, 640, 641, 642, 648, 653, 654, 655, 661, 666, 668, 669, 672, 696, 697, 707], "mathcal": [11, 12, 40, 41, 424, 425, 698], "t": [11, 12, 25, 40, 41, 53, 83, 110, 125, 127, 164, 175, 315, 325, 409, 424, 425, 438, 480, 492, 609, 623, 655, 672, 677, 707], "repres": [11, 21, 23, 40, 50, 52, 76, 79, 80, 104, 107, 108, 131, 140, 155, 156, 167, 199, 273, 277, 315, 325, 361, 362, 365, 389, 402, 405, 406, 424, 434, 436, 479, 487, 709], "mathbf": [11, 40, 199, 424, 698, 709], "big": [11, 40, 424, 624, 646], "quad": [11, 40, 424, 709], "foral": [11, 40, 424], "If": [11, 21, 25, 40, 50, 53, 76, 83, 91, 104, 110, 125, 127, 132, 133, 134, 142, 143, 146, 164, 175, 182, 212, 213, 242, 243, 245, 251, 256, 261, 277, 364, 376, 380, 402, 409, 424, 434, 438, 449, 454, 456, 479, 492, 611, 623, 624, 640, 642, 648, 655, 668, 669, 679, 684, 695, 696, 697, 698, 707, 709], "flag": [11, 40, 79, 107, 405, 424, 660, 674], "respect": [11, 12, 25, 40, 41, 53, 83, 110, 155, 167, 199, 245, 277, 289, 290, 300, 305, 310, 315, 325, 330, 335, 340, 341, 351, 409, 424, 425, 438, 492, 660, 684, 709], "posit": [11, 12, 25, 40, 41, 53, 83, 110, 157, 168, 181, 273, 280, 340, 357, 363, 372, 376, 387, 409, 424, 425, 438, 492, 648, 707], "represent": [11, 16, 40, 45, 165, 176, 199, 374, 424, 429, 608, 624, 676, 684, 707, 709], "which": [11, 12, 40, 41, 79, 107, 131, 132, 140, 142, 157, 168, 199, 346, 376, 405, 424, 425, 623, 641, 648, 659, 660, 661, 684, 706, 707], "scalar": [11, 40, 204, 389, 418, 424, 609, 637, 641, 642, 669, 677, 684], "composition_deriv": [11, 40, 424, 706], "comput": [11, 12, 40, 41, 186, 194, 197, 199, 200, 205, 424, 425, 684, 707, 709], "concern": [11, 12, 40, 41, 424, 425, 706], "geometr": [11, 40, 199, 424, 469, 707, 709], "c_i": [11, 40, 424], "frac": [11, 12, 40, 41, 91, 199, 206, 207, 389, 418, 424, 425, 709], "partial": [11, 12, 40, 41, 199, 206, 207, 424, 425, 661, 707], "b_i": [11, 40, 199, 424], "where": [11, 34, 40, 77, 105, 187, 189, 190, 204, 289, 290, 295, 300, 305, 310, 335, 340, 341, 403, 424, 617, 618, 637, 643, 644, 645, 649, 658, 663, 664, 673, 695, 697, 706, 707, 709], "associ": [11, 40, 91, 199, 424, 698], "bool": [11, 13, 25, 33, 40, 42, 53, 60, 69, 77, 79, 83, 85, 90, 97, 105, 107, 110, 112, 117, 125, 127, 134, 135, 136, 139, 146, 149, 163, 164, 166, 174, 175, 177, 182, 187, 188, 189, 190, 200, 205, 212, 213, 236, 239, 245, 246, 253, 259, 261, 273, 277, 282, 361, 364, 370, 375, 395, 403, 405, 409, 411, 416, 424, 426, 438, 446, 448, 467, 480, 482, 492, 501, 524, 533, 539, 562, 592, 595, 623, 624, 655, 660, 695, 696, 698, 701], "true": [11, 13, 19, 30, 40, 42, 48, 57, 69, 74, 77, 85, 88, 97, 102, 105, 112, 115, 125, 126, 127, 128, 134, 135, 136, 139, 141, 146, 149, 150, 152, 163, 164, 174, 175, 182, 183, 187, 188, 189, 190, 212, 213, 236, 239, 245, 246, 253, 259, 261, 273, 287, 288, 293, 294, 298, 299, 303, 304, 308, 309, 313, 314, 318, 319, 323, 324, 328, 329, 333, 334, 338, 339, 344, 345, 349, 350, 354, 355, 361, 384, 395, 400, 403, 411, 414, 424, 426, 432, 443, 448, 467, 477, 480, 482, 498, 617, 618, 623, 624, 643, 644, 645, 649, 655, 660, 663, 664, 667, 673, 695, 698], "sensit": [11, 40, 280, 289, 290, 300, 305, 310, 315, 325, 330, 335, 340, 341, 351, 424], "default": [11, 13, 25, 33, 40, 42, 53, 60, 69, 83, 90, 97, 110, 117, 134, 136, 138, 139, 141, 146, 147, 150, 152, 157, 164, 168, 175, 179, 182, 187, 190, 212, 213, 218, 228, 236, 255, 256, 259, 261, 273, 346, 365, 395, 409, 416, 424, 426, 438, 446, 450, 451, 467, 492, 501, 608, 609, 611, 614, 623, 624, 638, 646, 648, 655, 661, 667, 668, 676, 677, 679, 682, 695, 696, 706], "option": [11, 40, 79, 107, 119, 121, 136, 138, 139, 141, 147, 150, 152, 193, 194, 195, 197, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 229, 230, 231, 234, 236, 239, 245, 246, 273, 383, 405, 424, 497, 623, 624, 638, 646, 648, 655, 659, 660, 661, 667, 684, 695, 707], "intern": [11, 25, 34, 40, 53, 83, 110, 124, 154, 164, 175, 201, 202, 203, 346, 409, 424, 438, 492], "inner_deriv": [12, 41, 425, 582], "when": [12, 41, 357, 425, 623, 641, 642, 648, 660, 661, 668, 709], "differenti": [12, 41, 425, 709], "constant": [12, 41, 425, 709], "compose_sensit": [12, 41, 425, 706], "its": [12, 41, 135, 149, 179, 312, 322, 376, 425, 648, 655, 660, 670, 672, 707], "some": [12, 41, 121, 192, 205, 289, 290, 300, 305, 310, 315, 325, 330, 335, 340, 341, 351, 425, 606, 642, 660, 668, 707], "design": [12, 41, 280, 281, 289, 290, 300, 305, 310, 315, 325, 330, 335, 340, 341, 351, 425, 709], "variabl": [12, 41, 277, 280, 281, 289, 290, 300, 305, 310, 315, 325, 330, 335, 340, 341, 351, 425, 447, 641, 642], "alpha": [12, 41, 236, 425], "compos": [12, 41, 376, 425, 706, 707], "geometri": [12, 23, 41, 52, 80, 108, 130, 192, 199, 245, 246, 265, 278, 406, 425, 436, 487, 707], "refer": [12, 23, 34, 41, 52, 80, 91, 108, 125, 127, 131, 140, 199, 376, 406, 425, 436, 457, 487, 617, 618, 619, 620, 621, 622, 625, 626, 627, 628, 629, 631, 632, 633, 643, 644, 645, 647, 649, 650, 651, 652, 653, 654, 655, 656, 661, 662, 663, 664, 665, 666, 671, 672, 673, 707, 709], "coordin": [12, 25, 41, 53, 83, 91, 110, 199, 245, 277, 340, 387, 409, 425, 438, 492, 515, 707, 709], "composition_d": [12, 41, 425], "saved_data": [13, 42, 69, 97, 395, 426, 467], "deepcopi": [13, 42, 69, 97, 395, 426, 467], "store": [13, 42, 69, 97, 200, 205, 264, 315, 325, 360, 362, 370, 376, 378, 395, 426, 467, 484, 502, 611, 623, 655, 679, 707], "newli": [13, 42, 69, 97, 395, 426, 467, 623], "initi": [13, 25, 42, 53, 69, 83, 97, 110, 395, 409, 426, 438, 457, 467, 492, 611, 643, 645, 649, 664, 679, 706, 707], "self": [13, 14, 20, 31, 42, 43, 49, 58, 69, 70, 97, 98, 132, 133, 135, 142, 143, 149, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 184, 193, 194, 195, 197, 201, 202, 203, 366, 367, 369, 375, 381, 386, 395, 396, 426, 427, 433, 444, 467, 470, 503, 505, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 521, 522, 524, 525, 526, 527, 528, 531, 532, 533, 539, 540, 541, 542, 546, 547, 548, 549, 551, 552, 554, 555, 558, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 624], "exclud": [13, 19, 42, 48, 69, 74, 97, 102, 245, 395, 400, 426, 432, 467, 477, 709], "coordinate_refer": [13, 42, 69, 97, 395, 426, 467], "new_splin": [13, 42, 69, 97, 395, 426, 467], "splinepy_cor": [14, 43, 70, 98, 366, 367, 369, 375, 381, 386, 396, 427, 470, 706], "pysplin": [14, 43, 70, 98, 396, 427, 457, 470, 574, 575, 576, 578, 580, 581, 582, 583, 584, 585, 588, 589, 590, 592, 593, 597, 598, 601, 602, 603, 706], "dict": [14, 29, 30, 33, 43, 56, 57, 60, 70, 87, 88, 90, 98, 114, 115, 117, 165, 182, 187, 190, 200, 205, 218, 228, 235, 236, 242, 261, 267, 268, 384, 396, 413, 414, 416, 427, 442, 443, 446, 449, 470, 494, 496, 498, 501, 551, 610, 612, 613, 615, 678, 680, 681, 683, 697], "result": [15, 18, 22, 28, 44, 47, 51, 55, 71, 73, 78, 86, 99, 101, 106, 113, 131, 135, 140, 149, 200, 205, 273, 289, 295, 372, 379, 397, 399, 404, 412, 428, 431, 435, 441, 472, 476, 483, 484, 495, 502, 623, 639, 646, 657, 668, 709], "describ": [16, 45, 79, 107, 139, 141, 150, 152, 183, 280, 281, 289, 290, 295, 300, 305, 310, 320, 330, 335, 340, 341, 346, 351, 405, 429, 660, 709], "parametric_dimens": [17, 27, 46, 54, 72, 77, 79, 84, 85, 100, 105, 107, 111, 112, 398, 403, 405, 410, 411, 430, 440, 475, 493], "elev": [17, 46, 72, 100, 398, 430, 475, 707], "fname": [19, 48, 74, 102, 239, 240, 242, 243, 245, 246, 248, 249, 251, 253, 258, 259, 261, 262, 265, 266, 267, 268, 270, 271, 273, 400, 432, 477, 586, 600], "pleas": [19, 48, 74, 102, 182, 184, 400, 432, 477, 707, 709], "awar": [19, 48, 74, 102, 182, 400, 432, 477], "limit": [19, 48, 74, 102, 163, 174, 182, 400, 432, 477, 626, 707, 709], "ig": [19, 48, 74, 102, 400, 432, 477, 706, 707], "vtk": [19, 48, 74, 102, 400, 432, 477], "becaus": [19, 48, 74, 102, 400, 432, 477, 641], "str": [19, 48, 74, 102, 155, 167, 182, 236, 239, 240, 242, 243, 246, 248, 249, 251, 254, 255, 256, 258, 259, 261, 262, 265, 267, 268, 269, 270, 271, 289, 290, 300, 305, 310, 335, 346, 351, 400, 432, 454, 455, 456, 477, 489, 504, 579, 586, 600, 608, 609, 611, 614, 623, 635, 640, 648, 661, 668, 670, 676, 677, 679, 682, 701, 702, 703, 704, 705], "extract": [20, 49, 75, 79, 103, 107, 124, 132, 133, 135, 142, 143, 149, 365, 401, 405, 433, 706, 707], "singl": [20, 49, 151, 263, 267, 368, 433, 637, 641, 642, 648, 660, 661, 695, 707, 709], "duplicate_toler": [21, 50, 76, 104, 402, 434, 479], "grevil": [21, 50, 76, 104, 402, 434, 479], "abscissa": [21, 50, 76, 104, 402, 434, 479], "float": [21, 25, 27, 50, 53, 54, 76, 77, 83, 84, 85, 104, 105, 110, 111, 112, 135, 136, 137, 138, 139, 141, 147, 148, 149, 150, 151, 152, 165, 176, 179, 181, 187, 189, 190, 194, 197, 236, 261, 266, 273, 289, 290, 300, 305, 310, 335, 340, 341, 346, 351, 402, 403, 409, 410, 411, 434, 438, 440, 451, 479, 492, 493, 515, 518, 562, 563, 570, 576, 577, 591, 594, 596, 599, 601, 623, 696], "neg": [21, 25, 50, 53, 76, 83, 104, 110, 362, 376, 402, 409, 434, 438, 479, 492, 709], "duplic": [21, 50, 76, 104, 402, 434, 479], "famili": [21, 34, 50, 76, 91, 104, 402, 434, 457, 479, 706], "otherwis": [21, 50, 76, 77, 85, 104, 105, 112, 131, 140, 253, 402, 403, 411, 434, 479, 623, 638, 667, 684, 709], "filter": [21, 50, 76, 104, 402, 434, 479], "out": [21, 50, 76, 104, 120, 242, 243, 402, 434, 479, 617, 618, 619, 620, 624, 625, 626, 627, 631, 632, 643, 644, 645, 649, 650, 656, 663, 664, 666, 671, 673, 707], "adjac": [21, 50, 76, 104, 402, 434, 479], "toler": [21, 25, 27, 50, 53, 54, 76, 83, 84, 85, 104, 110, 111, 112, 179, 266, 273, 363, 370, 402, 409, 410, 411, 434, 438, 440, 479, 492, 493, 562, 563, 576, 577, 591, 594, 596, 599, 601, 706], "consid": [21, 50, 76, 91, 104, 157, 168, 363, 370, 402, 434, 479, 709], "equal": [21, 50, 76, 104, 131, 140, 144, 361, 370, 402, 434, 479, 648, 709], "retriev": [23, 52, 80, 108, 179, 200, 205, 246, 370, 406, 436, 487, 709], "get": [23, 52, 80, 108, 182, 406, 436, 487, 488, 706], "gradient": [23, 52, 80, 108, 199, 200, 201, 204, 205, 207, 406, 436, 487, 706], "hessian": [23, 52, 80, 108, 199, 200, 202, 205, 406, 436, 487, 706], "field": [23, 52, 80, 108, 198, 199, 204, 205, 206, 207, 208, 245, 315, 325, 361, 406, 436, 487, 524, 623, 640, 641, 646, 648, 659, 661, 706], "initial_guess_sample_resolut": [25, 53, 83, 110, 409, 438, 492, 562], "max_iter": [25, 53, 83, 110, 409, 438, 492, 562], "aggressive_search_bound": [25, 53, 83, 110, 409, 438, 492, 562], "return_verbos": [25, 53, 83, 110, 409, 438, 492], "find": [25, 53, 83, 110, 209, 242, 243, 409, 438, 488, 492, 515, 658, 661, 709], "map": [25, 53, 83, 110, 179, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 264, 273, 409, 438, 457, 492, 624, 698, 707], "nearest": [25, 53, 83, 110, 409, 438, 492, 669, 707], "known": [25, 53, 83, 91, 110, 409, 438, 492, 709], "invers": [25, 53, 83, 110, 199, 346, 409, 438, 492, 667, 707], "guess": [25, 53, 83, 110, 409, 438, 492, 707], "search": [25, 53, 83, 110, 409, 438, 492, 707], "kd": [25, 53, 83, 110, 409, 438, 492], "tree": [25, 53, 83, 110, 409, 438, 492, 707], "With": [25, 53, 62, 83, 110, 199, 409, 438, 492, 698], "sampl": [25, 53, 83, 110, 163, 164, 166, 174, 175, 177, 235, 409, 438, 492, 684, 706], "plant": [25, 53, 83, 110, 409, 438, 492], "The": [25, 34, 53, 83, 110, 136, 138, 141, 157, 168, 179, 199, 245, 289, 290, 300, 305, 310, 315, 322, 325, 376, 409, 438, 457, 492, 624, 635, 637, 638, 640, 642, 646, 648, 655, 659, 660, 661, 667, 668, 669, 707, 709], "object": [25, 53, 83, 110, 124, 130, 131, 140, 154, 163, 174, 179, 182, 192, 194, 197, 210, 218, 221, 228, 231, 235, 236, 240, 242, 243, 246, 266, 277, 353, 373, 386, 409, 438, 492, 525, 541, 609, 611, 614, 616, 635, 637, 641, 646, 655, 659, 667, 668, 669, 677, 679, 682, 696, 707, 709], "re": [25, 53, 83, 110, 409, 438, 492], "behavior": [25, 53, 83, 110, 409, 438, 492, 667, 670], "each": [25, 28, 53, 55, 83, 86, 91, 110, 113, 150, 190, 204, 253, 254, 372, 379, 409, 412, 438, 441, 453, 492, 495, 642, 656, 668, 709], "doesn": [25, 53, 83, 110, 125, 127, 409, 438, 492, 609, 655, 677], "ani": [25, 53, 83, 110, 182, 361, 409, 438, 449, 451, 492, 623, 646, 667, 684, 706, 707], "inplac": [25, 53, 83, 110, 212, 213, 253, 409, 438, 492, 616, 624], "chang": [25, 53, 83, 110, 184, 212, 409, 438, 492, 616, 623, 635, 646, 655, 660, 661, 668, 669, 672, 695, 709], "avoid": [25, 53, 83, 110, 179, 409, 438, 492, 623, 642], "rais": [25, 53, 83, 110, 242, 243, 409, 438, 492, 623, 625, 651, 655, 666, 709], "runtim": [25, 53, 83, 110, 409, 438, 492], "error": [25, 53, 83, 110, 409, 438, 492], "control_mesh_resolut": [25, 53, 83, 110, 409, 438, 492, 706], "recommend": [25, 53, 83, 110, 409, 438, 492, 706], "larg": [25, 53, 83, 110, 409, 438, 492, 709], "converg": [25, 53, 83, 110, 409, 438, 492], "criteria": [25, 53, 83, 110, 409, 438, 492], "current": [25, 33, 53, 60, 82, 83, 90, 110, 117, 120, 160, 171, 179, 180, 182, 183, 221, 231, 263, 265, 340, 351, 409, 416, 438, 446, 492, 494, 501, 640, 646], "distanc": [25, 53, 83, 110, 273, 335, 340, 341, 346, 370, 409, 438, 492], "residu": [25, 53, 83, 110, 187, 189, 190, 409, 438, 492], "20": [25, 53, 83, 110, 409, 438, 492], "bound": [25, 53, 83, 110, 126, 128, 144, 212, 273, 372, 409, 438, 448, 465, 491, 492, 684, 699], "aabb": [25, 53, 83, 110, 409, 438, 492], "direct": [25, 53, 83, 110, 124, 148, 154, 190, 312, 322, 409, 438, 492, 707, 709], "neighbor": [25, 53, 83, 110, 266, 351, 370, 409, 438, 492], "grid": [25, 53, 83, 110, 409, 438, 492, 707, 709], "onli": [25, 34, 53, 83, 91, 110, 120, 124, 131, 139, 140, 154, 157, 163, 164, 168, 174, 175, 190, 236, 245, 246, 267, 282, 295, 346, 364, 389, 409, 438, 457, 492, 623, 633, 641, 642, 655, 660, 701, 706, 709], "coord": [25, 53, 83, 110, 409, 438, 492], "para_coord": [25, 53, 83, 110, 409, 438, 492], "phys_coord": [25, 53, 83, 110, 409, 438, 492], "phys_diff": [25, 53, 83, 110, 409, 438, 492], "cartesian": [25, 53, 83, 110, 409, 438, 492, 695], "norm": [25, 53, 83, 110, 370, 409, 438, 492], "convergence_norm": [25, 53, 83, 110, 409, 438, 492], "ndarrrai": [25, 53, 83, 110, 409, 438, 492], "newton": [25, 53, 83, 110, 409, 438, 492], "first_deriv": [25, 53, 83, 110, 409, 438, 492], "second_deriv": [25, 53, 83, 110, 409, 438, 492], "tri": [27, 54, 84, 85, 111, 112, 217, 227, 242, 243, 255, 256, 259, 410, 411, 440, 493], "resolut": [28, 55, 86, 113, 163, 164, 166, 174, 175, 177, 236, 361, 372, 379, 412, 441, 464, 495, 539, 564, 608, 609, 676, 677, 684, 686, 699, 709], "uniformli": [28, 55, 86, 113, 379, 412, 441, 495], "along": [28, 31, 55, 58, 79, 86, 91, 107, 113, 133, 141, 143, 152, 315, 325, 379, 405, 412, 441, 444, 495, 619, 620, 627, 631, 632, 643, 644, 645, 648, 650, 661, 663, 671, 673], "math": [28, 55, 86, 113, 372, 379, 412, 441, 495, 641], "kwarg": [29, 30, 34, 56, 57, 87, 88, 91, 114, 115, 182, 183, 221, 222, 231, 232, 236, 273, 277, 282, 289, 290, 295, 300, 305, 310, 315, 320, 325, 330, 335, 341, 346, 351, 382, 384, 413, 414, 442, 443, 457, 496, 498, 626, 630, 674], "equival": [29, 30, 56, 57, 87, 88, 114, 115, 192, 384, 413, 414, 442, 443, 496, 498, 617, 618, 619, 620, 621, 622, 625, 626, 627, 628, 629, 631, 632, 633, 642, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 656, 658, 662, 663, 664, 665, 666, 668, 671, 672, 673], "visual": [29, 30, 56, 57, 87, 88, 114, 115, 182, 384, 413, 414, 442, 443, 496, 498, 706, 707], "showable_or_plott": [29, 56, 87, 114, 413, 442, 496], "vedo": [29, 56, 87, 114, 182, 236, 273, 282, 413, 442, 496, 709], "plotter": [29, 56, 87, 114, 182, 282, 413, 442, 496], "show": [30, 57, 88, 115, 120, 183, 215, 225, 383, 384, 414, 443, 497, 498, 667, 706, 709], "return_show": [30, 57, 88, 115, 182, 183, 236, 384, 414, 443, 498], "spline_show": [30, 57, 88, 115, 384, 414, 443, 498], "locat": [31, 58, 444, 603, 642, 684, 706], "should": [31, 58, 134, 146, 179, 181, 444, 449, 489, 623, 642, 658, 709], "rang": [31, 58, 81, 109, 165, 407, 444, 707], "stai": [31, 58, 444], "intact": [31, 58, 444], "tolist": [33, 60, 90, 117, 416, 446, 501, 706], "copi": [33, 60, 79, 90, 107, 117, 132, 134, 142, 146, 180, 184, 217, 227, 253, 405, 416, 446, 501, 517, 623, 633, 638, 641, 648, 660, 661, 667, 669, 706], "doe": [33, 60, 90, 117, 385, 416, 446, 484, 501, 502, 641, 655, 709], "check": [33, 60, 90, 117, 131, 140, 182, 222, 232, 251, 287, 288, 293, 294, 298, 299, 303, 304, 308, 309, 313, 314, 318, 319, 323, 324, 328, 329, 333, 334, 338, 339, 344, 345, 349, 350, 354, 355, 361, 364, 372, 416, 446, 448, 454, 456, 501, 655, 696, 706, 707], "statu": [33, 60, 90, 117, 416, 446, 501], "convert": [33, 60, 90, 117, 416, 446, 501, 623, 636, 668, 669, 706], "dict_splin": [33, 60, 90, 117, 416, 446, 501], "contain": [34, 91, 119, 121, 186, 188, 654, 667, 668, 706, 709], "extra": [34, 91], "oper": [34, 75, 79, 91, 103, 107, 401, 405, 451, 667], "avail": [34, 79, 91, 107, 200, 205, 245, 405, 478, 481, 641, 698, 706, 707, 709], "special": [34, 91, 264], "global": [34, 376, 447, 709], "so": [34, 91, 126, 128, 236, 655, 660, 668, 696, 709], "berstein": 34, "binom": 34, "domain": [34, 77, 79, 105, 107, 165, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 403, 405, 457], "alwai": [34, 134, 146, 218, 228, 611, 623, 637, 655, 668, 679, 707, 709], "hypercub": [34, 179], "omega_": [34, 457, 709], "rationalbezi": [34, 136, 147, 449, 457, 706], "explan": [34, 91], "how": [34, 91, 253, 418, 457, 660], "moreov": 34, "seen": [34, 457], "knot": [34, 75, 77, 79, 81, 85, 91, 103, 105, 107, 109, 112, 125, 127, 134, 135, 136, 138, 141, 146, 149, 150, 152, 156, 163, 174, 186, 187, 188, 190, 236, 245, 401, 403, 405, 407, 411, 480, 484, 485, 486, 502, 515, 516, 517, 518, 519, 593, 601, 707, 709], "vector": [34, 81, 91, 109, 125, 127, 130, 133, 138, 143, 187, 188, 190, 199, 205, 245, 363, 407, 480, 485, 486, 517, 518, 684, 706, 707, 709], "last": [34, 91, 330, 642, 648, 655, 660, 661, 669, 709], "entri": [34, 91, 155, 167, 295, 315, 320, 325, 346, 361, 362, 655, 668, 695, 706, 709], "repeat": [34, 91, 706, 709], "do": [34, 161, 162, 172, 385, 641, 642, 655, 668, 709], "featur": [34, 91, 706, 709], "addit": [34, 187, 190, 246, 389, 707], "again": [34, 267, 709], "bsplinebas": [62, 389, 457, 706], "help": [62, 198, 209, 606, 616, 684, 701], "mono": [62, 91], "introduct": [62, 389, 707], "_": [62, 199, 389, 418, 709], "bspline_volum": 62, "span": [75, 91, 103, 136, 138, 141, 150, 152, 156, 401, 515, 709], "bezier": [75, 79, 103, 107, 136, 137, 245, 266, 270, 271, 273, 351, 401, 405, 418, 424, 449, 457, 480, 706, 707], "patch": [75, 103, 151, 156, 245, 263, 267, 360, 361, 362, 365, 374, 376, 387, 401, 706, 707], "perform": [75, 103, 182, 210, 401, 462, 478, 481], "further": [75, 103, 199, 401], "multipl": [75, 103, 134, 146, 373, 401, 484, 519, 623, 661, 706, 707, 709], "insert": [77, 79, 105, 107, 277, 403, 405, 642, 658, 698, 707], "axi": [77, 105, 135, 136, 148, 149, 150, 152, 157, 168, 315, 325, 403, 469, 617, 618, 619, 620, 621, 622, 627, 631, 632, 643, 644, 645, 648, 649, 650, 653, 661, 662, 663, 664, 666, 672, 673, 709], "matrix": [79, 107, 405, 698], "specif": [79, 107, 126, 128, 245, 372, 380, 405, 646, 684, 709], "multipli": [79, 107, 405, 706, 707], "old": [79, 107, 405], "scenario": [79, 107, 405, 707], "It": [79, 107, 181, 256, 405, 642, 706, 709], "relat": [79, 91, 107, 164, 175, 245, 405, 469, 488, 709], "c_": [79, 107, 405], "spline_copi": [79, 107, 405], "insert_knot": [79, 107, 405, 706], "allclos": [79, 107, 405, 707], "other": [79, 91, 107, 217, 227, 289, 290, 335, 340, 341, 405, 623, 637, 642, 655, 660, 706, 709], "ignor": [79, 107, 405, 646], "scipi": [79, 107, 405, 698, 707], "spars": [79, 107, 405, 698, 707], "els": [79, 91, 107, 157, 168, 212, 213, 236, 246, 405, 611, 679, 696], "full": [79, 107, 315, 325, 405, 617, 618, 619, 621, 622, 625, 626, 627, 628, 629, 631, 632, 633, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 656, 658, 660, 661, 662, 663, 664, 665, 666, 671, 672, 673], "numpi": [79, 107, 145, 366, 369, 375, 381, 405, 510, 511, 512, 513, 516, 519, 526, 528, 531, 533, 539, 540, 542, 546, 547, 548, 549, 552, 554, 555, 558, 562, 563, 564, 565, 571, 572, 573, 577, 578, 585, 587, 589, 591, 593, 594, 596, 599, 601, 603, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 628, 629, 630, 631, 632, 633, 635, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 665, 666, 669, 671, 672, 673, 698, 706, 707], "format": [79, 107, 119, 238, 240, 245, 252, 260, 261, 265, 287, 288, 293, 294, 298, 299, 303, 304, 308, 309, 313, 314, 318, 319, 323, 324, 328, 329, 333, 334, 338, 339, 344, 345, 349, 350, 354, 355, 378, 405, 668, 706, 707], "detail": [79, 107, 200, 201, 202, 203, 204, 205, 206, 405, 620, 707], "applic": [81, 109, 135, 149, 182, 204, 213, 407, 684, 698, 706, 707], "version": [82, 120, 621, 623, 633, 635, 648, 661, 667, 668, 670], "defin": [82, 91, 193, 195, 196, 240, 249, 255, 256, 259, 261, 278, 280, 281, 295, 315, 320, 325, 346, 389, 418, 457, 641, 642, 648, 659, 661, 707, 709], "weight": [82, 131, 140, 245, 265, 389, 418, 455, 457, 488, 505, 706, 709], "same_nurb": 82, "remov": [85, 112, 411, 633, 662, 697, 707], "nurb": [91, 124, 134, 136, 138, 139, 141, 146, 150, 152, 154, 263, 265, 267, 268, 270, 271, 418, 449, 455, 457, 482, 706, 707], "non": [91, 131, 135, 140, 149, 156, 245, 335, 389, 647], "decreas": [91, 709], "denot": [91, 709], "theta_u": 91, "u_1": 91, "u_2": 91, "u_": [91, 709], "leq": 91, "u_i": [91, 199], "th": [91, 672, 709], "interv": [91, 165, 176, 709], "As": [91, 668, 709], "number": [91, 135, 136, 138, 141, 144, 149, 150, 152, 165, 181, 186, 187, 188, 190, 200, 205, 273, 277, 280, 281, 283, 315, 325, 361, 363, 365, 376, 450, 624, 640, 641, 656, 659, 698, 709], "equat": [91, 199, 709], "In": [91, 164, 175, 179, 280, 281, 289, 290, 300, 305, 310, 330, 335, 340, 341, 351, 449, 633, 695, 707], "case": [91, 141, 152, 164, 175, 179, 289, 290, 300, 305, 310, 312, 322, 330, 335, 340, 341, 351, 389, 418, 641, 642, 660, 669, 709], "u_l": 91, "exactli": [91, 273, 670, 709], "interpol": [91, 187, 188, 189, 190, 707, 709], "via": [91, 132, 133, 135, 142, 143, 149, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 193, 194, 195, 197, 669, 709], "cox": [91, 709], "de": [91, 709], "boor": [91, 709], "formula": [91, 709], "begin": [91, 640, 659, 709], "mathrm": 91, "end": [91, 245, 256, 273, 706, 709], "commandlin": [119, 120, 121], "interfac": [119, 120, 121, 212, 284, 330, 360, 362, 363, 364, 370, 381, 540, 587, 660, 706, 707], "keyword": [119, 121, 182, 183, 238, 245, 246, 457, 655, 661], "io": [119, 706], "what": [119, 121, 504, 623, 709], "export": [119, 213, 260, 263, 266, 706, 707], "namespac": [119, 121], "argpars": [119, 121], "try": [120, 707, 709], "splinpi": 120, "h": [120, 199, 207], "load": [121, 635, 636, 706, 707], "shown": 121, "spl": [124, 130, 154, 192], "helper": [124, 130, 154, 192, 276, 385, 453, 499, 707], "allow": [124, 154, 163, 174, 418, 623, 654], "obj": [124, 154], "bspline": [124, 131, 134, 140, 144, 145, 146, 148, 154, 270, 271, 449, 457, 706, 707], "valid_queri": [124, 462, 706], "parent": [124, 192], "warn": [125, 127, 704, 706], "clamp": [125, 127], "enough": [125, 127, 623], "is_clamp": [125, 127], "valid": [126, 128, 158, 159, 164, 166, 169, 170, 173, 175, 177, 217, 222, 223, 227, 232, 233], "exce": [126, 128], "build": [130, 188, 189, 707, 709], "exist": [130, 609, 611, 655, 677, 679], "spline_fac": [130, 154, 478, 481], "my_splin": [130, 154], "extrud": [130, 469, 706, 709], "project": [131, 140, 389, 709], "jacobian": [131, 140, 199, 706, 707], "determin": [131, 140, 253, 280, 346, 363, 376, 387, 640, 655, 660, 707, 709], "dmin": [131, 140], "tangl": [131, 140], "could": [131, 140, 709], "BE": [131, 140], "work": [131, 140, 641, 709], "definit": [131, 140, 199, 213, 315, 325, 709], "statement": [131, 140], "about": [131, 140, 660], "entangl": [131, 140], "made": [131, 140, 646, 660, 709], "ration": [131, 136, 140, 156, 270, 271, 273, 389, 418, 482, 707], "therefor": [131, 140], "approxim": [131, 140, 187, 188, 189, 190, 273, 698, 707], "mantzaflari": [131, 140], "j\u00fcttler": [131, 140], "khoromskij": [131, 140], "langer": [131, 140], "2017": [131, 140], "limkild": [131, 140], "evgrafov": [131, 140], "gravesen": [131, 140], "2021": [131, 140], "determinant_project": [131, 140], "new_dimens": [132, 142], "emb": [132, 142], "current_dim": [132, 142], "add": [132, 142, 361, 380, 706, 707, 709], "zero": [132, 135, 142, 149, 156, 245, 295, 647, 655, 709], "column": [132, 142, 638, 698], "take": [132, 134, 142, 146, 254, 364, 640, 684, 706, 707, 709], "integ": [132, 142, 623, 640], "embedded_splin": [132, 142], "extrusion_vector": [133, 143, 709], "linear": [133, 141, 143, 148], "extrus": [133, 143], "extend": [133, 135, 143, 149, 457, 706], "than": [133, 143, 164, 175, 200, 205, 640, 642, 648, 709], "extruded_splin": [133, 143], "ax": [134, 146, 212, 662, 672], "conform": [134, 146, 212, 320, 361], "view": [134, 146, 624, 633, 640, 646, 655, 665, 672, 706], "previous": [134, 146, 709], "naive_splin": [134, 146], "preserv": [134, 146, 623], "look": [134, 146, 642, 707, 709], "Will": [134, 146, 282, 305, 310, 457], "shallow": [134, 146], "underli": [134, 146, 199], "spline_data": [134, 146, 706], "show_opt": [134, 146, 155, 167, 217, 227, 273, 706, 707, 709], "origin": [134, 138, 146, 179], "howev": [134, 146, 210, 642, 655, 709], "desir": [134, 146, 164, 175, 187, 709], "confrom": [134, 146], "configur": [134, 146, 359, 706], "para_splin": [134, 146], "center": [135, 149, 295, 300, 305, 310, 315, 320, 325, 330, 335, 340, 341, 346, 364, 387], "angl": [135, 136, 139, 141, 149, 150, 152, 295, 363, 709], "n_knot_span": [135, 136, 138, 141, 149, 150, 709], "around": [135, 136, 138, 149, 150, 152, 273, 295, 315, 325, 656], "revolut": [135, 141, 149, 150, 152], "instead": [135, 149, 182, 236, 623, 633, 641], "radiant": [135, 149], "radiu": [136, 138, 139, 141, 147, 150, 151, 152, 290, 300, 305, 310, 320, 325, 335, 341, 346, 351], "90": 136, "start_angl": 136, "d": [136, 137, 145, 147, 322, 638, 669, 686, 706, 707, 709], "li": [136, 199], "x": [136, 138, 145, 148, 150, 152, 186, 187, 188, 189, 190, 199, 277, 312, 315, 322, 325, 370, 376, 623, 640, 641, 642, 659, 660, 661, 667, 695, 707, 709], "y": [136, 138, 148, 277, 312, 315, 322, 325, 638, 660, 661, 669, 695, 709], "plane": [136, 138, 165], "rotat": [136, 139, 141, 150, 152, 315, 325], "z": [136, 148, 277, 312, 315, 322, 325, 340, 641], "section": [136, 152, 255, 256, 265, 709], "minimum": [136, 273, 340, 346, 620, 645, 650], "start": [136, 363, 709], "length": [137, 148, 289, 290, 320, 335, 340, 341, 351, 623, 662, 709], "hyper": 137, "rectangl": 137, "nd_box": 137, "ha": [138, 157, 168, 199, 315, 325, 480, 640, 709], "n_knots_span": 138, "outer_radiu": [139, 141, 150, 151, 709], "height": [139, 148, 351], "inner_radiu": [139, 141, 150, 709], "volumetr": [139, 148, 150, 152], "360": [139, 141, 150], "circular": [139, 389], "whether": [139, 660], "solid": 139, "model": [139, 245], "4": [141, 152, 273, 300, 315, 325, 346, 376, 469, 638, 640, 642, 648, 661, 669, 672, 707, 709], "potenti": [141, 150], "hollow": [141, 150, 152, 709], "quadrat": 141, "thick": [141, 289, 290, 300, 305, 310, 320, 330, 335, 341, 346, 351], "complet": [141, 150, 152, 179], "parametric_bound": [144, 684, 706], "physical_bound": 144, "minim": [144, 706], "less": [144, 157, 168], "greater": [144, 648, 709], "provid": [145, 179, 277, 279, 280, 281, 373, 489, 642, 648, 660, 706, 707, 709], "npoint": 145, "ndim": [145, 669], "biquadrat": [147, 346], "width": [148, 273], "everi": [148, 364], "circl": [151, 389, 706, 709], "consist": [151, 282, 351, 707], "outer_rariu": 151, "torus_radiu": 152, "section_outer_radiu": 152, "section_inner_radiu": 152, "torus_angl": 152, "section_angl": 152, "section_n_knot_span": 152, "torus_n_knot_span": 152, "revolv": [152, 706, 709], "cross": [152, 295], "plate": [152, 706], "disk": [152, 706, 709], "yield": [152, 709], "tube": 152, "give": [152, 264, 672, 709], "face": [154, 159, 160, 170, 171, 182, 236, 290, 300, 305, 310, 320, 335, 341, 346, 351, 362, 364, 376, 380, 478, 706, 707, 709], "adata_nam": [155, 167], "edg": [155, 158, 160, 164, 167, 169, 171, 175, 182, 236, 265, 335, 340, 341, 706], "adata_edg": [155, 167], "gu": [155, 167, 699, 709], "within": [156, 193, 195, 196, 280, 362, 372, 623, 699, 709], "individu": [156, 361, 372, 374, 387, 624, 707], "boundary_id": [157, 168, 364, 380, 589], "deduct": [157, 168], "normal": [157, 168, 363, 709], "x_": [157, 168], "j_": [157, 168, 199], "min": [157, 168, 518, 626, 706], "2j": [157, 168], "x_j": [157, 168, 199, 207], "multipatch": [157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 212, 215, 236, 239, 240, 245, 246, 449, 607, 706], "boundary_splin": [157, 168, 577], "mesh": [158, 159, 166, 169, 170, 173, 177, 179, 181, 182, 361, 464, 488, 706, 707, 709], "control_edg": [160, 171, 706], "control_fac": [160, 171, 706], "control_volum": [160, 171, 706], "vertic": [161, 162, 164, 172, 175, 179, 180, 182, 236, 264, 265, 320, 699], "achiev": [161, 162, 172, 212, 389], "gustaf": [161, 162, 172, 179, 180, 182, 235, 236, 273, 707, 709], "cps_as_vertic": [161, 162, 172], "100": [163, 174], "all_knot": [163, 174], "entiti": [163, 174, 709], "without": [163, 174, 212, 660, 672], "per": [163, 164, 174, 175, 188, 277, 283], "switch": [163, 174], "contour": [163, 174, 278], "watertight": [164, 166, 175, 177], "note": [164, 175, 389, 623, 641, 642, 648, 654, 655, 660, 661, 668, 669], "showabl": [164, 175, 182, 235, 236, 706], "overlap": [164, 175], "boundari": [164, 175, 213, 245, 246, 265, 273, 320, 360, 363, 364, 365, 368, 376, 380, 387, 488, 706, 707], "won": [164, 175], "merg": [164, 175, 245], "splitting_plan": 165, "split": [165, 706, 707], "subsect": 165, "dictionari": [165, 183, 200, 205, 245, 252], "tupl": [165, 176, 217, 227, 547, 549, 562, 576, 591, 599, 608, 609, 641, 642, 655, 672, 676, 677, 686, 695, 696], "split_plan": 176, "sub": [176, 623, 646], "freeform": 178, "pad": [179, 706], "splinepybas": [179, 199, 276, 353, 360, 453, 457, 684], "free": [179, 654, 707, 709], "our": [179, 640], "subclass": [179, 696], "scale": [179, 706, 709], "unit": [179, 273, 280, 281, 312, 322, 709], "well": [179, 199, 312, 322, 457, 660, 709], "modifi": [179, 212, 213, 389, 418], "overwrit": [179, 253], "whole": 179, "obtain": [179, 709], "latest": 179, "factor": [179, 300, 305, 310, 346], "ideal": 179, "appli": [179, 180, 289, 290, 300, 305, 310, 315, 325, 330, 335, 340, 341, 351, 614, 669, 682, 709], "befor": [180, 256, 261, 640, 648, 704], "current_mesh": 180, "accord": [180, 660], "ratio": [181, 273, 709], "insid": [181, 642, 709], "titl": 182, "window": [182, 236, 707], "item": [182, 183, 611, 642, 668, 669, 679, 706], "return_gustaf": [182, 236], "discret": [182, 236], "arbitrari": [182, 261, 707], "These": [182, 660, 709], "onto": 182, "state": 183, "redirect": 183, "directli": [183, 289, 290, 300, 305, 310, 330, 335, 340, 341, 351, 462, 478, 481, 668, 707, 709], "setter": 184, "explicitli": [184, 709], "_spline": 184, "n_control_point": [186, 187, 190], "u_k": [186, 199], "n_fitting_point": [186, 187, 190], "parameter": [186, 187, 190, 706, 709], "fitting_point": [186, 187, 188, 189, 190], "fitting_splin": [187, 189, 190], "associated_queri": [187, 190], "centripet": [187, 188, 190], "interpolate_endpoint": [187, 189, 190], "verbose_output": [187, 190], "through": [187, 190, 235, 351, 623, 709], "endpoint": [187, 189, 190], "fitted_splin": [187, 190], "coefficient_matrix": [187, 189, 190], "size": [188, 190, 273, 361, 376, 640, 641, 642, 655, 668], "later": 188, "adequ": 188, "parametric_coordin": 188, "solv": 189, "system": [189, 360, 365, 371, 376, 377, 378, 707, 709], "must": [190, 245, 277, 289, 290, 300, 305, 310, 335, 340, 341, 346, 351, 626, 642, 655], "callabl": [193, 195, 280, 281, 364, 684], "gauss": [194, 197], "quadratur": [194, 197], "imag": 198, "express": [199, 709], "access": [199, 488, 641, 660], "solut": [199, 268, 709], "assum": [199, 709], "henc": 199, "x_i": [199, 206, 207], "sum_b": 199, "f_i": 199, "sum_a": 199, "f": [199, 206, 256, 623, 638, 655, 667, 709], "a_i": 199, "being": [199, 389, 637], "coeffici": 199, "write": [199, 245, 660, 668, 709], "bar": 199, "ij": [199, 207], "u_j": 199, "ji": 199, "diverg": [199, 205, 706], "similar": [199, 218, 228, 389, 418, 641, 709], "fashion": [199, 709], "sum": [199, 632, 671, 706], "compon": 199, "second": [199, 273, 320, 648, 661, 707, 709], "written": [199, 242, 261, 660, 668], "a_": 199, "left": [199, 658], "kl": 199, "u_n": 199, "nm": 199, "b_m": 199, "b_": 199, "lk": 199, "right": [199, 213, 709], "kj": 199, "b_mh": 199, "mlk": 199, "sometim": [199, 669], "effici": [199, 200, 205], "implement": [199, 200, 205, 661, 706, 707], "splinelib": [199, 707], "bezman": [199, 707], "ident": 199, "lm": 199, "mn": 199, "ni": 199, "laplacian": [200, 203, 205, 706], "mani": [200, 253, 707, 709], "precalcul": 200, "thread": [200, 204, 205, 206, 207, 208, 363, 365, 450], "basis_function_deriv": [201, 202, 203, 706], "basis_function_valu": 205, "assembli": 205, "divergenec": 205, "k_i": 206, "k_": 207, "f_k": 207, "paradim": [207, 277], "grid_resolut": 210, "task": 210, "ravel_multi_index": 210, "__getitem__": [210, 455], "flip": 212, "modified_splin": [212, 213], "reorder": [212, 213], "permutation_list": 213, "permut": [213, 672], "interchang": [213, 665, 709], "xi": [213, 698], "eta": [213, 709], "them": [213, 259, 648, 709], "orient": [213, 312, 322, 706], "condit": [213, 245, 246, 376, 623, 627, 709], "mfem": [213, 706, 707], "helpe": [215, 225, 606, 607, 675], "showopt": [215, 217, 225, 227], "copy_to": [217, 227], "kei": [217, 218, 223, 224, 227, 228, 233, 234, 245, 269, 608, 609, 611, 614, 661, 676, 677, 679, 682, 706, 709], "simpli": [217, 227, 672, 709], "iter": [217, 222, 227, 232, 638, 642, 652, 669, 695, 707], "specifi": [217, 227, 245, 246, 273, 330, 335, 340, 341, 351, 489, 623, 633, 635, 641, 642, 648, 655, 659, 661, 684, 709], "safe": [218, 228, 251, 623, 655], "stir": [218, 228], "regist": [219, 220, 224, 229, 230, 234], "dict_item": [219, 229], "dict_kei": [220, 223, 230, 233, 613, 681], "__setitem__": [222, 232], "dict_valu": [224, 234, 612, 615, 680, 683], "goe": 235, "procedur": 235, "gus_dict": 235, "variou": 236, "excess": 236, "adjust": 236, "fitting_queri": 236, "parametric_spac": [236, 491], "relev": 236, "backend": [236, 709], "black": 236, "green": 236, "light": 236, "control_point_id": [236, 273], "color_splin": 236, "cmap": [236, 273], "things_to_show": 236, "return_discret": 236, "xml": [238, 239, 240, 245, 246, 273, 707], "rwth": [238, 240, 707], "possibli": [238, 669], "turn": [238, 255, 696, 709], "python": [238, 641, 655, 667, 668, 669, 707], "spline_list": [239, 245, 261, 262, 266, 289, 340], "indent": [239, 245, 273], "pretti": 239, "print": [239, 273], "read": [240, 246, 249, 259, 267, 271, 418, 633, 635, 707], "name_to_typ": [240, 246, 249, 252, 259, 604, 706], "splinepy_obj": [242, 243], "correct": [242, 243, 287, 288, 293, 294, 298, 299, 303, 304, 308, 309, 313, 314, 318, 319, 323, 324, 328, 329, 333, 334, 338, 339, 344, 345, 349, 350, 354, 355], "extens": [242, 243, 389, 418], "valueerror": [242, 243, 655, 660], "filenam": [242, 243, 245, 246, 253, 261, 668], "output_dict": [242, 261], "dictornai": [242, 261], "labeled_boundari": 245, "export_field": 245, "field_mask": 245, "as_base64": 245, "readabl": [245, 256, 273], "uniform": [245, 389, 699], "counterpart": [245, 709], "string": [245, 253, 254, 266, 273, 277, 351, 449, 623, 624, 635, 636, 646, 648, 660, 661, 668], "output": [245, 273, 668], "prefer": [245, 707], "append": [245, 273], "white": [245, 273], "etre": [245, 273], "elementtre": [245, 273], "label": 245, "assembl": 245, "etc": [245, 289, 290, 300, 335, 648, 661, 709], "tag": 245, "text": [245, 253, 668, 709], "children": [245, 457], "separ": [245, 346, 654, 668], "memori": [245, 623, 624, 638, 655, 660, 667], "select": [245, 627, 640, 642, 648, 709], "speed": [245, 641, 642, 668], "b64": 245, "encod": [245, 261, 707], "634": 245, "load_opt": 246, "spline_dic_list": 246, "util": [250, 706], "absolut": [251, 273, 362], "abspath": 251, "mayb": 251, "spline_dictionari": 252, "spline_lit": 252, "tab_expand": 253, "replac": [253, 259, 449], "tab": [253, 259], "modif": 253, "prefix": 253, "formul": 254, "line_separated_str": 254, "comment": [255, 256, 259], "input": [255, 623, 638, 696, 707], "meaning": [255, 256], "strip": [256, 259], "next": [256, 709], "513": 256, "sai": 256, "prevent": [256, 655], "never": [256, 660, 709], "while": [256, 709], "_io": 256, "textiowrapp": 256, "symbol": 256, "next_meaningful_str": 256, "itd": [258, 259], "expand_tab": [259, 706], "strip_com": 259, "beta": 259, "identifi": [259, 364, 387], "custom": [260, 707], "list_nam": 261, "base64encod": 261, "splinegroup": 261, "assign": [261, 364, 380, 637, 642, 707], "hardcod": 263, "2d": [263, 267, 362, 669, 684, 695, 699, 707, 709], "dof": 264, "to_mfem": 264, "from_mfem": 264, "precis": [265, 668, 669], "segment": [265, 709], "squar": 265, "cub": 265, "5": [265, 273, 320, 335, 389, 418, 623, 660, 707, 709], "knotvector": [265, 706], "finiteelementspac": 265, "finiteelementcollect": 265, "vdim": 265, "bezier_list": 266, "collaps": [266, 638], "readi": 267, "reference_nurb": 268, "solution_nurb": 268, "raw": [269, 667], "ncpt": 269, "float64": [269, 510, 511, 512, 513, 517, 519, 531, 539, 542, 546, 547, 548, 549, 552, 555, 558, 562, 564, 565, 571, 572, 573, 578, 591, 593, 594, 596, 601, 603, 623, 640, 659], "int32": [269, 366, 369, 375, 381, 511, 513, 516, 526, 528, 533, 540, 548, 549, 552, 554, 562, 563, 564, 565, 571, 573, 577, 585, 587, 589, 591, 594, 599, 659], "whatami": [269, 706], "list_of_splin": 270, "list_splin": 271, "objects_to_plot": 273, "box_margin": 273, "plot": [273, 684, 707], "graphic": [273, 706], "built": 273, "resembl": 273, "reli": [273, 707], "row": [273, 638], "third": [273, 707], "157": 273, "156": 273, "knot_c": 273, "red": 273, "control_mesh": [273, 706], "control_mesh_lw": 273, "05": 273, "control_point_c": 273, "102": 273, "control_mesh_c": 273, "control_point_r": 273, "background": 273, "human": 273, "offset": [273, 351, 633, 640, 659, 671], "rel": 273, "cubic": [273, 351], "high": [273, 709], "deviat": [273, 663], "box": [273, 706], "color": [273, 684, 709], "rgb": 273, "linecap": 273, "connect": [273, 387, 709], "http": [273, 695], "www": 273, "w3": 273, "org": 273, "tr": 273, "svg2": 273, "font_famili": 273, "font": 273, "font_siz": 273, "text_anchor": 273, "text_color": 273, "arrow_data_toler": 273, "cutt": 273, "arrow": [273, 608, 676, 684], "too": 273, "small": 273, "arrow_width": 273, "matplotlib": 273, "stabl": [273, 661], "_imag": 273, "quiver_s": 273, "arrow_head_width": 273, "arrow_head_length": 273, "arrow_headaxis_length": 273, "scalarbar": 273, "colorbar": 273, "below": [273, 646, 660], "figur": 273, "n_tick": 273, "tick": 273, "mar": 273, "vmin": 273, "vmax": 273, "maximum": [273, 340, 346, 619, 643, 650], "jet": 273, "scalarbar_width": 273, "pictur": 273, "scalarbar_aspect_ratio": 273, "aspect": 273, "scalarbar_offset": 273, "reserv": 273, "scalarbar_stroke_width": 273, "scalarbar_tick_dist": 273, "mark": [273, 707], "scalarbar_font_s": 273, "deformation_funct": [276, 282, 706], "tile": [276, 280, 281, 706], "microtil": [276, 277, 280, 281, 282, 283, 290, 295, 300, 305, 310, 320, 330, 335, 341, 346, 351, 356, 358, 706], "parametrization_funct": [276, 280, 706], "facilitata": 276, "closing_fac": 277, "knot_span_wis": 277, "macro_sensit": 277, "closing_til": [277, 706], "knotspan": 277, "structur": [277, 606, 623, 661, 707, 709], "create_til": [277, 279, 312, 322, 706], "finish": 277, "either": [279, 340, 642, 707], "said": [280, 281], "need": [280, 281, 289, 290, 300, 305, 310, 335, 340, 346, 640, 648, 661, 709], "coupl": [280, 281], "evaluation_point": [280, 281, 706], "cube": [280, 281], "parameter_space_dimens": [280, 281], "local": [280, 281, 376, 642, 709], "use_sav": 282, "plt": 282, "tool": [284, 706], "gener": [284, 457, 642, 661], "simpl": [284, 623, 669], "tilebas": [286, 292, 297, 302, 307, 312, 317, 322, 327, 332, 337, 343, 348, 706], "boolean": [287, 288, 293, 294, 298, 299, 303, 304, 308, 309, 313, 314, 318, 319, 323, 324, 328, 329, 333, 334, 338, 339, 344, 345, 349, 350, 354, 355, 648, 660], "parameter_sensit": [289, 290, 295, 300, 305, 310, 315, 320, 325, 330, 335, 340, 341, 346, 351], "contact_length": [289, 290, 320, 335, 340, 341, 351], "closur": [289, 290, 300, 305, 310, 335, 340, 346, 351], "match": [289, 340, 364, 368, 698, 709], "wall": [289, 290, 320, 335, 340, 341, 351], "01": [289, 290, 300, 305, 310, 340, 341, 709], "49": [289, 290, 300, 305, 310, 340, 341], "itself": [289, 290, 300, 305, 310, 330, 335, 340, 341, 351, 640, 707], "delta_ij": [289, 290, 300, 305, 310, 330, 335, 340, 341, 351], "contact": [289, 290, 335, 340, 341, 351], "x_min": [289, 290, 300, 335, 351], "x_max": [289, 290, 300, 335], "derivative_list": [289, 290, 300, 305, 310], "outward": [290, 300, 305, 310, 320, 335, 341, 346, 351], "branch": [290, 295, 300, 305, 310, 320, 335, 341, 346, 351], "One": [290, 335, 340, 341, 626, 709], "microtile_list": [290, 295, 300, 305, 310, 315, 320, 325, 330, 335, 341, 346, 351], "drill": 295, "radian": 295, "correl": [295, 320], "center_expans": [300, 305, 310, 346], "four": [300, 660, 709], "cylind": [300, 305, 310, 709], "expand": [300, 305, 310, 346], "6": [305, 310, 357, 641, 642, 709], "six": [305, 310], "z_min": [305, 310, 346], "z_max": [305, 310, 346], "_closing_til": [305, 310], "void": [312, 315, 322, 325, 641], "cuboid": [312, 315, 325], "cell": [312, 322], "act": [312, 322], "expans": [312, 315, 322, 325], "radii": [312, 322, 346], "adamm": [312, 322], "test": [312, 322, 351, 707], "hutchinson": [312, 322], "roti": [315, 325], "rotx": [315, 325], "tz": [315, 325], "p_0": [315, 325], "p_1": [315, 325], "p_2": [315, 325], "p_3": [315, 325], "extern": [315, 325], "horizont": 320, "diagon": [320, 671, 706], "entour": 320, "doubl": [320, 363, 370], "block": 320, "ellipsoid": [322, 325], "ellip": 322, "oid": 322, "elipsoid": 322, "strut": 330, "hole": 330, "inclus": 335, "mean": [340, 362, 623, 638, 648, 661, 667, 672, 706, 709], "That": [340, 709], "seperator_dist": 346, "layer": 346, "15": [351, 661], "unus": 351, "thinner": 351, "upper": [351, 660], "beam": 351, "lower": [351, 707, 709], "thicker": 351, "snap": 351, "fulfil": [351, 709], "prior": 357, "pymultipatch": [360, 366, 367, 369, 375, 381, 386, 706], "field_dim": [361, 524], "check_compli": 361, "check_conform": 361, "admiss": 361, "compar": [361, 642, 648, 661], "hold": [362, 453, 612, 613, 615, 680, 681, 683, 707], "seed": [363, 641, 642], "propag": 363, "until": [363, 709], "reach": [363, 709], "kink": 363, "g1": 363, "continu": [363, 707, 709], "aux": 363, "co": [363, 709], "mask": [364, 368], "were": [364, 709], "chosen": [364, 380, 709], "lowest": [364, 380, 695], "bid": [365, 366, 525, 526], "combin": [368, 457], "reassign": [368, 610, 678], "recomput": [370, 375, 533], "info": [370, 701, 704, 706], "enforc": [370, 697, 698], "n_patch": [370, 376], "n_boundari": 370, "splineset": [371, 377], "rtype": 371, "caution": 372, "check_bound": [372, 706], "extractor": [373, 478, 706], "n_sides_per_patch": 376, "indic": [376, 488, 619, 620, 621, 622, 639, 647, 651, 658, 666, 709], "global_fac": 376, "local_fac": 376, "number_of_faces_per_el": 376, "element_id": 376, "o": 376, "inter": 376, "connectivitii": 376, "spline_id": 380, "boundary_fac": 380, "manag": [383, 497, 606, 607, 675], "splineshowopt": [383, 497, 706], "todo": 385, "anyth": 385, "moment": [385, 709], "multipatchdata": [385, 706], "spline_cent": 387, "overcom": [389, 668], "drawback": 389, "unabl": 389, "consequ": [389, 418, 709], "descript": [389, 418, 623, 707, 709], "includ": [389, 706, 707, 709], "nurbs_curv": 389, "25": 389, "75": 389, "classic": 418, "By": [418, 623, 640], "proce": 418, "quarter": 418, "arc": [418, 706], "conveni": [447, 668, 672], "acceler": 448, "process": 448, "rational_bezi": [449, 706], "convers": [449, 604, 623, 707], "mai": [449, 623, 655, 669], "own": [449, 655, 660], "1e": 451, "11": [451, 654], "involv": 451, "abstract": 452, "classmethod": [454, 455, 456], "noth": [454, 456], "rp_intersect": 454, "__call__": 455, "required_spline_properti": 455, "mysplin": 455, "requiredsplineproperti": 455, "rp_union": 456, "subset": 457, "overview": 457, "mathemat": 457, "theori": 457, "depth": [457, 669], "share": [457, 655, 709], "checker": [462, 706], "control_points_": [466, 468], "prism": 469, "don": [480, 707], "easi": [488, 707, 709], "unravel": 488, "want": [488, 684], "slice": [488, 627], "certain": [488, 608, 640, 676, 709], "multi_index_help": 488, "multiindex": [488, 706], "side": [489, 658, 706, 707], "__qualname__": 489, "requied_properti": 494, "splinedata": [499, 607, 706], "uniqu": [502, 516, 706, 709], "_weight": [503, 505], "answer": [504, 695], "deep": [504, 669], "philosoph": 504, "question": [504, 695], "am": 504, "pybind11_object": [507, 514, 520, 523, 545, 567], "arg0": 515, "check_nam": 524, "check_dim": 524, "check_degre": 524, "check_control_mesh_resolut": 524, "same_parametric_bound": [539, 706], "boundary_interfac": 577, "global_interfac": 577, "phys_dim": 590, "old_knot_vector": [591, 596], "new_knot": 591, "face_center_vertic": 594, "new_knot_vector": 596, "base_id": 599, "base_face_id": 599, "neighbor_id": 599, "neighbor_face_id": 599, "coresplin": 604, "derived_splin": 604, "derivedsplin": 604, "place": [608, 624, 642, 655, 659, 661, 672, 676], "predefin": [608, 676], "default_valu": [611, 679], "sinc": [611, 648, 655, 669, 670, 679], "keep": [616, 701, 709], "mirror": 616, "meant": 616, "keepdim": [617, 618, 619, 620, 643, 644, 645, 649, 650, 663, 664, 673], "kth": [621, 648], "kind": [621, 622, 623, 648, 661], "introselect": [621, 648], "partit": [621, 661, 706, 709], "sort": [622, 648, 706], "dtype": [623, 624, 631, 632, 637, 640, 642, 644, 646, 648, 649, 659, 661, 663, 664, 667, 671, 673, 696], "cast": [623, 642], "unsaf": 623, "subok": 623, "typecod": 623, "layout": [623, 667], "fortran": [623, 638, 667], "contigu": [623, 638, 655, 667, 696, 697], "appear": [623, 642, 709], "equiv": [623, 709], "same_kind": 623, "occur": [623, 638], "backward": [623, 661], "compat": [623, 661, 669, 670, 707], "byte": [623, 624, 640, 646, 659, 667, 670], "float32": 623, "done": [623, 660], "forc": [623, 646], "alloc": 623, "satisfi": [623, 709], "arr_t": 623, "unless": [623, 641, 655], "17": [623, 635, 668], "9": [623, 633, 641, 642, 660, 667], "numer": [623, 709], "mode": [623, 625, 651, 666], "long": 623, "complexwarn": 623, "real": [623, 624, 709], "swap": [624, 646], "toggl": 624, "low": 624, "endian": [624, 646, 668], "imaginari": 624, "256": 624, "8755": 624, "int16": 624, "hex": 624, "0x1": 624, "0x100": 624, "0x2233": 624, "13090": 624, "0x3322": 624, "ceg": 624, "fac": 624, "s3": 624, "newbyteord": [624, 706], "produc": [624, 667, 668], "uint8": 624, "choic": [625, 668], "whose": 626, "conjug": [628, 706], "wise": 629, "regular": 630, "cumul": [631, 632], "axis1": [633, 665, 671], "axis2": [633, 665, 671], "previou": 633, "futur": 633, "pickl": [635, 636], "back": [635, 636], "pathlib": [635, 668], "accept": [635, 668], "empti": [637, 668, 707], "expect": 637, "behav": 637, "rare": 637, "distinct": 637, "unpack": 637, "major": 638, "style": 638, "ravel": [638, 706], "flat": [638, 641, 651, 652], "over": [638, 649, 664, 669, 709], "arr": [639, 646, 657], "complex128": 640, "16": [640, 707], "32": 640, "bit": [640, 709], "12": 640, "larger": 640, "skip": 640, "diag": 640, "choos": [640, 706], "standard": [641, 663, 707], "int_typ": 641, "interpret": [641, 660], "nd": 641, "suitabl": [641, 672], "longdoubl": 641, "clongdoubl": 641, "lose": [641, 669], "buffer": [641, 655, 660], "veri": [641, 709], "arithmet": 641, "optim": [641, 709], "random": [641, 642], "123": [641, 642], "randint": [641, 642], "7": [641, 660], "There": [642, 660, 709], "least": 642, "Then": [642, 709], "faster": 642, "syntax": 642, "increas": [642, 655], "particular": [642, 709], "discourag": 642, "among": 642, "problem": [642, 668], "complic": 642, "amax": 643, "averag": 644, "amin": 645, "new_ord": 646, "newbytord": 646, "opposit": 646, "littl": 646, "nativ": 646, "sy": 646, "byteord": 646, "new_arr": 646, "reflect": 646, "rearrang": 648, "smaller": 648, "move": [648, 709], "behind": 648, "undefin": 648, "sequenc": [648, 709], "final": 648, "deprec": [648, 670], "22": 648, "algorithm": [648, 661], "unspecifi": [648, 661], "still": [648, 661, 709], "come": [648, 661, 709], "break": [648, 661, 709], "ti": [648, 661], "argpartit": [648, 706], "indirect": [648, 661], "peak": 650, "flatten": [652, 655, 706], "unlik": 654, "new_shap": 655, "refcheck": 655, "count": 655, "pypi": 655, "reliabl": 655, "systemerror": 655, "behaviour": 655, "bug": 655, "realloc": 655, "area": [655, 660], "consecut": 655, "purpos": 655, "shrink": 655, "reshap": [655, 672, 706], "enlarg": 655, "abov": [655, 707, 709], "miss": 655, "fill": [655, 706], "referenc": [655, 660], "traceback": [655, 660, 669], "recent": [655, 660, 669], "cannot": [655, 660, 668, 709], "decim": 656, "arang": 657, "len": [657, 695, 706], "sorter": 658, "maintain": 658, "val": 659, "put": [659, 706], "getfield": [659, 706], "ey": 659, "0e": 659, "000": 659, "5e": 659, "323": 659, "align": 660, "uic": 660, "writeabl": [660, 674], "writebackifcopi": 660, "affect": 660, "actual": [660, 661, 709], "ultim": 660, "owner": 660, "expos": 660, "unpickl": 660, "user": 660, "stride": 660, "appropri": [660, 684, 706], "hardwar": 660, "api": [660, 707], "pyarray_resolvewritebackifcopi": 660, "content": [660, 667, 668], "c_contigu": 660, "f_contigu": 660, "owndata": 660, "stdin": 660, "quicksort": 661, "mergesort": 661, "heapsort": 661, "timsort": 661, "under": 661, "cover": 661, "vari": 661, "datatyp": 661, "retain": 661, "wa": [661, 709], "ad": 661, "argsort": [661, 706], "lexsort": 661, "searchsort": [661, 706], "s1": 661, "i8": 661, "ddof": [663, 673], "short": 667, "exhibit": 667, "frombuff": 667, "u2": 667, "x00": 667, "x01": 667, "x02": 667, "x03": 667, "fid": 668, "sep": 668, "binari": [668, 707], "independ": [668, 707], "recov": 668, "fromfil": 668, "tobyt": [668, 670, 706], "closest": 668, "quick": 668, "storag": [668, 707], "lost": 668, "intend": [668, 672], "archiv": 668, "transport": 668, "machin": 668, "expens": 668, "bypass": 668, "compress": [668, 706], "gzipfil": 668, "fileno": 668, "bytesio": 668, "level": [669, 697], "nest": 669, "builtin": 669, "recreat": 669, "1d": [669, 699, 709], "almost": 669, "uint32": 669, "a_list": 669, "a_tolist": 669, "addition": 669, "0d": 669, "typeerror": 669, "alia": 670, "despit": 670, "19": 670, "revers": [672, 695], "becom": [672, 706, 709], "altern": 672, "varianc": 673, "datahold": 675, "present": 684, "stand": 684, "alon": 684, "vertex_data": 686, "fast": [695, 707], "adapt": 695, "stackoverflow": 695, "11144513": 695, "49445693": 695, "paul": 695, "panzer": 695, "fastest": 695, "thu": [695, 709], "highest": 695, "asarrai": 696, "configu": 696, "transform": [696, 709], "contiguous_arrai": 696, "dict_": 697, "dict_with_contigu": 697, "n_col": 698, "as_arrai": 698, "everyth": 698, "dens": 698, "iga": [698, 709], "pmb": [698, 709], "n_ctp": 698, "csr_arrai": 698, "raster": 699, "lower_1": 699, "lower_2": 699, "upper_1": 699, "upper_2": 699, "resolution_1": 699, "resolution_2": 699, "thin": 700, "logfil": 701, "streamhandl": 701, "logger": [702, 703, 705], "messag": 704, "log_func": 704, "prepend": 704, "bind": [706, 707], "importantli": 706, "serv": 706, "librari": [706, 709], "integr": 706, "throughout": [706, 709], "proper": 706, "front": 706, "famlili": 706, "driven": 706, "svg": [706, 707], "to_deriv": 706, "basis_and_support": 706, "basis_derivative_and_support": 706, "current_core_properti": 706, "derivative_splin": 706, "elevate_degre": 706, "extract_dim": 706, "greville_abscissa": 706, "mapper": 706, "proxim": [706, 707], "reduce_degre": 706, "todict": 706, "extract_bezier_patch": 706, "knot_insertion_matrix": 706, "normalize_knot_vector": 706, "remove_knot": 706, "cli": 706, "clamped_knot_vector": 706, "cone": [706, 709], "determinant_splin": 706, "from_bound": 706, "parametric_view": 706, "pyramid": 706, "sphere": [706, 709], "surface_circl": 706, "toru": 706, "arrow_data": 706, "ffd": 706, "compute_knot_vector": 706, "solve_for_control_point": 706, "parametric_funct": 706, "physical_funct": 706, "basis_gradient_and_support": 706, "basis_hessian_and_support": 706, "basis_laplacian_and_support": 706, "field_deriv": 706, "multi_index": [706, 707], "reparametr": 706, "flip_ax": 706, "permute_parametric_ax": 706, "make_show": 706, "multipatchshowopt": 706, "copy_valid_opt": 706, "pop": 706, "valid_kei": 706, "cat": [706, 707], "gismo": [706, 707], "ioutil": 706, "abs_fnam": 706, "dict_to_splin": 706, "form_lin": 706, "make_meaning": 706, "next_lin": 706, "irit": [706, 707], "json": [706, 707], "dof_map": 706, "export_cartesian": 706, "read_solut": 706, "npz": [706, 707], "microstructur": 706, "parameter_sensitivity_funct": 706, "armadillo": 706, "check_param_deriv": 706, "check_param": 706, "chi": 706, "cross_2d": 706, "cross2d": 706, "cross_3d": 706, "cross3d": 706, "cross_3d_linear": 706, "cross3dlinear": 706, "cube_void": 706, "cubevoid": 706, "double_lattic": 706, "doublelattic": 706, "ellips_v_oid": 706, "ellipsvoid": 706, "hollow_cub": 706, "hollowcub": 706, "hollow_octagon": 706, "hollowoctagon": 706, "hollow_octagon_extrud": 706, "hollowoctagonextrud": 706, "inverse_cross_3d": 706, "inversecross3d": 706, "snappi": 706, "tile_bas": 706, "add_field": 706, "boundaries_from_continu": 706, "boundary_from_funct": 706, "boundary_multipatch": 706, "boundary_patch_id": 706, "combine_boundari": 706, "control_point_offset": 706, "determine_interfac": 706, "get_interfac": 706, "set_boundari": 706, "set_interfac": 706, "sub_multipatch": 706, "sub_patch_cent": 706, "requiredproperti": 706, "intersect": 706, "union": 706, "control_point_bound": 706, "cp": [706, 709], "has_knot_vector": 706, "is_rat": 706, "knot_multipl": 706, "required_properti": 706, "unique_knot": 706, "annul_cor": 706, "bezier_extraction_matrix": 706, "boundary_cent": 706, "build_typ": 706, "core_id": 706, "core_ref_count": 706, "export_ig": 706, "extract_all_boundary_splin": 706, "extract_boundari": 706, "global_knot_insertion_matrix": 706, "has_cor": 706, "interfaces_from_boundary_cent": 706, "is_minim": 706, "null_splin": 706, "read_ig": 706, "same_spline_with_knot_vector": 706, "controlpointpoint": 706, "set_row": 706, "sync": 706, "sync_row": 706, "find_span": 706, "parameterspac": 706, "n_default_thread": 706, "weightpoint": 706, "cartesian_product": 706, "enforce_contigu": 706, "enforce_contiguous_valu": 706, "make_matrix": 706, "uniform_queri": 706, "as_arrow": 706, "as_scalar": 706, "physicalspacearrai": 706, "argmax": 706, "argmin": 706, "astyp": 706, "byteswap": 706, "clip": 706, "conj": 706, "cumprod": 706, "cumsum": 706, "dot": [706, 709], "dump": 706, "full_row_indic": 706, "itemset": 706, "nonzero": [706, 709], "ptp": 706, "resiz": 706, "round": 706, "row_indic": 706, "setfield": 706, "setflag": 706, "squeez": 706, "std": 706, "swapax": 706, "tofil": 706, "tostr": 706, "trace": 706, "transpos": 706, "var": 706, "splinedataadaptor": 706, "as_vertex_data": 706, "is_splin": 706, "has_funct": 706, "has_loc": 706, "has_evalu": 706, "arrow_data_onli": 706, "log": 706, "prepend_log": 706, "wheel": 707, "maco": 707, "linux": 707, "quotat": 707, "shell": 707, "Of": 707, "cours": 707, "aforement": 707, "cmake3": 707, "easiest": 707, "tataratat": 707, "total_number_of_control_point": 707, "physical_dimens": 707, "But": 707, "grid_cp": 707, "assert": 707, "1156": 707, "9091": 707, "physical_coord": 707, "execut": 707, "parallel": 707, "multithread": 707, "heavi": 707, "physical_coords_parallel": 707, "onlin": 707, "click": 707, "binder": 707, "badg": 707, "capabl": [707, 709], "routin": 707, "book": [707, 709], "offer": 707, "concept": 707, "isogeometr": [707, 709], "analysi": [707, 709], "automat": 707, "identif": 707, "techniqu": 707, "base64": 707, "controlpoints_cartesian": 707, "savez": 707, "adher": 707, "feel": [707, 709], "repositori": 707, "link": 707, "packag": 707, "pybind11": 707, "main": 707, "napf": 707, "wrap": 707, "nanoflann": 707, "manipul": 707, "matric": 707, "platform": 707, "setuptool": 707, "cibuildwheel": 707, "ci": 707, "server": 707, "contribut": 707, "flexibl": 709, "smooth": 709, "enjoi": 709, "great": 709, "success": 709, "engin": 709, "architectur": 709, "inspir": 709, "roger": 709, "piegl": 709, "tiller": 709, "exact": 709, "facet": 709, "few": 709, "ones": 709, "deal": 709, "sin": 709, "usual": 709, "notic": 709, "immers": 709, "reason": 709, "necessarili": 709, "n_i": 709, "go": 709, "arrang": 709, "univari": 709, "m_j": 709, "mention": 709, "constitut": 709, "aid": 709, "stori": 709, "propos": 709, "hugh": 709, "cottrel": 709, "bazilev": 709, "2005": 709, "princip": 709, "ask": 709, "reader": 709, "mind": 709, "after": 709, "pierr": 709, "1910": 709, "1999": 709, "french": 709, "renault": 709, "founder": 709, "cad": 709, "cam": 709, "earliest": 709, "bernstein": 709, "fix": 709, "freeli": 709, "been": 709, "terminologi": 709, "conflict": 709, "appar": 709, "geomet": 709, "analyst": 709, "commun": 709, "tend": 709, "those": 709, "noindent": 709, "2u": 709, "convex": 709, "hull": 709, "polygon": 709, "largest": 709, "entir": 709, "underbrac": 709, "qquad": 709, "neq": 709, "p_": 709, "_n": 709, "uniti": 709, "modern": 709, "longer": 709, "plai": 709, "role": 709, "conic": 709, "suffici": 709, "constraint": 709, "r_": 709, "hat": 709, "omega_i": 709, "measur": 709, "influenc": 709, "technic": 709, "cancel": 709, "denomin": 709, "portion": 709, "word": 709, "contrast": 709, "seri": 709, "collect": 709, "le": 709, "nonumb": 709, "leftrightarrow": 709, "period": 709, "rule": 709, "middl": 709, "recurr": 709, "subsequ": 709, "across": 709, "fact": 709, "david": 709, "histor": 709, "perspect": 709, "morgan": 709, "kaufmann": 709, "2001": 709, "wayn": 709, "springer": 709, "scienc": 709, "busi": 709, "media": 709, "1996": 709, "thoma": 709, "jr": 709, "john": 709, "yuri": 709, "finit": 709, "refin": 709, "mechan": 709, "194": 709, "39": 709, "41": 709, "4135": 709, "4195": 709, "abil": 709, "brief": 709, "120": 709, "00000000e": 709, "00000000e00": 709, "88675135e": 709, "77350269e": 709, "50000000e": 709, "33012702e": 709, "66025404e": 709, "15470054e00": 709, "8660254": 709, "might": 709, "think": 709, "lot": 709, "why": 709, "power": 709, "fly": 709, "easy_disk": 709, "handmad": 709, "much": 709, "easier": 709, "perus": 709, "helmp": 709, "70": 709, "folder": 709, "k3d": 709, "top": 709, "default_backend": 709, "someth": 709, "script": 709, "regard": 709, "200": 709, "meanwhil": 709, "201": 709, "ipynb": 709}, "objects": {"": [[1, 0, 0, "-", "splinepy"]], "splinepy": [[2, 0, 0, "-", "bezier"], [61, 0, 0, "-", "bspline"], [118, 0, 0, "-", "cli"], [122, 0, 0, "-", "helpme"], [237, 0, 0, "-", "io"], [274, 0, 0, "-", "microstructure"], [359, 0, 0, "-", "multipatch"], [388, 0, 0, "-", "nurbs"], [417, 0, 0, "-", "rational_bezier"], [447, 0, 0, "-", "settings"], [452, 0, 0, "-", "spline"], [506, 0, 0, "-", "splinepy_core"], [604, 4, 1, "", "to_derived"], [605, 0, 0, "-", "utils"]], "splinepy.bezier": [[3, 1, 1, "", "Bezier"], [34, 1, 1, "", "BezierBase"]], "splinepy.bezier.Bezier": [[4, 2, 1, "", "basis"], [5, 2, 1, "", "basis_and_support"], [6, 2, 1, "", "basis_derivative"], [7, 2, 1, "", "basis_derivative_and_support"], [8, 3, 1, "", "bezier"], [9, 3, 1, "", "bspline"], [10, 2, 1, "", "clear"], [11, 2, 1, "", "compose"], [12, 2, 1, "", "composition_derivative"], [13, 2, 1, "", "copy"], [14, 2, 1, "", "current_core_properties"], [15, 2, 1, "", "derivative"], [16, 2, 1, "", "derivative_spline"], [17, 2, 1, "", "elevate_degrees"], [18, 2, 1, "", "evaluate"], [19, 2, 1, "", "export"], [20, 2, 1, "", "extract_dim"], [21, 2, 1, "", "greville_abscissae"], [22, 2, 1, "", "jacobian"], [23, 2, 1, "", "mapper"], [24, 3, 1, "", "nurbs"], [25, 2, 1, "", "proximities"], [26, 3, 1, "", "rationalbezier"], [27, 2, 1, "", "reduce_degrees"], [28, 2, 1, "", "sample"], [29, 2, 1, "", "show"], [30, 2, 1, "", "showable"], [31, 2, 1, "", "split"], [32, 2, 1, "", "support"], [33, 2, 1, "", "todict"]], "splinepy.bezier.BezierBase": [[35, 2, 1, "", "basis"], [36, 2, 1, "", "basis_and_support"], [37, 2, 1, "", "basis_derivative"], [38, 2, 1, "", "basis_derivative_and_support"], [39, 2, 1, "", "clear"], [40, 2, 1, "", "compose"], [41, 2, 1, "", "composition_derivative"], [42, 2, 1, "", "copy"], [43, 2, 1, "", "current_core_properties"], [44, 2, 1, "", "derivative"], [45, 2, 1, "", "derivative_spline"], [46, 2, 1, "", "elevate_degrees"], [47, 2, 1, "", "evaluate"], [48, 2, 1, "", "export"], [49, 2, 1, "", "extract_dim"], [50, 2, 1, "", "greville_abscissae"], [51, 2, 1, "", "jacobian"], [52, 2, 1, "", "mapper"], [53, 2, 1, "", "proximities"], [54, 2, 1, "", "reduce_degrees"], [55, 2, 1, "", "sample"], [56, 2, 1, "", "show"], [57, 2, 1, "", "showable"], [58, 2, 1, "", "split"], [59, 2, 1, "", "support"], [60, 2, 1, "", "todict"]], "splinepy.bspline": [[62, 1, 1, "", "BSpline"], [91, 1, 1, "", "BSplineBase"]], "splinepy.bspline.BSpline": [[63, 2, 1, "", "basis"], [64, 2, 1, "", "basis_and_support"], [65, 2, 1, "", "basis_derivative"], [66, 2, 1, "", "basis_derivative_and_support"], [67, 3, 1, "", "bspline"], [68, 2, 1, "", "clear"], [69, 2, 1, "", "copy"], [70, 2, 1, "", "current_core_properties"], [71, 2, 1, "", "derivative"], [72, 2, 1, "", "elevate_degrees"], [73, 2, 1, "", "evaluate"], [74, 2, 1, "", "export"], [75, 2, 1, "", "extract_bezier_patches"], [76, 2, 1, "", "greville_abscissae"], [77, 2, 1, "", "insert_knots"], [78, 2, 1, "", "jacobian"], [79, 2, 1, "", "knot_insertion_matrix"], [80, 2, 1, "", "mapper"], [81, 2, 1, "", "normalize_knot_vectors"], [82, 3, 1, "", "nurbs"], [83, 2, 1, "", "proximities"], [84, 2, 1, "", "reduce_degrees"], [85, 2, 1, "", "remove_knots"], [86, 2, 1, "", "sample"], [87, 2, 1, "", "show"], [88, 2, 1, "", "showable"], [89, 2, 1, "", "support"], [90, 2, 1, "", "todict"]], "splinepy.bspline.BSplineBase": [[92, 2, 1, "", "basis"], [93, 2, 1, "", "basis_and_support"], [94, 2, 1, "", "basis_derivative"], [95, 2, 1, "", "basis_derivative_and_support"], [96, 2, 1, "", "clear"], [97, 2, 1, "", "copy"], [98, 2, 1, "", "current_core_properties"], [99, 2, 1, "", "derivative"], [100, 2, 1, "", "elevate_degrees"], [101, 2, 1, "", "evaluate"], [102, 2, 1, "", "export"], [103, 2, 1, "", "extract_bezier_patches"], [104, 2, 1, "", "greville_abscissae"], [105, 2, 1, "", "insert_knots"], [106, 2, 1, "", "jacobian"], [107, 2, 1, "", "knot_insertion_matrix"], [108, 2, 1, "", "mapper"], [109, 2, 1, "", "normalize_knot_vectors"], [110, 2, 1, "", "proximities"], [111, 2, 1, "", "reduce_degrees"], [112, 2, 1, "", "remove_knots"], [113, 2, 1, "", "sample"], [114, 2, 1, "", "show"], [115, 2, 1, "", "showable"], [116, 2, 1, "", "support"], [117, 2, 1, "", "todict"]], "splinepy.cli": [[119, 4, 1, "", "convert"], [120, 4, 1, "", "entry"], [121, 4, 1, "", "show"]], "splinepy.helpme": [[123, 0, 0, "-", "check"], [129, 0, 0, "-", "create"], [153, 0, 0, "-", "extract"], [178, 0, 0, "-", "ffd"], [185, 0, 0, "-", "fit"], [191, 0, 0, "-", "integrate"], [198, 0, 0, "-", "mapper"], [209, 0, 0, "-", "multi_index"], [211, 0, 0, "-", "reparametrize"], [214, 0, 0, "-", "visualize"]], "splinepy.helpme.check": [[124, 1, 1, "", "Checker"], [127, 4, 1, "", "clamped_knot_vectors"], [128, 4, 1, "", "valid_queries"]], "splinepy.helpme.check.Checker": [[125, 2, 1, "", "clamped_knot_vectors"], [126, 2, 1, "", "valid_queries"]], "splinepy.helpme.create": [[130, 1, 1, "", "Creator"], [136, 4, 1, "", "arc"], [137, 4, 1, "", "box"], [138, 4, 1, "", "circle"], [139, 4, 1, "", "cone"], [140, 4, 1, "", "determinant_spline"], [141, 4, 1, "", "disk"], [142, 4, 1, "", "embedded"], [143, 4, 1, "", "extruded"], [144, 4, 1, "", "from_bounds"], [145, 4, 1, "", "line"], [146, 4, 1, "", "parametric_view"], [147, 4, 1, "", "plate"], [148, 4, 1, "", "pyramid"], [149, 4, 1, "", "revolved"], [150, 4, 1, "", "sphere"], [151, 4, 1, "", "surface_circle"], [152, 4, 1, "", "torus"]], "splinepy.helpme.create.Creator": [[131, 2, 1, "", "determinant_spline"], [132, 2, 1, "", "embedded"], [133, 2, 1, "", "extruded"], [134, 2, 1, "", "parametric_view"], [135, 2, 1, "", "revolved"]], "splinepy.helpme.extract": [[154, 1, 1, "", "Extractor"], [167, 4, 1, "", "arrow_data"], [168, 4, 1, "", "boundaries"], [169, 4, 1, "", "control_edges"], [170, 4, 1, "", "control_faces"], [171, 4, 1, "", "control_mesh"], [172, 4, 1, "", "control_points"], [173, 4, 1, "", "control_volumes"], [174, 4, 1, "", "edges"], [175, 4, 1, "", "faces"], [176, 4, 1, "", "spline"], [177, 4, 1, "", "volumes"]], "splinepy.helpme.extract.Extractor": [[155, 2, 1, "", "arrow_data"], [156, 2, 1, "", "beziers"], [157, 2, 1, "", "boundaries"], [158, 2, 1, "", "control_edges"], [159, 2, 1, "", "control_faces"], [160, 2, 1, "", "control_mesh"], [161, 2, 1, "", "control_points"], [162, 2, 1, "", "control_volumes"], [163, 2, 1, "", "edges"], [164, 2, 1, "", "faces"], [165, 2, 1, "", "spline"], [166, 2, 1, "", "volumes"]], "splinepy.helpme.ffd": [[179, 1, 1, "", "FFD"]], "splinepy.helpme.ffd.FFD": [[180, 3, 1, "", "mesh"], [181, 3, 1, "", "padding"], [182, 2, 1, "", "show"], [183, 2, 1, "", "showable"], [184, 3, 1, "", "spline"]], "splinepy.helpme.fit": [[186, 4, 1, "", "compute_knot_vector"], [187, 4, 1, "", "curve"], [188, 4, 1, "", "parameterize"], [189, 4, 1, "", "solve_for_control_points"], [190, 4, 1, "", "surface"]], "splinepy.helpme.integrate": [[192, 1, 1, "", "Integrator"], [195, 4, 1, "", "parametric_function"], [196, 4, 1, "", "physical_function"], [197, 4, 1, "", "volume"]], "splinepy.helpme.integrate.Integrator": [[193, 2, 1, "", "parametric_function"], [194, 2, 1, "", "volume"]], "splinepy.helpme.mapper": [[199, 1, 1, "", "Mapper"]], "splinepy.helpme.mapper.Mapper": [[200, 2, 1, "", "basis_function_derivatives"], [201, 2, 1, "", "basis_gradient_and_support"], [202, 2, 1, "", "basis_hessian_and_support"], [203, 2, 1, "", "basis_laplacian_and_support"], [204, 2, 1, "", "divergence"], [205, 2, 1, "", "field_derivatives"], [206, 2, 1, "", "gradient"], [207, 2, 1, "", "hessian"], [208, 2, 1, "", "laplacian"]], "splinepy.helpme.multi_index": [[210, 1, 1, "", "MultiIndex"]], "splinepy.helpme.reparametrize": [[212, 4, 1, "", "flip_axes"], [213, 4, 1, "", "permute_parametric_axes"]], "splinepy.helpme.visualize": [[215, 1, 1, "", "MultipatchShowOption"], [225, 1, 1, "", "SplineShowOption"], [235, 4, 1, "", "make_showable"], [236, 4, 1, "", "show"]], "splinepy.helpme.visualize.MultipatchShowOption": [[216, 2, 1, "", "clear"], [217, 2, 1, "", "copy_valid_options"], [218, 2, 1, "", "get"], [219, 2, 1, "", "items"], [220, 2, 1, "", "keys"], [221, 2, 1, "", "pop"], [222, 2, 1, "", "update"], [223, 2, 1, "", "valid_keys"], [224, 2, 1, "", "values"]], "splinepy.helpme.visualize.SplineShowOption": [[226, 2, 1, "", "clear"], [227, 2, 1, "", "copy_valid_options"], [228, 2, 1, "", "get"], [229, 2, 1, "", "items"], [230, 2, 1, "", "keys"], [231, 2, 1, "", "pop"], [232, 2, 1, "", "update"], [233, 2, 1, "", "valid_keys"], [234, 2, 1, "", "values"]], "splinepy.io": [[238, 0, 0, "-", "cats"], [241, 0, 0, "-", "default"], [244, 0, 0, "-", "gismo"], [247, 0, 0, "-", "iges"], [250, 0, 0, "-", "ioutils"], [257, 0, 0, "-", "irit"], [260, 0, 0, "-", "json"], [263, 0, 0, "-", "mfem"], [269, 0, 0, "-", "npz"], [272, 0, 0, "-", "svg"]], "splinepy.io.cats": [[239, 4, 1, "", "export"], [240, 4, 1, "", "load"]], "splinepy.io.default": [[242, 4, 1, "", "export"], [243, 4, 1, "", "load"]], "splinepy.io.gismo": [[245, 4, 1, "", "export"], [246, 4, 1, "", "load"]], "splinepy.io.iges": [[248, 4, 1, "", "export"], [249, 4, 1, "", "load"]], "splinepy.io.ioutils": [[251, 4, 1, "", "abs_fname"], [252, 4, 1, "", "dict_to_spline"], [253, 4, 1, "", "expand_tabs"], [254, 4, 1, "", "form_lines"], [255, 4, 1, "", "make_meaningful"], [256, 4, 1, "", "next_line"]], "splinepy.io.irit": [[258, 4, 1, "", "export"], [259, 4, 1, "", "load"]], "splinepy.io.json": [[261, 4, 1, "", "export"], [262, 4, 1, "", "load"]], "splinepy.io.mfem": [[264, 4, 1, "", "dof_mapping"], [265, 4, 1, "", "export"], [266, 4, 1, "", "export_cartesian"], [267, 4, 1, "", "load"], [268, 4, 1, "", "read_solution"]], "splinepy.io.npz": [[270, 4, 1, "", "export"], [271, 4, 1, "", "load"]], "splinepy.io.svg": [[273, 4, 1, "", "export"]], "splinepy.microstructure": [[275, 0, 0, "-", "microstructure"], [284, 0, 0, "-", "tiles"]], "splinepy.microstructure.microstructure": [[276, 1, 1, "", "Microstructure"]], "splinepy.microstructure.microstructure.Microstructure": [[277, 2, 1, "", "create"], [278, 3, 1, "", "deformation_function"], [279, 3, 1, "", "microtile"], [280, 3, 1, "", "parameter_sensitivity_function"], [281, 3, 1, "", "parametrization_function"], [282, 2, 1, "", "show"], [283, 3, 1, "", "tiling"]], "splinepy.microstructure.tiles": [[285, 0, 0, "-", "armadillo"], [291, 0, 0, "-", "chi"], [296, 0, 0, "-", "cross_2d"], [301, 0, 0, "-", "cross_3d"], [306, 0, 0, "-", "cross_3d_linear"], [311, 0, 0, "-", "cube_void"], [316, 0, 0, "-", "double_lattice"], [321, 0, 0, "-", "ellips_v_oid"], [326, 0, 0, "-", "hollow_cube"], [331, 0, 0, "-", "hollow_octagon"], [336, 0, 0, "-", "hollow_octagon_extrude"], [342, 0, 0, "-", "inverse_cross_3d"], [347, 0, 0, "-", "snappy"], [352, 0, 0, "-", "tile_base"]], "splinepy.microstructure.tiles.armadillo": [[286, 1, 1, "", "Armadillo"]], "splinepy.microstructure.tiles.armadillo.Armadillo": [[287, 2, 1, "", "check_param_derivatives"], [288, 2, 1, "", "check_params"], [289, 2, 1, "", "closing_tile"], [290, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.chi": [[292, 1, 1, "", "Chi"]], "splinepy.microstructure.tiles.chi.Chi": [[293, 2, 1, "", "check_param_derivatives"], [294, 2, 1, "", "check_params"], [295, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.cross_2d": [[297, 1, 1, "", "Cross2D"]], "splinepy.microstructure.tiles.cross_2d.Cross2D": [[298, 2, 1, "", "check_param_derivatives"], [299, 2, 1, "", "check_params"], [300, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.cross_3d": [[302, 1, 1, "", "Cross3D"]], "splinepy.microstructure.tiles.cross_3d.Cross3D": [[303, 2, 1, "", "check_param_derivatives"], [304, 2, 1, "", "check_params"], [305, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.cross_3d_linear": [[307, 1, 1, "", "Cross3DLinear"]], "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear": [[308, 2, 1, "", "check_param_derivatives"], [309, 2, 1, "", "check_params"], [310, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.cube_void": [[312, 1, 1, "", "CubeVoid"]], "splinepy.microstructure.tiles.cube_void.CubeVoid": [[313, 2, 1, "", "check_param_derivatives"], [314, 2, 1, "", "check_params"], [315, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.double_lattice": [[317, 1, 1, "", "DoubleLattice"]], "splinepy.microstructure.tiles.double_lattice.DoubleLattice": [[318, 2, 1, "", "check_param_derivatives"], [319, 2, 1, "", "check_params"], [320, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.ellips_v_oid": [[322, 1, 1, "", "EllipsVoid"]], "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid": [[323, 2, 1, "", "check_param_derivatives"], [324, 2, 1, "", "check_params"], [325, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.hollow_cube": [[327, 1, 1, "", "HollowCube"]], "splinepy.microstructure.tiles.hollow_cube.HollowCube": [[328, 2, 1, "", "check_param_derivatives"], [329, 2, 1, "", "check_params"], [330, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.hollow_octagon": [[332, 1, 1, "", "HollowOctagon"]], "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon": [[333, 2, 1, "", "check_param_derivatives"], [334, 2, 1, "", "check_params"], [335, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.hollow_octagon_extrude": [[337, 1, 1, "", "HollowOctagonExtrude"]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude": [[338, 2, 1, "", "check_param_derivatives"], [339, 2, 1, "", "check_params"], [340, 2, 1, "", "closing_tile"], [341, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.inverse_cross_3d": [[343, 1, 1, "", "InverseCross3D"]], "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D": [[344, 2, 1, "", "check_param_derivatives"], [345, 2, 1, "", "check_params"], [346, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.snappy": [[348, 1, 1, "", "Snappy"]], "splinepy.microstructure.tiles.snappy.Snappy": [[349, 2, 1, "", "check_param_derivatives"], [350, 2, 1, "", "check_params"], [351, 2, 1, "", "create_tile"]], "splinepy.microstructure.tiles.tile_base": [[353, 1, 1, "", "TileBase"]], "splinepy.microstructure.tiles.tile_base.TileBase": [[354, 2, 1, "", "check_param_derivatives"], [355, 2, 1, "", "check_params"], [356, 3, 1, "", "dim"], [357, 3, 1, "", "evaluation_points"], [358, 3, 1, "", "para_dim"]], "splinepy.multipatch": [[360, 1, 1, "", "Multipatch"]], "splinepy.multipatch.Multipatch": [[361, 2, 1, "", "add_fields"], [362, 3, 1, "", "boundaries"], [363, 2, 1, "", "boundaries_from_continuity"], [364, 2, 1, "", "boundary_from_function"], [365, 2, 1, "", "boundary_multipatch"], [366, 2, 1, "", "boundary_patch_ids"], [367, 2, 1, "", "clear"], [368, 2, 1, "", "combine_boundaries"], [369, 2, 1, "", "control_point_offsets"], [370, 2, 1, "", "determine_interfaces"], [371, 3, 1, "", "dim"], [372, 2, 1, "", "evaluate"], [373, 3, 1, "", "extract"], [374, 3, 1, "", "fields"], [375, 2, 1, "", "get_interfaces"], [376, 3, 1, "", "interfaces"], [377, 3, 1, "", "para_dim"], [378, 3, 1, "", "patches"], [379, 2, 1, "", "sample"], [380, 2, 1, "", "set_boundary"], [381, 2, 1, "", "set_interfaces"], [382, 2, 1, "", "show"], [383, 3, 1, "", "show_options"], [384, 2, 1, "", "showable"], [385, 3, 1, "", "spline_data"], [386, 2, 1, "", "sub_multipatch"], [387, 3, 1, "", "sub_patch_centers"]], "splinepy.nurbs": [[389, 1, 1, "", "NURBS"]], "splinepy.nurbs.NURBS": [[390, 2, 1, "", "basis"], [391, 2, 1, "", "basis_and_support"], [392, 2, 1, "", "basis_derivative"], [393, 2, 1, "", "basis_derivative_and_support"], [394, 2, 1, "", "clear"], [395, 2, 1, "", "copy"], [396, 2, 1, "", "current_core_properties"], [397, 2, 1, "", "derivative"], [398, 2, 1, "", "elevate_degrees"], [399, 2, 1, "", "evaluate"], [400, 2, 1, "", "export"], [401, 2, 1, "", "extract_bezier_patches"], [402, 2, 1, "", "greville_abscissae"], [403, 2, 1, "", "insert_knots"], [404, 2, 1, "", "jacobian"], [405, 2, 1, "", "knot_insertion_matrix"], [406, 2, 1, "", "mapper"], [407, 2, 1, "", "normalize_knot_vectors"], [408, 3, 1, "", "nurbs"], [409, 2, 1, "", "proximities"], [410, 2, 1, "", "reduce_degrees"], [411, 2, 1, "", "remove_knots"], [412, 2, 1, "", "sample"], [413, 2, 1, "", "show"], [414, 2, 1, "", "showable"], [415, 2, 1, "", "support"], [416, 2, 1, "", "todict"]], "splinepy.rational_bezier": [[418, 1, 1, "", "RationalBezier"]], "splinepy.rational_bezier.RationalBezier": [[419, 2, 1, "", "basis"], [420, 2, 1, "", "basis_and_support"], [421, 2, 1, "", "basis_derivative"], [422, 2, 1, "", "basis_derivative_and_support"], [423, 2, 1, "", "clear"], [424, 2, 1, "", "compose"], [425, 2, 1, "", "composition_derivative"], [426, 2, 1, "", "copy"], [427, 2, 1, "", "current_core_properties"], [428, 2, 1, "", "derivative"], [429, 2, 1, "", "derivative_spline"], [430, 2, 1, "", "elevate_degrees"], [431, 2, 1, "", "evaluate"], [432, 2, 1, "", "export"], [433, 2, 1, "", "extract_dim"], [434, 2, 1, "", "greville_abscissae"], [435, 2, 1, "", "jacobian"], [436, 2, 1, "", "mapper"], [437, 3, 1, "", "nurbs"], [438, 2, 1, "", "proximities"], [439, 3, 1, "", "rationalbezier"], [440, 2, 1, "", "reduce_degrees"], [441, 2, 1, "", "sample"], [442, 2, 1, "", "show"], [443, 2, 1, "", "showable"], [444, 2, 1, "", "split"], [445, 2, 1, "", "support"], [446, 2, 1, "", "todict"]], "splinepy.settings": [[448, 5, 1, "", "CHECK_BOUNDS"], [449, 5, 1, "", "NAME_TO_TYPE"], [450, 5, 1, "", "NTHREADS"], [451, 5, 1, "", "TOLERANCE"]], "splinepy.spline": [[453, 1, 1, "", "RequiredProperties"], [457, 1, 1, "", "Spline"]], "splinepy.spline.RequiredProperties": [[454, 2, 1, "", "intersection"], [455, 2, 1, "", "of"], [456, 2, 1, "", "union"]], "splinepy.spline.Spline": [[458, 2, 1, "", "basis"], [459, 2, 1, "", "basis_and_support"], [460, 2, 1, "", "basis_derivative"], [461, 2, 1, "", "basis_derivative_and_support"], [462, 3, 1, "", "check"], [463, 2, 1, "", "clear"], [464, 3, 1, "", "control_mesh_resolutions"], [465, 3, 1, "", "control_point_bounds"], [466, 3, 1, "", "control_points"], [467, 2, 1, "", "copy"], [468, 3, 1, "", "cps"], [469, 3, 1, "", "create"], [470, 2, 1, "", "current_core_properties"], [471, 3, 1, "", "degrees"], [472, 2, 1, "", "derivative"], [473, 3, 1, "", "dim"], [474, 3, 1, "", "ds"], [475, 2, 1, "", "elevate_degrees"], [476, 2, 1, "", "evaluate"], [477, 2, 1, "", "export"], [478, 3, 1, "", "extract"], [479, 2, 1, "", "greville_abscissae"], [480, 3, 1, "", "has_knot_vectors"], [481, 3, 1, "", "integrate"], [482, 3, 1, "", "is_rational"], [483, 2, 1, "", "jacobian"], [484, 3, 1, "", "knot_multiplicities"], [485, 3, 1, "", "knot_vectors"], [486, 3, 1, "", "kvs"], [487, 2, 1, "", "mapper"], [488, 3, 1, "", "multi_index"], [489, 3, 1, "", "name"], [490, 3, 1, "", "para_dim"], [491, 3, 1, "", "parametric_bounds"], [492, 2, 1, "", "proximities"], [493, 2, 1, "", "reduce_degrees"], [494, 3, 1, "", "required_properties"], [495, 2, 1, "", "sample"], [496, 2, 1, "", "show"], [497, 3, 1, "", "show_options"], [498, 2, 1, "", "showable"], [499, 3, 1, "", "spline_data"], [500, 2, 1, "", "support"], [501, 2, 1, "", "todict"], [502, 3, 1, "", "unique_knots"], [503, 3, 1, "", "weights"], [504, 3, 1, "", "whatami"], [505, 3, 1, "", "ws"]], "splinepy.splinepy_core": [[507, 1, 1, "", "ControlPointPointers"], [514, 1, 1, "", "KnotVector"], [520, 1, 1, "", "ParameterSpace"], [523, 1, 1, "", "PyMultipatch"], [545, 1, 1, "", "PySpline"], [567, 1, 1, "", "WeightPointers"], [574, 4, 1, "", "add"], [575, 4, 1, "", "annul_core"], [576, 4, 1, "", "bezier_extraction_matrix"], [577, 4, 1, "", "boundaries_from_continuity"], [578, 4, 1, "", "boundary_centers"], [579, 4, 1, "", "build_type"], [580, 4, 1, "", "compose"], [581, 4, 1, "", "compose_sensitivities"], [582, 4, 1, "", "composition_derivative"], [583, 4, 1, "", "core_id"], [584, 4, 1, "", "core_ref_count"], [585, 4, 1, "", "derivative_spline"], [586, 4, 1, "", "export_iges"], [587, 4, 1, "", "extract_all_boundary_splines"], [588, 4, 1, "", "extract_bezier_patches"], [589, 4, 1, "", "extract_boundaries"], [590, 4, 1, "", "extract_dim"], [591, 4, 1, "", "global_knot_insertion_matrix"], [592, 4, 1, "", "has_core"], [593, 4, 1, "", "insert_knots"], [594, 4, 1, "", "interfaces_from_boundary_centers"], [595, 4, 1, "", "is_minimal"], [596, 4, 1, "", "knot_insertion_matrix"], [597, 4, 1, "", "multiply"], [598, 4, 1, "", "null_spline"], [599, 4, 1, "", "orientations"], [600, 4, 1, "", "read_iges"], [601, 4, 1, "", "remove_knots"], [602, 4, 1, "", "same_spline_with_knot_vectors"], [603, 4, 1, "", "split"]], "splinepy.splinepy_core.ControlPointPointers": [[508, 2, 1, "", "dim"], [509, 2, 1, "", "len"], [510, 2, 1, "", "set_row"], [511, 2, 1, "", "set_rows"], [512, 2, 1, "", "sync"], [513, 2, 1, "", "sync_rows"]], "splinepy.splinepy_core.KnotVector": [[515, 2, 1, "", "find_span"], [516, 2, 1, "", "multiplicities"], [517, 2, 1, "", "numpy"], [518, 2, 1, "", "scale"], [519, 2, 1, "", "unique"]], "splinepy.splinepy_core.ParameterSpace": [[521, 2, 1, "", "copy"], [522, 2, 1, "", "unique_knots"]], "splinepy.splinepy_core.PyMultipatch": [[524, 2, 1, "", "add_fields"], [525, 2, 1, "", "boundary_multipatch"], [526, 2, 1, "", "boundary_patch_ids"], [527, 2, 1, "", "clear"], [528, 2, 1, "", "control_point_offsets"], [529, 3, 1, "", "control_points"], [530, 3, 1, "", "dim"], [531, 2, 1, "", "evaluate"], [532, 2, 1, "", "fields"], [533, 2, 1, "", "get_interfaces"], [534, 3, 1, "", "n_default_threads"], [535, 3, 1, "", "name"], [536, 3, 1, "", "para_dim"], [537, 3, 1, "", "patches"], [538, 3, 1, "", "same_parametric_bounds"], [539, 2, 1, "", "sample"], [540, 2, 1, "", "set_interfaces"], [541, 2, 1, "", "sub_multipatch"], [542, 2, 1, "", "sub_patch_centers"], [543, 3, 1, "", "tolerance"], [544, 3, 1, "", "whatami"]], "splinepy.splinepy_core.PySpline": [[546, 2, 1, "", "basis"], [547, 2, 1, "", "basis_and_support"], [548, 2, 1, "", "basis_derivative"], [549, 2, 1, "", "basis_derivative_and_support"], [550, 3, 1, "", "control_mesh_resolutions"], [551, 2, 1, "", "current_core_properties"], [552, 2, 1, "", "derivative"], [553, 3, 1, "", "dim"], [554, 2, 1, "", "elevate_degrees"], [555, 2, 1, "", "evaluate"], [556, 3, 1, "", "has_knot_vectors"], [557, 3, 1, "", "is_rational"], [558, 2, 1, "", "jacobian"], [559, 3, 1, "", "name"], [560, 3, 1, "", "para_dim"], [561, 3, 1, "", "parametric_bounds"], [562, 2, 1, "", "proximities"], [563, 2, 1, "", "reduce_degrees"], [564, 2, 1, "", "sample"], [565, 2, 1, "", "support"], [566, 3, 1, "", "whatami"]], "splinepy.splinepy_core.WeightPointers": [[568, 2, 1, "", "dim"], [569, 2, 1, "", "len"], [570, 2, 1, "", "set_row"], [571, 2, 1, "", "set_rows"], [572, 2, 1, "", "sync"], [573, 2, 1, "", "sync_rows"]], "splinepy.utils": [[606, 0, 0, "-", "data"], [700, 0, 0, "-", "log"]], "splinepy.utils.data": [[607, 1, 1, "", "MultipatchData"], [616, 1, 1, "", "PhysicalSpaceArray"], [675, 1, 1, "", "SplineData"], [684, 1, 1, "", "SplineDataAdaptor"], [695, 4, 1, "", "cartesian_product"], [696, 4, 1, "", "enforce_contiguous"], [697, 4, 1, "", "enforce_contiguous_values"], [698, 4, 1, "", "make_matrix"], [699, 4, 1, "", "uniform_query"]], "splinepy.utils.data.MultipatchData": [[608, 2, 1, "", "as_arrow"], [609, 2, 1, "", "as_scalar"], [610, 2, 1, "", "clear"], [611, 2, 1, "", "get"], [612, 2, 1, "", "items"], [613, 2, 1, "", "keys"], [614, 2, 1, "", "pop"], [615, 2, 1, "", "values"]], "splinepy.utils.data.PhysicalSpaceArray": [[617, 2, 1, "", "all"], [618, 2, 1, "", "any"], [619, 2, 1, "", "argmax"], [620, 2, 1, "", "argmin"], [621, 2, 1, "", "argpartition"], [622, 2, 1, "", "argsort"], [623, 2, 1, "", "astype"], [624, 2, 1, "", "byteswap"], [625, 2, 1, "", "choose"], [626, 2, 1, "", "clip"], [627, 2, 1, "", "compress"], [628, 2, 1, "", "conj"], [629, 2, 1, "", "conjugate"], [630, 2, 1, "", "copy"], [631, 2, 1, "", "cumprod"], [632, 2, 1, "", "cumsum"], [633, 2, 1, "", "diagonal"], [634, 2, 1, "", "dot"], [635, 2, 1, "", "dump"], [636, 2, 1, "", "dumps"], [637, 2, 1, "", "fill"], [638, 2, 1, "", "flatten"], [639, 2, 1, "", "full_row_indices"], [640, 2, 1, "", "getfield"], [641, 2, 1, "", "item"], [642, 2, 1, "", "itemset"], [643, 2, 1, "", "max"], [644, 2, 1, "", "mean"], [645, 2, 1, "", "min"], [646, 2, 1, "", "newbyteorder"], [647, 2, 1, "", "nonzero"], [648, 2, 1, "", "partition"], [649, 2, 1, "", "prod"], [650, 2, 1, "", "ptp"], [651, 2, 1, "", "put"], [652, 2, 1, "", "ravel"], [653, 2, 1, "", "repeat"], [654, 2, 1, "", "reshape"], [655, 2, 1, "", "resize"], [656, 2, 1, "", "round"], [657, 2, 1, "", "row_indices"], [658, 2, 1, "", "searchsorted"], [659, 2, 1, "", "setfield"], [660, 2, 1, "", "setflags"], [661, 2, 1, "", "sort"], [662, 2, 1, "", "squeeze"], [663, 2, 1, "", "std"], [664, 2, 1, "", "sum"], [665, 2, 1, "", "swapaxes"], [666, 2, 1, "", "take"], [667, 2, 1, "", "tobytes"], [668, 2, 1, "", "tofile"], [669, 2, 1, "", "tolist"], [670, 2, 1, "", "tostring"], [671, 2, 1, "", "trace"], [672, 2, 1, "", "transpose"], [673, 2, 1, "", "var"], [674, 2, 1, "", "view"]], "splinepy.utils.data.SplineData": [[676, 2, 1, "", "as_arrow"], [677, 2, 1, "", "as_scalar"], [678, 2, 1, "", "clear"], [679, 2, 1, "", "get"], [680, 2, 1, "", "items"], [681, 2, 1, "", "keys"], [682, 2, 1, "", "pop"], [683, 2, 1, "", "values"]], "splinepy.utils.data.SplineDataAdaptor": [[685, 6, 1, "", "arrow_data_only"], [686, 2, 1, "", "as_vertex_data"], [687, 6, 1, "", "data"], [688, 6, 1, "", "function"], [689, 6, 1, "", "has_evaluate"], [690, 6, 1, "", "has_function"], [691, 6, 1, "", "has_locations"], [692, 6, 1, "", "is_spline"], [693, 6, 1, "", "locations"], [694, 6, 1, "", "parametric_bounds"]], "splinepy.utils.log": [[701, 4, 1, "", "configure"], [702, 4, 1, "", "debug"], [703, 4, 1, "", "info"], [704, 4, 1, "", "prepend_log"], [705, 4, 1, "", "warning"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"contribut": 0, "quick": [0, 707], "start": [0, 707], "python": [0, 706], "style": 0, "implement": 0, "prefer": 0, "c": 0, "automat": 0, "format": 0, "check": [0, 123, 124, 125, 126, 127, 128, 462], "local": 0, "document": 0, "build": 0, "splinepi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707], "bezier": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 156], "basi": [4, 35, 63, 92, 390, 419, 458, 546, 709], "basis_and_support": [5, 36, 64, 93, 391, 420, 459, 547], "basis_deriv": [6, 37, 65, 94, 392, 421, 460, 548], "basis_derivative_and_support": [7, 38, 66, 95, 393, 422, 461, 549], "bspline": [9, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], "clear": [10, 39, 68, 96, 216, 226, 367, 394, 423, 463, 527, 610, 678], "compos": [11, 40, 424, 580], "composition_deriv": [12, 41, 425, 582], "copi": [13, 42, 69, 97, 395, 426, 467, 521, 630], "current_core_properti": [14, 43, 70, 98, 396, 427, 470, 551], "deriv": [15, 44, 71, 99, 397, 428, 472, 552], "derivative_splin": [16, 45, 429, 585], "elevate_degre": [17, 46, 72, 100, 398, 430, 475, 554], "evalu": [18, 47, 73, 101, 372, 399, 431, 476, 531, 555], "export": [19, 48, 74, 102, 239, 242, 245, 248, 258, 261, 265, 270, 273, 400, 432, 477], "extract_dim": [20, 49, 433, 590], "greville_abscissa": [21, 50, 76, 104, 402, 434, 479], "jacobian": [22, 51, 78, 106, 404, 435, 483, 558], "mapper": [23, 52, 80, 108, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 406, 436, 487], "nurb": [24, 82, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 437, 709], "proxim": [25, 53, 83, 110, 409, 438, 492, 562], "rationalbezi": [26, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "reduce_degre": [27, 54, 84, 111, 410, 440, 493, 563], "sampl": [28, 55, 86, 113, 379, 412, 441, 495, 539, 564], "show": [29, 56, 87, 114, 121, 182, 236, 282, 382, 413, 442, 496], "showabl": [30, 57, 88, 115, 183, 384, 414, 443, 498], "split": [31, 58, 444, 603], "support": [32, 59, 89, 116, 415, 445, 500, 565], "todict": [33, 60, 90, 117, 416, 446, 501], "bezierbas": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "extract_bezier_patch": [75, 103, 401, 588], "insert_knot": [77, 105, 403, 593], "knot_insertion_matrix": [79, 107, 405, 596], "normalize_knot_vector": [81, 109, 407], "remove_knot": [85, 112, 411, 601], "bsplinebas": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], "cli": [118, 119, 120, 121], "convert": 119, "entri": 120, "helpm": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "checker": [124, 125, 126], "clamped_knot_vector": [125, 127], "valid_queri": [126, 128], "creat": [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 277, 469, 709], "creator": [130, 131, 132, 133, 134, 135], "determinant_splin": [131, 140], "embed": [132, 142], "extrud": [133, 143], "parametric_view": [134, 146], "revolv": [135, 149], "arc": 136, "box": 137, "circl": 138, "cone": 139, "disk": 141, "from_bound": 144, "line": 145, "plate": 147, "pyramid": 148, "sphere": 150, "surface_circl": 151, "toru": 152, "extract": [153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 373, 478], "extractor": [154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], "arrow_data": [155, 167], "boundari": [157, 168, 362], "control_edg": [158, 169], "control_fac": [159, 170], "control_mesh": [160, 171], "control_point": [161, 172, 466, 529], "control_volum": [162, 173], "edg": [163, 174], "face": [164, 175], "spline": [165, 176, 184, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 707, 709], "volum": [166, 177, 194, 197], "ffd": [178, 179, 180, 181, 182, 183, 184], "mesh": 180, "pad": 181, "fit": [185, 186, 187, 188, 189, 190], "compute_knot_vector": 186, "curv": [187, 709], "parameter": 188, "solve_for_control_point": 189, "surfac": 190, "integr": [191, 192, 193, 194, 195, 196, 197, 481], "parametric_funct": [193, 195], "physical_funct": 196, "basis_function_deriv": 200, "basis_gradient_and_support": 201, "basis_hessian_and_support": 202, "basis_laplacian_and_support": 203, "diverg": 204, "field_deriv": 205, "gradient": 206, "hessian": 207, "laplacian": 208, "multi_index": [209, 210, 488], "multiindex": 210, "reparametr": [211, 212, 213], "flip_ax": 212, "permute_parametric_ax": 213, "visual": [214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 709], "multipatchshowopt": [215, 216, 217, 218, 219, 220, 221, 222, 223, 224], "copy_valid_opt": [217, 227], "get": [218, 228, 611, 679], "item": [219, 229, 612, 641, 680], "kei": [220, 230, 613, 681], "pop": [221, 231, 614, 682], "updat": [222, 232], "valid_kei": [223, 233], "valu": [224, 234, 615, 683], "splineshowopt": [225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "make_show": 235, "io": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 707], "cat": [238, 239, 240], "load": [240, 243, 246, 249, 259, 262, 267, 271], "default": [241, 242, 243], "gismo": [244, 245, 246], "ig": [247, 248, 249], "ioutil": [250, 251, 252, 253, 254, 255, 256], "abs_fnam": 251, "dict_to_splin": 252, "expand_tab": 253, "form_lin": 254, "make_meaning": 255, "next_lin": 256, "irit": [257, 258, 259], "json": [260, 261, 262], "mfem": [263, 264, 265, 266, 267, 268], "dof_map": 264, "export_cartesian": 266, "read_solut": 268, "npz": [269, 270, 271], "svg": [272, 273], "microstructur": [274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358], "deformation_funct": 278, "microtil": 279, "parameter_sensitivity_funct": 280, "parametrization_funct": 281, "tile": [283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358], "armadillo": [285, 286, 287, 288, 289, 290], "check_param_deriv": [287, 293, 298, 303, 308, 313, 318, 323, 328, 333, 338, 344, 349, 354], "check_param": [288, 294, 299, 304, 309, 314, 319, 324, 329, 334, 339, 345, 350, 355], "closing_til": [289, 340], "create_til": [290, 295, 300, 305, 310, 315, 320, 325, 330, 335, 341, 346, 351], "chi": [291, 292, 293, 294, 295], "cross_2d": [296, 297, 298, 299, 300], "cross2d": [297, 298, 299, 300], "cross_3d": [301, 302, 303, 304, 305], "cross3d": [302, 303, 304, 305], "cross_3d_linear": [306, 307, 308, 309, 310], "cross3dlinear": [307, 308, 309, 310], "cube_void": [311, 312, 313, 314, 315], "cubevoid": [312, 313, 314, 315], "double_lattic": [316, 317, 318, 319, 320], "doublelattic": [317, 318, 319, 320], "ellips_v_oid": [321, 322, 323, 324, 325], "ellipsvoid": [322, 323, 324, 325], "hollow_cub": [326, 327, 328, 329, 330], "hollowcub": [327, 328, 329, 330], "hollow_octagon": [331, 332, 333, 334, 335], "hollowoctagon": [332, 333, 334, 335], "hollow_octagon_extrud": [336, 337, 338, 339, 340, 341], "hollowoctagonextrud": [337, 338, 339, 340, 341], "inverse_cross_3d": [342, 343, 344, 345, 346], "inversecross3d": [343, 344, 345, 346], "snappi": [347, 348, 349, 350, 351], "tile_bas": [352, 353, 354, 355, 356, 357, 358], "tilebas": [353, 354, 355, 356, 357, 358], "dim": [356, 371, 473, 508, 530, 553, 568], "evaluation_point": 357, "para_dim": [358, 377, 490, 536, 560], "multipatch": [359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 707], "add_field": [361, 524], "boundaries_from_continu": [363, 577], "boundary_from_funct": 364, "boundary_multipatch": [365, 525], "boundary_patch_id": [366, 526], "combine_boundari": 368, "control_point_offset": [369, 528], "determine_interfac": 370, "field": [374, 532], "get_interfac": [375, 533], "interfac": 376, "patch": [378, 537], "set_boundari": 380, "set_interfac": [381, 540], "show_opt": [383, 497], "spline_data": [385, 499], "sub_multipatch": [386, 541], "sub_patch_cent": [387, 542], "rational_bezi": [417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "set": [447, 448, 449, 450, 451], "check_bound": 448, "name_to_typ": 449, "nthread": 450, "toler": [451, 543], "requiredproperti": [453, 454, 455, 456], "intersect": 454, "union": 456, "control_mesh_resolut": [464, 550], "control_point_bound": 465, "cp": 468, "degre": 471, "d": 474, "has_knot_vector": [480, 556], "is_rat": [482, 557], "knot_multipl": 484, "knot_vector": 485, "kv": 486, "name": [489, 535, 559], "parametric_bound": [491, 561, 694], "required_properti": 494, "unique_knot": [502, 522], "weight": 503, "whatami": [504, 544, 566], "w": 505, "splinepy_cor": [506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603], "controlpointpoint": [507, 508, 509, 510, 511, 512, 513], "len": [509, 569], "set_row": [510, 511, 570, 571], "sync": [512, 572], "sync_row": [513, 573], "knotvector": [514, 515, 516, 517, 518, 519], "find_span": 515, "multipl": 516, "numpi": 517, "scale": 518, "uniqu": 519, "parameterspac": [520, 521, 522], "pymultipatch": [523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "n_default_thread": 534, "same_parametric_bound": 538, "pysplin": [545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566], "weightpoint": [567, 568, 569, 570, 571, 572, 573], "add": 574, "annul_cor": 575, "bezier_extraction_matrix": 576, "boundary_cent": 578, "build_typ": 579, "compose_sensit": 581, "core_id": 583, "core_ref_count": 584, "export_ig": 586, "extract_all_boundary_splin": 587, "extract_boundari": 589, "global_knot_insertion_matrix": 591, "has_cor": 592, "interfaces_from_boundary_cent": 594, "is_minim": 595, "multipli": 597, "null_splin": 598, "orient": 599, "read_ig": 600, "same_spline_with_knot_vector": 602, "to_deriv": 604, "util": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705], "data": [606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699], "multipatchdata": [607, 608, 609, 610, 611, 612, 613, 614, 615], "as_arrow": [608, 676], "as_scalar": [609, 677], "physicalspacearrai": [616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674], "all": 617, "ani": 618, "argmax": 619, "argmin": 620, "argpartit": 621, "argsort": 622, "astyp": 623, "byteswap": 624, "choos": 625, "clip": 626, "compress": 627, "conj": 628, "conjug": 629, "cumprod": 631, "cumsum": 632, "diagon": 633, "dot": 634, "dump": [635, 636], "fill": 637, "flatten": 638, "full_row_indic": 639, "getfield": 640, "itemset": 642, "max": 643, "mean": 644, "min": 645, "newbyteord": 646, "nonzero": 647, "partit": 648, "prod": 649, "ptp": 650, "put": 651, "ravel": 652, "repeat": 653, "reshap": 654, "resiz": 655, "round": 656, "row_indic": 657, "searchsort": 658, "setfield": 659, "setflag": 660, "sort": 661, "squeez": 662, "std": 663, "sum": 664, "swapax": 665, "take": 666, "tobyt": 667, "tofil": 668, "tolist": 669, "tostr": 670, "trace": 671, "transpos": 672, "var": 673, "view": 674, "splinedata": [675, 676, 677, 678, 679, 680, 681, 682, 683], "splinedataadaptor": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694], "arrow_data_onli": 685, "as_vertex_data": 686, "function": [688, 709], "has_evalu": 689, "has_funct": 690, "has_loc": 691, "is_splin": 692, "locat": 693, "cartesian_product": 695, "enforce_contigu": 696, "enforce_contiguous_valu": 697, "make_matrix": 698, "uniform_queri": 699, "log": [700, 701, 702, 703, 704, 705], "configur": 701, "debug": 702, "info": 703, "prepend_log": 704, "warn": 705, "api": 706, "refer": 706, "overview": 706, "instal": 707, "guid": 707, "featur": 707, "summari": 707, "depend": 707, "tabl": 707, "content": 707, "librari": 707, "introduct": 709, "A": 709, "gener": 709, "In": 709, "which": 709, "situat": 709, "ar": 709, "help": 709, "an": 709, "differ": 709, "type": 709, "b\u00e9zier": 709, "exampl": 709, "properti": 709, "drawback": 709, "ration": 709, "b": 709, "non": 709, "uniform": 709, "further": 709, "read": 709, "plot": 709, "basic": 709, "creation": 709, "common": 709, "geometri": 709, "expand": 709, "3d": 709, "notebook": 709}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Contributing": [[0, "contributing"], [0, "id1"]], "Quick start": [[0, "quick-start"], [707, "quick-start"]], "Python style / implementation preferences": [[0, "python-style-implementation-preferences"]], "C++ style / implementation preferences": [[0, "c-style-implementation-preferences"]], "Automatic formatting / style check": [[0, "automatic-formatting-style-check"]], "Local documentation build": [[0, "local-documentation-build"]], "splinepy": [[1, "splinepy"], [707, "splinepy"]], "splinepy.bezier": [[2, "splinepy-bezier"]], "splinepy.bezier.Bezier": [[3, "splinepy-bezier-bezier"]], "splinepy.bezier.Bezier.basis": [[4, "splinepy-bezier-bezier-basis"]], "splinepy.bezier.Bezier.basis_and_support": [[5, "splinepy-bezier-bezier-basis-and-support"]], "splinepy.bezier.Bezier.basis_derivative": [[6, "splinepy-bezier-bezier-basis-derivative"]], "splinepy.bezier.Bezier.basis_derivative_and_support": [[7, "splinepy-bezier-bezier-basis-derivative-and-support"]], "splinepy.bezier.Bezier.bezier": [[8, "splinepy-bezier-bezier-bezier"]], "splinepy.bezier.Bezier.bspline": [[9, "splinepy-bezier-bezier-bspline"]], "splinepy.bezier.Bezier.clear": [[10, "splinepy-bezier-bezier-clear"]], "splinepy.bezier.Bezier.compose": [[11, "splinepy-bezier-bezier-compose"]], "splinepy.bezier.Bezier.composition_derivative": [[12, "splinepy-bezier-bezier-composition-derivative"]], "splinepy.bezier.Bezier.copy": [[13, "splinepy-bezier-bezier-copy"]], "splinepy.bezier.Bezier.current_core_properties": [[14, "splinepy-bezier-bezier-current-core-properties"]], "splinepy.bezier.Bezier.derivative": [[15, "splinepy-bezier-bezier-derivative"]], "splinepy.bezier.Bezier.derivative_spline": [[16, "splinepy-bezier-bezier-derivative-spline"]], "splinepy.bezier.Bezier.elevate_degrees": [[17, "splinepy-bezier-bezier-elevate-degrees"]], "splinepy.bezier.Bezier.evaluate": [[18, "splinepy-bezier-bezier-evaluate"]], "splinepy.bezier.Bezier.export": [[19, "splinepy-bezier-bezier-export"]], "splinepy.bezier.Bezier.extract_dim": [[20, "splinepy-bezier-bezier-extract-dim"]], "splinepy.bezier.Bezier.greville_abscissae": [[21, "splinepy-bezier-bezier-greville-abscissae"]], "splinepy.bezier.Bezier.jacobian": [[22, "splinepy-bezier-bezier-jacobian"]], "splinepy.bezier.Bezier.mapper": [[23, "splinepy-bezier-bezier-mapper"]], "splinepy.bezier.Bezier.nurbs": [[24, "splinepy-bezier-bezier-nurbs"]], "splinepy.bezier.Bezier.proximities": [[25, "splinepy-bezier-bezier-proximities"]], "splinepy.bezier.Bezier.rationalbezier": [[26, "splinepy-bezier-bezier-rationalbezier"]], "splinepy.bezier.Bezier.reduce_degrees": [[27, "splinepy-bezier-bezier-reduce-degrees"]], "splinepy.bezier.Bezier.sample": [[28, "splinepy-bezier-bezier-sample"]], "splinepy.bezier.Bezier.show": [[29, "splinepy-bezier-bezier-show"]], "splinepy.bezier.Bezier.showable": [[30, "splinepy-bezier-bezier-showable"]], "splinepy.bezier.Bezier.split": [[31, "splinepy-bezier-bezier-split"]], "splinepy.bezier.Bezier.support": [[32, "splinepy-bezier-bezier-support"]], "splinepy.bezier.Bezier.todict": [[33, "splinepy-bezier-bezier-todict"]], "splinepy.bezier.BezierBase": [[34, "splinepy-bezier-bezierbase"]], "splinepy.bezier.BezierBase.basis": [[35, "splinepy-bezier-bezierbase-basis"]], "splinepy.bezier.BezierBase.basis_and_support": [[36, "splinepy-bezier-bezierbase-basis-and-support"]], "splinepy.bezier.BezierBase.basis_derivative": [[37, "splinepy-bezier-bezierbase-basis-derivative"]], "splinepy.bezier.BezierBase.basis_derivative_and_support": [[38, "splinepy-bezier-bezierbase-basis-derivative-and-support"]], "splinepy.bezier.BezierBase.clear": [[39, "splinepy-bezier-bezierbase-clear"]], "splinepy.bezier.BezierBase.compose": [[40, "splinepy-bezier-bezierbase-compose"]], "splinepy.bezier.BezierBase.composition_derivative": [[41, "splinepy-bezier-bezierbase-composition-derivative"]], "splinepy.bezier.BezierBase.copy": [[42, "splinepy-bezier-bezierbase-copy"]], "splinepy.bezier.BezierBase.current_core_properties": [[43, "splinepy-bezier-bezierbase-current-core-properties"]], "splinepy.bezier.BezierBase.derivative": [[44, "splinepy-bezier-bezierbase-derivative"]], "splinepy.bezier.BezierBase.derivative_spline": [[45, "splinepy-bezier-bezierbase-derivative-spline"]], "splinepy.bezier.BezierBase.elevate_degrees": [[46, "splinepy-bezier-bezierbase-elevate-degrees"]], "splinepy.bezier.BezierBase.evaluate": [[47, "splinepy-bezier-bezierbase-evaluate"]], "splinepy.bezier.BezierBase.export": [[48, "splinepy-bezier-bezierbase-export"]], "splinepy.bezier.BezierBase.extract_dim": [[49, "splinepy-bezier-bezierbase-extract-dim"]], "splinepy.bezier.BezierBase.greville_abscissae": [[50, "splinepy-bezier-bezierbase-greville-abscissae"]], "splinepy.bezier.BezierBase.jacobian": [[51, "splinepy-bezier-bezierbase-jacobian"]], "splinepy.bezier.BezierBase.mapper": [[52, "splinepy-bezier-bezierbase-mapper"]], "splinepy.bezier.BezierBase.proximities": [[53, "splinepy-bezier-bezierbase-proximities"]], "splinepy.bezier.BezierBase.reduce_degrees": [[54, "splinepy-bezier-bezierbase-reduce-degrees"]], "splinepy.bezier.BezierBase.sample": [[55, "splinepy-bezier-bezierbase-sample"]], "splinepy.bezier.BezierBase.show": [[56, "splinepy-bezier-bezierbase-show"]], "splinepy.bezier.BezierBase.showable": [[57, "splinepy-bezier-bezierbase-showable"]], "splinepy.bezier.BezierBase.split": [[58, "splinepy-bezier-bezierbase-split"]], "splinepy.bezier.BezierBase.support": [[59, "splinepy-bezier-bezierbase-support"]], "splinepy.bezier.BezierBase.todict": [[60, "splinepy-bezier-bezierbase-todict"]], "splinepy.bspline": [[61, "splinepy-bspline"]], "splinepy.bspline.BSpline": [[62, "splinepy-bspline-bspline"]], "splinepy.bspline.BSpline.basis": [[63, "splinepy-bspline-bspline-basis"]], "splinepy.bspline.BSpline.basis_and_support": [[64, "splinepy-bspline-bspline-basis-and-support"]], "splinepy.bspline.BSpline.basis_derivative": [[65, "splinepy-bspline-bspline-basis-derivative"]], "splinepy.bspline.BSpline.basis_derivative_and_support": [[66, "splinepy-bspline-bspline-basis-derivative-and-support"]], "splinepy.bspline.BSpline.bspline": [[67, "splinepy-bspline-bspline-bspline"]], "splinepy.bspline.BSpline.clear": [[68, "splinepy-bspline-bspline-clear"]], "splinepy.bspline.BSpline.copy": [[69, "splinepy-bspline-bspline-copy"]], "splinepy.bspline.BSpline.current_core_properties": [[70, "splinepy-bspline-bspline-current-core-properties"]], "splinepy.bspline.BSpline.derivative": [[71, "splinepy-bspline-bspline-derivative"]], "splinepy.bspline.BSpline.elevate_degrees": [[72, "splinepy-bspline-bspline-elevate-degrees"]], "splinepy.bspline.BSpline.evaluate": [[73, "splinepy-bspline-bspline-evaluate"]], "splinepy.bspline.BSpline.export": [[74, "splinepy-bspline-bspline-export"]], "splinepy.bspline.BSpline.extract_bezier_patches": [[75, "splinepy-bspline-bspline-extract-bezier-patches"]], "splinepy.bspline.BSpline.greville_abscissae": [[76, "splinepy-bspline-bspline-greville-abscissae"]], "splinepy.bspline.BSpline.insert_knots": [[77, "splinepy-bspline-bspline-insert-knots"]], "splinepy.bspline.BSpline.jacobian": [[78, "splinepy-bspline-bspline-jacobian"]], "splinepy.bspline.BSpline.knot_insertion_matrix": [[79, "splinepy-bspline-bspline-knot-insertion-matrix"]], "splinepy.bspline.BSpline.mapper": [[80, "splinepy-bspline-bspline-mapper"]], "splinepy.bspline.BSpline.normalize_knot_vectors": [[81, "splinepy-bspline-bspline-normalize-knot-vectors"]], "splinepy.bspline.BSpline.nurbs": [[82, "splinepy-bspline-bspline-nurbs"]], "splinepy.bspline.BSpline.proximities": [[83, "splinepy-bspline-bspline-proximities"]], "splinepy.bspline.BSpline.reduce_degrees": [[84, "splinepy-bspline-bspline-reduce-degrees"]], "splinepy.bspline.BSpline.remove_knots": [[85, "splinepy-bspline-bspline-remove-knots"]], "splinepy.bspline.BSpline.sample": [[86, "splinepy-bspline-bspline-sample"]], "splinepy.bspline.BSpline.show": [[87, "splinepy-bspline-bspline-show"]], "splinepy.bspline.BSpline.showable": [[88, "splinepy-bspline-bspline-showable"]], "splinepy.bspline.BSpline.support": [[89, "splinepy-bspline-bspline-support"]], "splinepy.bspline.BSpline.todict": [[90, "splinepy-bspline-bspline-todict"]], "splinepy.bspline.BSplineBase": [[91, "splinepy-bspline-bsplinebase"]], "splinepy.bspline.BSplineBase.basis": [[92, "splinepy-bspline-bsplinebase-basis"]], "splinepy.bspline.BSplineBase.basis_and_support": [[93, "splinepy-bspline-bsplinebase-basis-and-support"]], "splinepy.bspline.BSplineBase.basis_derivative": [[94, "splinepy-bspline-bsplinebase-basis-derivative"]], "splinepy.bspline.BSplineBase.basis_derivative_and_support": [[95, "splinepy-bspline-bsplinebase-basis-derivative-and-support"]], "splinepy.bspline.BSplineBase.clear": [[96, "splinepy-bspline-bsplinebase-clear"]], "splinepy.bspline.BSplineBase.copy": [[97, "splinepy-bspline-bsplinebase-copy"]], "splinepy.bspline.BSplineBase.current_core_properties": [[98, "splinepy-bspline-bsplinebase-current-core-properties"]], "splinepy.bspline.BSplineBase.derivative": [[99, "splinepy-bspline-bsplinebase-derivative"]], "splinepy.bspline.BSplineBase.elevate_degrees": [[100, "splinepy-bspline-bsplinebase-elevate-degrees"]], "splinepy.bspline.BSplineBase.evaluate": [[101, "splinepy-bspline-bsplinebase-evaluate"]], "splinepy.bspline.BSplineBase.export": [[102, "splinepy-bspline-bsplinebase-export"]], "splinepy.bspline.BSplineBase.extract_bezier_patches": [[103, "splinepy-bspline-bsplinebase-extract-bezier-patches"]], "splinepy.bspline.BSplineBase.greville_abscissae": [[104, "splinepy-bspline-bsplinebase-greville-abscissae"]], "splinepy.bspline.BSplineBase.insert_knots": [[105, "splinepy-bspline-bsplinebase-insert-knots"]], "splinepy.bspline.BSplineBase.jacobian": [[106, "splinepy-bspline-bsplinebase-jacobian"]], "splinepy.bspline.BSplineBase.knot_insertion_matrix": [[107, "splinepy-bspline-bsplinebase-knot-insertion-matrix"]], "splinepy.bspline.BSplineBase.mapper": [[108, "splinepy-bspline-bsplinebase-mapper"]], "splinepy.bspline.BSplineBase.normalize_knot_vectors": [[109, "splinepy-bspline-bsplinebase-normalize-knot-vectors"]], "splinepy.bspline.BSplineBase.proximities": [[110, "splinepy-bspline-bsplinebase-proximities"]], "splinepy.bspline.BSplineBase.reduce_degrees": [[111, "splinepy-bspline-bsplinebase-reduce-degrees"]], "splinepy.bspline.BSplineBase.remove_knots": [[112, "splinepy-bspline-bsplinebase-remove-knots"]], "splinepy.bspline.BSplineBase.sample": [[113, "splinepy-bspline-bsplinebase-sample"]], "splinepy.bspline.BSplineBase.show": [[114, "splinepy-bspline-bsplinebase-show"]], "splinepy.bspline.BSplineBase.showable": [[115, "splinepy-bspline-bsplinebase-showable"]], "splinepy.bspline.BSplineBase.support": [[116, "splinepy-bspline-bsplinebase-support"]], "splinepy.bspline.BSplineBase.todict": [[117, "splinepy-bspline-bsplinebase-todict"]], "splinepy.cli": [[118, "splinepy-cli"]], "splinepy.cli.convert": [[119, "splinepy-cli-convert"]], "splinepy.cli.entry": [[120, "splinepy-cli-entry"]], "splinepy.cli.show": [[121, "splinepy-cli-show"]], "splinepy.helpme": [[122, "splinepy-helpme"]], "splinepy.helpme.check": [[123, "splinepy-helpme-check"]], "splinepy.helpme.check.Checker": [[124, "splinepy-helpme-check-checker"]], "splinepy.helpme.check.Checker.clamped_knot_vectors": [[125, "splinepy-helpme-check-checker-clamped-knot-vectors"]], "splinepy.helpme.check.Checker.valid_queries": [[126, "splinepy-helpme-check-checker-valid-queries"]], "splinepy.helpme.check.clamped_knot_vectors": [[127, "splinepy-helpme-check-clamped-knot-vectors"]], "splinepy.helpme.check.valid_queries": [[128, "splinepy-helpme-check-valid-queries"]], "splinepy.helpme.create": [[129, "splinepy-helpme-create"]], "splinepy.helpme.create.Creator": [[130, "splinepy-helpme-create-creator"]], "splinepy.helpme.create.Creator.determinant_spline": [[131, "splinepy-helpme-create-creator-determinant-spline"]], "splinepy.helpme.create.Creator.embedded": [[132, "splinepy-helpme-create-creator-embedded"]], "splinepy.helpme.create.Creator.extruded": [[133, "splinepy-helpme-create-creator-extruded"]], "splinepy.helpme.create.Creator.parametric_view": [[134, "splinepy-helpme-create-creator-parametric-view"]], "splinepy.helpme.create.Creator.revolved": [[135, "splinepy-helpme-create-creator-revolved"]], "splinepy.helpme.create.arc": [[136, "splinepy-helpme-create-arc"]], "splinepy.helpme.create.box": [[137, "splinepy-helpme-create-box"]], "splinepy.helpme.create.circle": [[138, "splinepy-helpme-create-circle"]], "splinepy.helpme.create.cone": [[139, "splinepy-helpme-create-cone"]], "splinepy.helpme.create.determinant_spline": [[140, "splinepy-helpme-create-determinant-spline"]], "splinepy.helpme.create.disk": [[141, "splinepy-helpme-create-disk"]], "splinepy.helpme.create.embedded": [[142, "splinepy-helpme-create-embedded"]], "splinepy.helpme.create.extruded": [[143, "splinepy-helpme-create-extruded"]], "splinepy.helpme.create.from_bounds": [[144, "splinepy-helpme-create-from-bounds"]], "splinepy.helpme.create.line": [[145, "splinepy-helpme-create-line"]], "splinepy.helpme.create.parametric_view": [[146, "splinepy-helpme-create-parametric-view"]], "splinepy.helpme.create.plate": [[147, "splinepy-helpme-create-plate"]], "splinepy.helpme.create.pyramid": [[148, "splinepy-helpme-create-pyramid"]], "splinepy.helpme.create.revolved": [[149, "splinepy-helpme-create-revolved"]], "splinepy.helpme.create.sphere": [[150, "splinepy-helpme-create-sphere"]], "splinepy.helpme.create.surface_circle": [[151, "splinepy-helpme-create-surface-circle"]], "splinepy.helpme.create.torus": [[152, "splinepy-helpme-create-torus"]], "splinepy.helpme.extract": [[153, "splinepy-helpme-extract"]], "splinepy.helpme.extract.Extractor": [[154, "splinepy-helpme-extract-extractor"]], "splinepy.helpme.extract.Extractor.arrow_data": [[155, "splinepy-helpme-extract-extractor-arrow-data"]], "splinepy.helpme.extract.Extractor.beziers": [[156, "splinepy-helpme-extract-extractor-beziers"]], "splinepy.helpme.extract.Extractor.boundaries": [[157, "splinepy-helpme-extract-extractor-boundaries"]], "splinepy.helpme.extract.Extractor.control_edges": [[158, "splinepy-helpme-extract-extractor-control-edges"]], "splinepy.helpme.extract.Extractor.control_faces": [[159, "splinepy-helpme-extract-extractor-control-faces"]], "splinepy.helpme.extract.Extractor.control_mesh": [[160, "splinepy-helpme-extract-extractor-control-mesh"]], "splinepy.helpme.extract.Extractor.control_points": [[161, "splinepy-helpme-extract-extractor-control-points"]], "splinepy.helpme.extract.Extractor.control_volumes": [[162, "splinepy-helpme-extract-extractor-control-volumes"]], "splinepy.helpme.extract.Extractor.edges": [[163, "splinepy-helpme-extract-extractor-edges"]], "splinepy.helpme.extract.Extractor.faces": [[164, "splinepy-helpme-extract-extractor-faces"]], "splinepy.helpme.extract.Extractor.spline": [[165, "splinepy-helpme-extract-extractor-spline"]], "splinepy.helpme.extract.Extractor.volumes": [[166, "splinepy-helpme-extract-extractor-volumes"]], "splinepy.helpme.extract.arrow_data": [[167, "splinepy-helpme-extract-arrow-data"]], "splinepy.helpme.extract.boundaries": [[168, "splinepy-helpme-extract-boundaries"]], "splinepy.helpme.extract.control_edges": [[169, "splinepy-helpme-extract-control-edges"]], "splinepy.helpme.extract.control_faces": [[170, "splinepy-helpme-extract-control-faces"]], "splinepy.helpme.extract.control_mesh": [[171, "splinepy-helpme-extract-control-mesh"]], "splinepy.helpme.extract.control_points": [[172, "splinepy-helpme-extract-control-points"]], "splinepy.helpme.extract.control_volumes": [[173, "splinepy-helpme-extract-control-volumes"]], "splinepy.helpme.extract.edges": [[174, "splinepy-helpme-extract-edges"]], "splinepy.helpme.extract.faces": [[175, "splinepy-helpme-extract-faces"]], "splinepy.helpme.extract.spline": [[176, "splinepy-helpme-extract-spline"]], "splinepy.helpme.extract.volumes": [[177, "splinepy-helpme-extract-volumes"]], "splinepy.helpme.ffd": [[178, "splinepy-helpme-ffd"]], "splinepy.helpme.ffd.FFD": [[179, "splinepy-helpme-ffd-ffd"]], "splinepy.helpme.ffd.FFD.mesh": [[180, "splinepy-helpme-ffd-ffd-mesh"]], "splinepy.helpme.ffd.FFD.padding": [[181, "splinepy-helpme-ffd-ffd-padding"]], "splinepy.helpme.ffd.FFD.show": [[182, "splinepy-helpme-ffd-ffd-show"]], "splinepy.helpme.ffd.FFD.showable": [[183, "splinepy-helpme-ffd-ffd-showable"]], "splinepy.helpme.ffd.FFD.spline": [[184, "splinepy-helpme-ffd-ffd-spline"]], "splinepy.helpme.fit": [[185, "splinepy-helpme-fit"]], "splinepy.helpme.fit.compute_knot_vector": [[186, "splinepy-helpme-fit-compute-knot-vector"]], "splinepy.helpme.fit.curve": [[187, "splinepy-helpme-fit-curve"]], "splinepy.helpme.fit.parameterize": [[188, "splinepy-helpme-fit-parameterize"]], "splinepy.helpme.fit.solve_for_control_points": [[189, "splinepy-helpme-fit-solve-for-control-points"]], "splinepy.helpme.fit.surface": [[190, "splinepy-helpme-fit-surface"]], "splinepy.helpme.integrate": [[191, "splinepy-helpme-integrate"]], "splinepy.helpme.integrate.Integrator": [[192, "splinepy-helpme-integrate-integrator"]], "splinepy.helpme.integrate.Integrator.parametric_function": [[193, "splinepy-helpme-integrate-integrator-parametric-function"]], "splinepy.helpme.integrate.Integrator.volume": [[194, "splinepy-helpme-integrate-integrator-volume"]], "splinepy.helpme.integrate.parametric_function": [[195, "splinepy-helpme-integrate-parametric-function"]], "splinepy.helpme.integrate.physical_function": [[196, "splinepy-helpme-integrate-physical-function"]], "splinepy.helpme.integrate.volume": [[197, "splinepy-helpme-integrate-volume"]], "splinepy.helpme.mapper": [[198, "splinepy-helpme-mapper"]], "splinepy.helpme.mapper.Mapper": [[199, "splinepy-helpme-mapper-mapper"]], "splinepy.helpme.mapper.Mapper.basis_function_derivatives": [[200, "splinepy-helpme-mapper-mapper-basis-function-derivatives"]], "splinepy.helpme.mapper.Mapper.basis_gradient_and_support": [[201, "splinepy-helpme-mapper-mapper-basis-gradient-and-support"]], "splinepy.helpme.mapper.Mapper.basis_hessian_and_support": [[202, "splinepy-helpme-mapper-mapper-basis-hessian-and-support"]], "splinepy.helpme.mapper.Mapper.basis_laplacian_and_support": [[203, "splinepy-helpme-mapper-mapper-basis-laplacian-and-support"]], "splinepy.helpme.mapper.Mapper.divergence": [[204, "splinepy-helpme-mapper-mapper-divergence"]], "splinepy.helpme.mapper.Mapper.field_derivatives": [[205, "splinepy-helpme-mapper-mapper-field-derivatives"]], "splinepy.helpme.mapper.Mapper.gradient": [[206, "splinepy-helpme-mapper-mapper-gradient"]], "splinepy.helpme.mapper.Mapper.hessian": [[207, "splinepy-helpme-mapper-mapper-hessian"]], "splinepy.helpme.mapper.Mapper.laplacian": [[208, "splinepy-helpme-mapper-mapper-laplacian"]], "splinepy.helpme.multi_index": [[209, "splinepy-helpme-multi-index"]], "splinepy.helpme.multi_index.MultiIndex": [[210, "splinepy-helpme-multi-index-multiindex"]], "splinepy.helpme.reparametrize": [[211, "splinepy-helpme-reparametrize"]], "splinepy.helpme.reparametrize.flip_axes": [[212, "splinepy-helpme-reparametrize-flip-axes"]], "splinepy.helpme.reparametrize.permute_parametric_axes": [[213, "splinepy-helpme-reparametrize-permute-parametric-axes"]], "splinepy.helpme.visualize": [[214, "splinepy-helpme-visualize"]], "splinepy.helpme.visualize.MultipatchShowOption": [[215, "splinepy-helpme-visualize-multipatchshowoption"]], "splinepy.helpme.visualize.MultipatchShowOption.clear": [[216, "splinepy-helpme-visualize-multipatchshowoption-clear"]], "splinepy.helpme.visualize.MultipatchShowOption.copy_valid_options": [[217, "splinepy-helpme-visualize-multipatchshowoption-copy-valid-options"]], "splinepy.helpme.visualize.MultipatchShowOption.get": [[218, "splinepy-helpme-visualize-multipatchshowoption-get"]], "splinepy.helpme.visualize.MultipatchShowOption.items": [[219, "splinepy-helpme-visualize-multipatchshowoption-items"]], "splinepy.helpme.visualize.MultipatchShowOption.keys": [[220, "splinepy-helpme-visualize-multipatchshowoption-keys"]], "splinepy.helpme.visualize.MultipatchShowOption.pop": [[221, "splinepy-helpme-visualize-multipatchshowoption-pop"]], "splinepy.helpme.visualize.MultipatchShowOption.update": [[222, "splinepy-helpme-visualize-multipatchshowoption-update"]], "splinepy.helpme.visualize.MultipatchShowOption.valid_keys": [[223, "splinepy-helpme-visualize-multipatchshowoption-valid-keys"]], "splinepy.helpme.visualize.MultipatchShowOption.values": [[224, "splinepy-helpme-visualize-multipatchshowoption-values"]], "splinepy.helpme.visualize.SplineShowOption": [[225, "splinepy-helpme-visualize-splineshowoption"]], "splinepy.helpme.visualize.SplineShowOption.clear": [[226, "splinepy-helpme-visualize-splineshowoption-clear"]], "splinepy.helpme.visualize.SplineShowOption.copy_valid_options": [[227, "splinepy-helpme-visualize-splineshowoption-copy-valid-options"]], "splinepy.helpme.visualize.SplineShowOption.get": [[228, "splinepy-helpme-visualize-splineshowoption-get"]], "splinepy.helpme.visualize.SplineShowOption.items": [[229, "splinepy-helpme-visualize-splineshowoption-items"]], "splinepy.helpme.visualize.SplineShowOption.keys": [[230, "splinepy-helpme-visualize-splineshowoption-keys"]], "splinepy.helpme.visualize.SplineShowOption.pop": [[231, "splinepy-helpme-visualize-splineshowoption-pop"]], "splinepy.helpme.visualize.SplineShowOption.update": [[232, "splinepy-helpme-visualize-splineshowoption-update"]], "splinepy.helpme.visualize.SplineShowOption.valid_keys": [[233, "splinepy-helpme-visualize-splineshowoption-valid-keys"]], "splinepy.helpme.visualize.SplineShowOption.values": [[234, "splinepy-helpme-visualize-splineshowoption-values"]], "splinepy.helpme.visualize.make_showable": [[235, "splinepy-helpme-visualize-make-showable"]], "splinepy.helpme.visualize.show": [[236, "splinepy-helpme-visualize-show"]], "splinepy.io": [[237, "splinepy-io"]], "splinepy.io.cats": [[238, "splinepy-io-cats"]], "splinepy.io.cats.export": [[239, "splinepy-io-cats-export"]], "splinepy.io.cats.load": [[240, "splinepy-io-cats-load"]], "splinepy.io.default": [[241, "splinepy-io-default"]], "splinepy.io.default.export": [[242, "splinepy-io-default-export"]], "splinepy.io.default.load": [[243, "splinepy-io-default-load"]], "splinepy.io.gismo": [[244, "splinepy-io-gismo"]], "splinepy.io.gismo.export": [[245, "splinepy-io-gismo-export"]], "splinepy.io.gismo.load": [[246, "splinepy-io-gismo-load"]], "splinepy.io.iges": [[247, "splinepy-io-iges"]], "splinepy.io.iges.export": [[248, "splinepy-io-iges-export"]], "splinepy.io.iges.load": [[249, "splinepy-io-iges-load"]], "splinepy.io.ioutils": [[250, "splinepy-io-ioutils"]], "splinepy.io.ioutils.abs_fname": [[251, "splinepy-io-ioutils-abs-fname"]], "splinepy.io.ioutils.dict_to_spline": [[252, "splinepy-io-ioutils-dict-to-spline"]], "splinepy.io.ioutils.expand_tabs": [[253, "splinepy-io-ioutils-expand-tabs"]], "splinepy.io.ioutils.form_lines": [[254, "splinepy-io-ioutils-form-lines"]], "splinepy.io.ioutils.make_meaningful": [[255, "splinepy-io-ioutils-make-meaningful"]], "splinepy.io.ioutils.next_line": [[256, "splinepy-io-ioutils-next-line"]], "splinepy.io.irit": [[257, "splinepy-io-irit"]], "splinepy.io.irit.export": [[258, "splinepy-io-irit-export"]], "splinepy.io.irit.load": [[259, "splinepy-io-irit-load"]], "splinepy.io.json": [[260, "splinepy-io-json"]], "splinepy.io.json.export": [[261, "splinepy-io-json-export"]], "splinepy.io.json.load": [[262, "splinepy-io-json-load"]], "splinepy.io.mfem": [[263, "splinepy-io-mfem"]], "splinepy.io.mfem.dof_mapping": [[264, "splinepy-io-mfem-dof-mapping"]], "splinepy.io.mfem.export": [[265, "splinepy-io-mfem-export"]], "splinepy.io.mfem.export_cartesian": [[266, "splinepy-io-mfem-export-cartesian"]], "splinepy.io.mfem.load": [[267, "splinepy-io-mfem-load"]], "splinepy.io.mfem.read_solution": [[268, "splinepy-io-mfem-read-solution"]], "splinepy.io.npz": [[269, "splinepy-io-npz"]], "splinepy.io.npz.export": [[270, "splinepy-io-npz-export"]], "splinepy.io.npz.load": [[271, "splinepy-io-npz-load"]], "splinepy.io.svg": [[272, "splinepy-io-svg"]], "splinepy.io.svg.export": [[273, "splinepy-io-svg-export"]], "splinepy.microstructure": [[274, "splinepy-microstructure"]], "splinepy.microstructure.microstructure": [[275, "splinepy-microstructure-microstructure"]], "splinepy.microstructure.microstructure.Microstructure": [[276, "splinepy-microstructure-microstructure-microstructure"]], "splinepy.microstructure.microstructure.Microstructure.create": [[277, "splinepy-microstructure-microstructure-microstructure-create"]], "splinepy.microstructure.microstructure.Microstructure.deformation_function": [[278, "splinepy-microstructure-microstructure-microstructure-deformation-function"]], "splinepy.microstructure.microstructure.Microstructure.microtile": [[279, "splinepy-microstructure-microstructure-microstructure-microtile"]], "splinepy.microstructure.microstructure.Microstructure.parameter_sensitivity_function": [[280, "splinepy-microstructure-microstructure-microstructure-parameter-sensitivity-function"]], "splinepy.microstructure.microstructure.Microstructure.parametrization_function": [[281, "splinepy-microstructure-microstructure-microstructure-parametrization-function"]], "splinepy.microstructure.microstructure.Microstructure.show": [[282, "splinepy-microstructure-microstructure-microstructure-show"]], "splinepy.microstructure.microstructure.Microstructure.tiling": [[283, "splinepy-microstructure-microstructure-microstructure-tiling"]], "splinepy.microstructure.tiles": [[284, "splinepy-microstructure-tiles"]], "splinepy.microstructure.tiles.armadillo": [[285, "splinepy-microstructure-tiles-armadillo"]], "splinepy.microstructure.tiles.armadillo.Armadillo": [[286, "splinepy-microstructure-tiles-armadillo-armadillo"]], "splinepy.microstructure.tiles.armadillo.Armadillo.check_param_derivatives": [[287, "splinepy-microstructure-tiles-armadillo-armadillo-check-param-derivatives"]], "splinepy.microstructure.tiles.armadillo.Armadillo.check_params": [[288, "splinepy-microstructure-tiles-armadillo-armadillo-check-params"]], "splinepy.microstructure.tiles.armadillo.Armadillo.closing_tile": [[289, "splinepy-microstructure-tiles-armadillo-armadillo-closing-tile"]], "splinepy.microstructure.tiles.armadillo.Armadillo.create_tile": [[290, "splinepy-microstructure-tiles-armadillo-armadillo-create-tile"]], "splinepy.microstructure.tiles.chi": [[291, "splinepy-microstructure-tiles-chi"]], "splinepy.microstructure.tiles.chi.Chi": [[292, "splinepy-microstructure-tiles-chi-chi"]], "splinepy.microstructure.tiles.chi.Chi.check_param_derivatives": [[293, "splinepy-microstructure-tiles-chi-chi-check-param-derivatives"]], "splinepy.microstructure.tiles.chi.Chi.check_params": [[294, "splinepy-microstructure-tiles-chi-chi-check-params"]], "splinepy.microstructure.tiles.chi.Chi.create_tile": [[295, "splinepy-microstructure-tiles-chi-chi-create-tile"]], "splinepy.microstructure.tiles.cross_2d": [[296, "splinepy-microstructure-tiles-cross-2d"]], "splinepy.microstructure.tiles.cross_2d.Cross2D": [[297, "splinepy-microstructure-tiles-cross-2d-cross2d"]], "splinepy.microstructure.tiles.cross_2d.Cross2D.check_param_derivatives": [[298, "splinepy-microstructure-tiles-cross-2d-cross2d-check-param-derivatives"]], "splinepy.microstructure.tiles.cross_2d.Cross2D.check_params": [[299, "splinepy-microstructure-tiles-cross-2d-cross2d-check-params"]], "splinepy.microstructure.tiles.cross_2d.Cross2D.create_tile": [[300, "splinepy-microstructure-tiles-cross-2d-cross2d-create-tile"]], "splinepy.microstructure.tiles.cross_3d": [[301, "splinepy-microstructure-tiles-cross-3d"]], "splinepy.microstructure.tiles.cross_3d.Cross3D": [[302, "splinepy-microstructure-tiles-cross-3d-cross3d"]], "splinepy.microstructure.tiles.cross_3d.Cross3D.check_param_derivatives": [[303, "splinepy-microstructure-tiles-cross-3d-cross3d-check-param-derivatives"]], "splinepy.microstructure.tiles.cross_3d.Cross3D.check_params": [[304, "splinepy-microstructure-tiles-cross-3d-cross3d-check-params"]], "splinepy.microstructure.tiles.cross_3d.Cross3D.create_tile": [[305, "splinepy-microstructure-tiles-cross-3d-cross3d-create-tile"]], "splinepy.microstructure.tiles.cross_3d_linear": [[306, "splinepy-microstructure-tiles-cross-3d-linear"]], "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear": [[307, "splinepy-microstructure-tiles-cross-3d-linear-cross3dlinear"]], "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_param_derivatives": [[308, "splinepy-microstructure-tiles-cross-3d-linear-cross3dlinear-check-param-derivatives"]], "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_params": [[309, "splinepy-microstructure-tiles-cross-3d-linear-cross3dlinear-check-params"]], "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.create_tile": [[310, "splinepy-microstructure-tiles-cross-3d-linear-cross3dlinear-create-tile"]], "splinepy.microstructure.tiles.cube_void": [[311, "splinepy-microstructure-tiles-cube-void"]], "splinepy.microstructure.tiles.cube_void.CubeVoid": [[312, "splinepy-microstructure-tiles-cube-void-cubevoid"]], "splinepy.microstructure.tiles.cube_void.CubeVoid.check_param_derivatives": [[313, "splinepy-microstructure-tiles-cube-void-cubevoid-check-param-derivatives"]], "splinepy.microstructure.tiles.cube_void.CubeVoid.check_params": [[314, "splinepy-microstructure-tiles-cube-void-cubevoid-check-params"]], "splinepy.microstructure.tiles.cube_void.CubeVoid.create_tile": [[315, "splinepy-microstructure-tiles-cube-void-cubevoid-create-tile"]], "splinepy.microstructure.tiles.double_lattice": [[316, "splinepy-microstructure-tiles-double-lattice"]], "splinepy.microstructure.tiles.double_lattice.DoubleLattice": [[317, "splinepy-microstructure-tiles-double-lattice-doublelattice"]], "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_param_derivatives": [[318, "splinepy-microstructure-tiles-double-lattice-doublelattice-check-param-derivatives"]], "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_params": [[319, "splinepy-microstructure-tiles-double-lattice-doublelattice-check-params"]], "splinepy.microstructure.tiles.double_lattice.DoubleLattice.create_tile": [[320, "splinepy-microstructure-tiles-double-lattice-doublelattice-create-tile"]], "splinepy.microstructure.tiles.ellips_v_oid": [[321, "splinepy-microstructure-tiles-ellips-v-oid"]], "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid": [[322, "splinepy-microstructure-tiles-ellips-v-oid-ellipsvoid"]], "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_param_derivatives": [[323, "splinepy-microstructure-tiles-ellips-v-oid-ellipsvoid-check-param-derivatives"]], "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_params": [[324, "splinepy-microstructure-tiles-ellips-v-oid-ellipsvoid-check-params"]], "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.create_tile": [[325, "splinepy-microstructure-tiles-ellips-v-oid-ellipsvoid-create-tile"]], "splinepy.microstructure.tiles.hollow_cube": [[326, "splinepy-microstructure-tiles-hollow-cube"]], "splinepy.microstructure.tiles.hollow_cube.HollowCube": [[327, "splinepy-microstructure-tiles-hollow-cube-hollowcube"]], "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_param_derivatives": [[328, "splinepy-microstructure-tiles-hollow-cube-hollowcube-check-param-derivatives"]], "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_params": [[329, "splinepy-microstructure-tiles-hollow-cube-hollowcube-check-params"]], "splinepy.microstructure.tiles.hollow_cube.HollowCube.create_tile": [[330, "splinepy-microstructure-tiles-hollow-cube-hollowcube-create-tile"]], "splinepy.microstructure.tiles.hollow_octagon": [[331, "splinepy-microstructure-tiles-hollow-octagon"]], "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon": [[332, "splinepy-microstructure-tiles-hollow-octagon-hollowoctagon"]], "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_param_derivatives": [[333, "splinepy-microstructure-tiles-hollow-octagon-hollowoctagon-check-param-derivatives"]], "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_params": [[334, "splinepy-microstructure-tiles-hollow-octagon-hollowoctagon-check-params"]], "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.create_tile": [[335, "splinepy-microstructure-tiles-hollow-octagon-hollowoctagon-create-tile"]], "splinepy.microstructure.tiles.hollow_octagon_extrude": [[336, "splinepy-microstructure-tiles-hollow-octagon-extrude"]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude": [[337, "splinepy-microstructure-tiles-hollow-octagon-extrude-hollowoctagonextrude"]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_param_derivatives": [[338, "splinepy-microstructure-tiles-hollow-octagon-extrude-hollowoctagonextrude-check-param-derivatives"]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_params": [[339, "splinepy-microstructure-tiles-hollow-octagon-extrude-hollowoctagonextrude-check-params"]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.closing_tile": [[340, "splinepy-microstructure-tiles-hollow-octagon-extrude-hollowoctagonextrude-closing-tile"]], "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.create_tile": [[341, "splinepy-microstructure-tiles-hollow-octagon-extrude-hollowoctagonextrude-create-tile"]], "splinepy.microstructure.tiles.inverse_cross_3d": [[342, "splinepy-microstructure-tiles-inverse-cross-3d"]], "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D": [[343, "splinepy-microstructure-tiles-inverse-cross-3d-inversecross3d"]], "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_param_derivatives": [[344, "splinepy-microstructure-tiles-inverse-cross-3d-inversecross3d-check-param-derivatives"]], "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_params": [[345, "splinepy-microstructure-tiles-inverse-cross-3d-inversecross3d-check-params"]], "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.create_tile": [[346, "splinepy-microstructure-tiles-inverse-cross-3d-inversecross3d-create-tile"]], "splinepy.microstructure.tiles.snappy": [[347, "splinepy-microstructure-tiles-snappy"]], "splinepy.microstructure.tiles.snappy.Snappy": [[348, "splinepy-microstructure-tiles-snappy-snappy"]], "splinepy.microstructure.tiles.snappy.Snappy.check_param_derivatives": [[349, "splinepy-microstructure-tiles-snappy-snappy-check-param-derivatives"]], "splinepy.microstructure.tiles.snappy.Snappy.check_params": [[350, "splinepy-microstructure-tiles-snappy-snappy-check-params"]], "splinepy.microstructure.tiles.snappy.Snappy.create_tile": [[351, "splinepy-microstructure-tiles-snappy-snappy-create-tile"]], "splinepy.microstructure.tiles.tile_base": [[352, "splinepy-microstructure-tiles-tile-base"]], "splinepy.microstructure.tiles.tile_base.TileBase": [[353, "splinepy-microstructure-tiles-tile-base-tilebase"]], "splinepy.microstructure.tiles.tile_base.TileBase.check_param_derivatives": [[354, "splinepy-microstructure-tiles-tile-base-tilebase-check-param-derivatives"]], "splinepy.microstructure.tiles.tile_base.TileBase.check_params": [[355, "splinepy-microstructure-tiles-tile-base-tilebase-check-params"]], "splinepy.microstructure.tiles.tile_base.TileBase.dim": [[356, "splinepy-microstructure-tiles-tile-base-tilebase-dim"]], "splinepy.microstructure.tiles.tile_base.TileBase.evaluation_points": [[357, "splinepy-microstructure-tiles-tile-base-tilebase-evaluation-points"]], "splinepy.microstructure.tiles.tile_base.TileBase.para_dim": [[358, "splinepy-microstructure-tiles-tile-base-tilebase-para-dim"]], "splinepy.multipatch": [[359, "splinepy-multipatch"]], "splinepy.multipatch.Multipatch": [[360, "splinepy-multipatch-multipatch"]], "splinepy.multipatch.Multipatch.add_fields": [[361, "splinepy-multipatch-multipatch-add-fields"]], "splinepy.multipatch.Multipatch.boundaries": [[362, "splinepy-multipatch-multipatch-boundaries"]], "splinepy.multipatch.Multipatch.boundaries_from_continuity": [[363, "splinepy-multipatch-multipatch-boundaries-from-continuity"]], "splinepy.multipatch.Multipatch.boundary_from_function": [[364, "splinepy-multipatch-multipatch-boundary-from-function"]], "splinepy.multipatch.Multipatch.boundary_multipatch": [[365, "splinepy-multipatch-multipatch-boundary-multipatch"]], "splinepy.multipatch.Multipatch.boundary_patch_ids": [[366, "splinepy-multipatch-multipatch-boundary-patch-ids"]], "splinepy.multipatch.Multipatch.clear": [[367, "splinepy-multipatch-multipatch-clear"]], "splinepy.multipatch.Multipatch.combine_boundaries": [[368, "splinepy-multipatch-multipatch-combine-boundaries"]], "splinepy.multipatch.Multipatch.control_point_offsets": [[369, "splinepy-multipatch-multipatch-control-point-offsets"]], "splinepy.multipatch.Multipatch.determine_interfaces": [[370, "splinepy-multipatch-multipatch-determine-interfaces"]], "splinepy.multipatch.Multipatch.dim": [[371, "splinepy-multipatch-multipatch-dim"]], "splinepy.multipatch.Multipatch.evaluate": [[372, "splinepy-multipatch-multipatch-evaluate"]], "splinepy.multipatch.Multipatch.extract": [[373, "splinepy-multipatch-multipatch-extract"]], "splinepy.multipatch.Multipatch.fields": [[374, "splinepy-multipatch-multipatch-fields"]], "splinepy.multipatch.Multipatch.get_interfaces": [[375, "splinepy-multipatch-multipatch-get-interfaces"]], "splinepy.multipatch.Multipatch.interfaces": [[376, "splinepy-multipatch-multipatch-interfaces"]], "splinepy.multipatch.Multipatch.para_dim": [[377, "splinepy-multipatch-multipatch-para-dim"]], "splinepy.multipatch.Multipatch.patches": [[378, "splinepy-multipatch-multipatch-patches"]], "splinepy.multipatch.Multipatch.sample": [[379, "splinepy-multipatch-multipatch-sample"]], "splinepy.multipatch.Multipatch.set_boundary": [[380, "splinepy-multipatch-multipatch-set-boundary"]], "splinepy.multipatch.Multipatch.set_interfaces": [[381, "splinepy-multipatch-multipatch-set-interfaces"]], "splinepy.multipatch.Multipatch.show": [[382, "splinepy-multipatch-multipatch-show"]], "splinepy.multipatch.Multipatch.show_options": [[383, "splinepy-multipatch-multipatch-show-options"]], "splinepy.multipatch.Multipatch.showable": [[384, "splinepy-multipatch-multipatch-showable"]], "splinepy.multipatch.Multipatch.spline_data": [[385, "splinepy-multipatch-multipatch-spline-data"]], "splinepy.multipatch.Multipatch.sub_multipatch": [[386, "splinepy-multipatch-multipatch-sub-multipatch"]], "splinepy.multipatch.Multipatch.sub_patch_centers": [[387, "splinepy-multipatch-multipatch-sub-patch-centers"]], "splinepy.nurbs": [[388, "splinepy-nurbs"]], "splinepy.nurbs.NURBS": [[389, "splinepy-nurbs-nurbs"]], "splinepy.nurbs.NURBS.basis": [[390, "splinepy-nurbs-nurbs-basis"]], "splinepy.nurbs.NURBS.basis_and_support": [[391, "splinepy-nurbs-nurbs-basis-and-support"]], "splinepy.nurbs.NURBS.basis_derivative": [[392, "splinepy-nurbs-nurbs-basis-derivative"]], "splinepy.nurbs.NURBS.basis_derivative_and_support": [[393, "splinepy-nurbs-nurbs-basis-derivative-and-support"]], "splinepy.nurbs.NURBS.clear": [[394, "splinepy-nurbs-nurbs-clear"]], "splinepy.nurbs.NURBS.copy": [[395, "splinepy-nurbs-nurbs-copy"]], "splinepy.nurbs.NURBS.current_core_properties": [[396, "splinepy-nurbs-nurbs-current-core-properties"]], "splinepy.nurbs.NURBS.derivative": [[397, "splinepy-nurbs-nurbs-derivative"]], "splinepy.nurbs.NURBS.elevate_degrees": [[398, "splinepy-nurbs-nurbs-elevate-degrees"]], "splinepy.nurbs.NURBS.evaluate": [[399, "splinepy-nurbs-nurbs-evaluate"]], "splinepy.nurbs.NURBS.export": [[400, "splinepy-nurbs-nurbs-export"]], "splinepy.nurbs.NURBS.extract_bezier_patches": [[401, "splinepy-nurbs-nurbs-extract-bezier-patches"]], "splinepy.nurbs.NURBS.greville_abscissae": [[402, "splinepy-nurbs-nurbs-greville-abscissae"]], "splinepy.nurbs.NURBS.insert_knots": [[403, "splinepy-nurbs-nurbs-insert-knots"]], "splinepy.nurbs.NURBS.jacobian": [[404, "splinepy-nurbs-nurbs-jacobian"]], "splinepy.nurbs.NURBS.knot_insertion_matrix": [[405, "splinepy-nurbs-nurbs-knot-insertion-matrix"]], "splinepy.nurbs.NURBS.mapper": [[406, "splinepy-nurbs-nurbs-mapper"]], "splinepy.nurbs.NURBS.normalize_knot_vectors": [[407, "splinepy-nurbs-nurbs-normalize-knot-vectors"]], "splinepy.nurbs.NURBS.nurbs": [[408, "splinepy-nurbs-nurbs-nurbs"]], "splinepy.nurbs.NURBS.proximities": [[409, "splinepy-nurbs-nurbs-proximities"]], "splinepy.nurbs.NURBS.reduce_degrees": [[410, "splinepy-nurbs-nurbs-reduce-degrees"]], "splinepy.nurbs.NURBS.remove_knots": [[411, "splinepy-nurbs-nurbs-remove-knots"]], "splinepy.nurbs.NURBS.sample": [[412, "splinepy-nurbs-nurbs-sample"]], "splinepy.nurbs.NURBS.show": [[413, "splinepy-nurbs-nurbs-show"]], "splinepy.nurbs.NURBS.showable": [[414, "splinepy-nurbs-nurbs-showable"]], "splinepy.nurbs.NURBS.support": [[415, "splinepy-nurbs-nurbs-support"]], "splinepy.nurbs.NURBS.todict": [[416, "splinepy-nurbs-nurbs-todict"]], "splinepy.rational_bezier": [[417, "splinepy-rational-bezier"]], "splinepy.rational_bezier.RationalBezier": [[418, "splinepy-rational-bezier-rationalbezier"]], "splinepy.rational_bezier.RationalBezier.basis": [[419, "splinepy-rational-bezier-rationalbezier-basis"]], "splinepy.rational_bezier.RationalBezier.basis_and_support": [[420, "splinepy-rational-bezier-rationalbezier-basis-and-support"]], "splinepy.rational_bezier.RationalBezier.basis_derivative": [[421, "splinepy-rational-bezier-rationalbezier-basis-derivative"]], "splinepy.rational_bezier.RationalBezier.basis_derivative_and_support": [[422, "splinepy-rational-bezier-rationalbezier-basis-derivative-and-support"]], "splinepy.rational_bezier.RationalBezier.clear": [[423, "splinepy-rational-bezier-rationalbezier-clear"]], "splinepy.rational_bezier.RationalBezier.compose": [[424, "splinepy-rational-bezier-rationalbezier-compose"]], "splinepy.rational_bezier.RationalBezier.composition_derivative": [[425, "splinepy-rational-bezier-rationalbezier-composition-derivative"]], "splinepy.rational_bezier.RationalBezier.copy": [[426, "splinepy-rational-bezier-rationalbezier-copy"]], "splinepy.rational_bezier.RationalBezier.current_core_properties": [[427, "splinepy-rational-bezier-rationalbezier-current-core-properties"]], "splinepy.rational_bezier.RationalBezier.derivative": [[428, "splinepy-rational-bezier-rationalbezier-derivative"]], "splinepy.rational_bezier.RationalBezier.derivative_spline": [[429, "splinepy-rational-bezier-rationalbezier-derivative-spline"]], "splinepy.rational_bezier.RationalBezier.elevate_degrees": [[430, "splinepy-rational-bezier-rationalbezier-elevate-degrees"]], "splinepy.rational_bezier.RationalBezier.evaluate": [[431, "splinepy-rational-bezier-rationalbezier-evaluate"]], "splinepy.rational_bezier.RationalBezier.export": [[432, "splinepy-rational-bezier-rationalbezier-export"]], "splinepy.rational_bezier.RationalBezier.extract_dim": [[433, "splinepy-rational-bezier-rationalbezier-extract-dim"]], "splinepy.rational_bezier.RationalBezier.greville_abscissae": [[434, "splinepy-rational-bezier-rationalbezier-greville-abscissae"]], "splinepy.rational_bezier.RationalBezier.jacobian": [[435, "splinepy-rational-bezier-rationalbezier-jacobian"]], "splinepy.rational_bezier.RationalBezier.mapper": [[436, "splinepy-rational-bezier-rationalbezier-mapper"]], "splinepy.rational_bezier.RationalBezier.nurbs": [[437, "splinepy-rational-bezier-rationalbezier-nurbs"]], "splinepy.rational_bezier.RationalBezier.proximities": [[438, "splinepy-rational-bezier-rationalbezier-proximities"]], "splinepy.rational_bezier.RationalBezier.rationalbezier": [[439, "splinepy-rational-bezier-rationalbezier-rationalbezier"]], "splinepy.rational_bezier.RationalBezier.reduce_degrees": [[440, "splinepy-rational-bezier-rationalbezier-reduce-degrees"]], "splinepy.rational_bezier.RationalBezier.sample": [[441, "splinepy-rational-bezier-rationalbezier-sample"]], "splinepy.rational_bezier.RationalBezier.show": [[442, "splinepy-rational-bezier-rationalbezier-show"]], "splinepy.rational_bezier.RationalBezier.showable": [[443, "splinepy-rational-bezier-rationalbezier-showable"]], "splinepy.rational_bezier.RationalBezier.split": [[444, "splinepy-rational-bezier-rationalbezier-split"]], "splinepy.rational_bezier.RationalBezier.support": [[445, "splinepy-rational-bezier-rationalbezier-support"]], "splinepy.rational_bezier.RationalBezier.todict": [[446, "splinepy-rational-bezier-rationalbezier-todict"]], "splinepy.settings": [[447, "splinepy-settings"]], "splinepy.settings.CHECK_BOUNDS": [[448, "splinepy-settings-check-bounds"]], "splinepy.settings.NAME_TO_TYPE": [[449, "splinepy-settings-name-to-type"]], "splinepy.settings.NTHREADS": [[450, "splinepy-settings-nthreads"]], "splinepy.settings.TOLERANCE": [[451, "splinepy-settings-tolerance"]], "splinepy.spline": [[452, "splinepy-spline"]], "splinepy.spline.RequiredProperties": [[453, "splinepy-spline-requiredproperties"]], "splinepy.spline.RequiredProperties.intersection": [[454, "splinepy-spline-requiredproperties-intersection"]], "splinepy.spline.RequiredProperties.of": [[455, "splinepy-spline-requiredproperties-of"]], "splinepy.spline.RequiredProperties.union": [[456, "splinepy-spline-requiredproperties-union"]], "splinepy.spline.Spline": [[457, "splinepy-spline-spline"]], "splinepy.spline.Spline.basis": [[458, "splinepy-spline-spline-basis"]], "splinepy.spline.Spline.basis_and_support": [[459, "splinepy-spline-spline-basis-and-support"]], "splinepy.spline.Spline.basis_derivative": [[460, "splinepy-spline-spline-basis-derivative"]], "splinepy.spline.Spline.basis_derivative_and_support": [[461, "splinepy-spline-spline-basis-derivative-and-support"]], "splinepy.spline.Spline.check": [[462, "splinepy-spline-spline-check"]], "splinepy.spline.Spline.clear": [[463, "splinepy-spline-spline-clear"]], "splinepy.spline.Spline.control_mesh_resolutions": [[464, "splinepy-spline-spline-control-mesh-resolutions"]], "splinepy.spline.Spline.control_point_bounds": [[465, "splinepy-spline-spline-control-point-bounds"]], "splinepy.spline.Spline.control_points": [[466, "splinepy-spline-spline-control-points"]], "splinepy.spline.Spline.copy": [[467, "splinepy-spline-spline-copy"]], "splinepy.spline.Spline.cps": [[468, "splinepy-spline-spline-cps"]], "splinepy.spline.Spline.create": [[469, "splinepy-spline-spline-create"]], "splinepy.spline.Spline.current_core_properties": [[470, "splinepy-spline-spline-current-core-properties"]], "splinepy.spline.Spline.degrees": [[471, "splinepy-spline-spline-degrees"]], "splinepy.spline.Spline.derivative": [[472, "splinepy-spline-spline-derivative"]], "splinepy.spline.Spline.dim": [[473, "splinepy-spline-spline-dim"]], "splinepy.spline.Spline.ds": [[474, "splinepy-spline-spline-ds"]], "splinepy.spline.Spline.elevate_degrees": [[475, "splinepy-spline-spline-elevate-degrees"]], "splinepy.spline.Spline.evaluate": [[476, "splinepy-spline-spline-evaluate"]], "splinepy.spline.Spline.export": [[477, "splinepy-spline-spline-export"]], "splinepy.spline.Spline.extract": [[478, "splinepy-spline-spline-extract"]], "splinepy.spline.Spline.greville_abscissae": [[479, "splinepy-spline-spline-greville-abscissae"]], "splinepy.spline.Spline.has_knot_vectors": [[480, "splinepy-spline-spline-has-knot-vectors"]], "splinepy.spline.Spline.integrate": [[481, "splinepy-spline-spline-integrate"]], "splinepy.spline.Spline.is_rational": [[482, "splinepy-spline-spline-is-rational"]], "splinepy.spline.Spline.jacobian": [[483, "splinepy-spline-spline-jacobian"]], "splinepy.spline.Spline.knot_multiplicities": [[484, "splinepy-spline-spline-knot-multiplicities"]], "splinepy.spline.Spline.knot_vectors": [[485, "splinepy-spline-spline-knot-vectors"]], "splinepy.spline.Spline.kvs": [[486, "splinepy-spline-spline-kvs"]], "splinepy.spline.Spline.mapper": [[487, "splinepy-spline-spline-mapper"]], "splinepy.spline.Spline.multi_index": [[488, "splinepy-spline-spline-multi-index"]], "splinepy.spline.Spline.name": [[489, "splinepy-spline-spline-name"]], "splinepy.spline.Spline.para_dim": [[490, "splinepy-spline-spline-para-dim"]], "splinepy.spline.Spline.parametric_bounds": [[491, "splinepy-spline-spline-parametric-bounds"]], "splinepy.spline.Spline.proximities": [[492, "splinepy-spline-spline-proximities"]], "splinepy.spline.Spline.reduce_degrees": [[493, "splinepy-spline-spline-reduce-degrees"]], "splinepy.spline.Spline.required_properties": [[494, "splinepy-spline-spline-required-properties"]], "splinepy.spline.Spline.sample": [[495, "splinepy-spline-spline-sample"]], "splinepy.spline.Spline.show": [[496, "splinepy-spline-spline-show"]], "splinepy.spline.Spline.show_options": [[497, "splinepy-spline-spline-show-options"]], "splinepy.spline.Spline.showable": [[498, "splinepy-spline-spline-showable"]], "splinepy.spline.Spline.spline_data": [[499, "splinepy-spline-spline-spline-data"]], "splinepy.spline.Spline.support": [[500, "splinepy-spline-spline-support"]], "splinepy.spline.Spline.todict": [[501, "splinepy-spline-spline-todict"]], "splinepy.spline.Spline.unique_knots": [[502, "splinepy-spline-spline-unique-knots"]], "splinepy.spline.Spline.weights": [[503, "splinepy-spline-spline-weights"]], "splinepy.spline.Spline.whatami": [[504, "splinepy-spline-spline-whatami"]], "splinepy.spline.Spline.ws": [[505, "splinepy-spline-spline-ws"]], "splinepy.splinepy_core": [[506, "splinepy-splinepy-core"]], "splinepy.splinepy_core.ControlPointPointers": [[507, "splinepy-splinepy-core-controlpointpointers"]], "splinepy.splinepy_core.ControlPointPointers.dim": [[508, "splinepy-splinepy-core-controlpointpointers-dim"]], "splinepy.splinepy_core.ControlPointPointers.len": [[509, "splinepy-splinepy-core-controlpointpointers-len"]], "splinepy.splinepy_core.ControlPointPointers.set_row": [[510, "splinepy-splinepy-core-controlpointpointers-set-row"]], "splinepy.splinepy_core.ControlPointPointers.set_rows": [[511, "splinepy-splinepy-core-controlpointpointers-set-rows"]], "splinepy.splinepy_core.ControlPointPointers.sync": [[512, "splinepy-splinepy-core-controlpointpointers-sync"]], "splinepy.splinepy_core.ControlPointPointers.sync_rows": [[513, "splinepy-splinepy-core-controlpointpointers-sync-rows"]], "splinepy.splinepy_core.KnotVector": [[514, "splinepy-splinepy-core-knotvector"]], "splinepy.splinepy_core.KnotVector.find_span": [[515, "splinepy-splinepy-core-knotvector-find-span"]], "splinepy.splinepy_core.KnotVector.multiplicities": [[516, "splinepy-splinepy-core-knotvector-multiplicities"]], "splinepy.splinepy_core.KnotVector.numpy": [[517, "splinepy-splinepy-core-knotvector-numpy"]], "splinepy.splinepy_core.KnotVector.scale": [[518, "splinepy-splinepy-core-knotvector-scale"]], "splinepy.splinepy_core.KnotVector.unique": [[519, "splinepy-splinepy-core-knotvector-unique"]], "splinepy.splinepy_core.ParameterSpace": [[520, "splinepy-splinepy-core-parameterspace"]], "splinepy.splinepy_core.ParameterSpace.copy": [[521, "splinepy-splinepy-core-parameterspace-copy"]], "splinepy.splinepy_core.ParameterSpace.unique_knots": [[522, "splinepy-splinepy-core-parameterspace-unique-knots"]], "splinepy.splinepy_core.PyMultipatch": [[523, "splinepy-splinepy-core-pymultipatch"]], "splinepy.splinepy_core.PyMultipatch.add_fields": [[524, "splinepy-splinepy-core-pymultipatch-add-fields"]], "splinepy.splinepy_core.PyMultipatch.boundary_multipatch": [[525, "splinepy-splinepy-core-pymultipatch-boundary-multipatch"]], "splinepy.splinepy_core.PyMultipatch.boundary_patch_ids": [[526, "splinepy-splinepy-core-pymultipatch-boundary-patch-ids"]], "splinepy.splinepy_core.PyMultipatch.clear": [[527, "splinepy-splinepy-core-pymultipatch-clear"]], "splinepy.splinepy_core.PyMultipatch.control_point_offsets": [[528, "splinepy-splinepy-core-pymultipatch-control-point-offsets"]], "splinepy.splinepy_core.PyMultipatch.control_points": [[529, "splinepy-splinepy-core-pymultipatch-control-points"]], "splinepy.splinepy_core.PyMultipatch.dim": [[530, "splinepy-splinepy-core-pymultipatch-dim"]], "splinepy.splinepy_core.PyMultipatch.evaluate": [[531, "splinepy-splinepy-core-pymultipatch-evaluate"]], "splinepy.splinepy_core.PyMultipatch.fields": [[532, "splinepy-splinepy-core-pymultipatch-fields"]], "splinepy.splinepy_core.PyMultipatch.get_interfaces": [[533, "splinepy-splinepy-core-pymultipatch-get-interfaces"]], "splinepy.splinepy_core.PyMultipatch.n_default_threads": [[534, "splinepy-splinepy-core-pymultipatch-n-default-threads"]], "splinepy.splinepy_core.PyMultipatch.name": [[535, "splinepy-splinepy-core-pymultipatch-name"]], "splinepy.splinepy_core.PyMultipatch.para_dim": [[536, "splinepy-splinepy-core-pymultipatch-para-dim"]], "splinepy.splinepy_core.PyMultipatch.patches": [[537, "splinepy-splinepy-core-pymultipatch-patches"]], "splinepy.splinepy_core.PyMultipatch.same_parametric_bounds": [[538, "splinepy-splinepy-core-pymultipatch-same-parametric-bounds"]], "splinepy.splinepy_core.PyMultipatch.sample": [[539, "splinepy-splinepy-core-pymultipatch-sample"]], "splinepy.splinepy_core.PyMultipatch.set_interfaces": [[540, "splinepy-splinepy-core-pymultipatch-set-interfaces"]], "splinepy.splinepy_core.PyMultipatch.sub_multipatch": [[541, "splinepy-splinepy-core-pymultipatch-sub-multipatch"]], "splinepy.splinepy_core.PyMultipatch.sub_patch_centers": [[542, "splinepy-splinepy-core-pymultipatch-sub-patch-centers"]], "splinepy.splinepy_core.PyMultipatch.tolerance": [[543, "splinepy-splinepy-core-pymultipatch-tolerance"]], "splinepy.splinepy_core.PyMultipatch.whatami": [[544, "splinepy-splinepy-core-pymultipatch-whatami"]], "splinepy.splinepy_core.PySpline": [[545, "splinepy-splinepy-core-pyspline"]], "splinepy.splinepy_core.PySpline.basis": [[546, "splinepy-splinepy-core-pyspline-basis"]], "splinepy.splinepy_core.PySpline.basis_and_support": [[547, "splinepy-splinepy-core-pyspline-basis-and-support"]], "splinepy.splinepy_core.PySpline.basis_derivative": [[548, "splinepy-splinepy-core-pyspline-basis-derivative"]], "splinepy.splinepy_core.PySpline.basis_derivative_and_support": [[549, "splinepy-splinepy-core-pyspline-basis-derivative-and-support"]], "splinepy.splinepy_core.PySpline.control_mesh_resolutions": [[550, "splinepy-splinepy-core-pyspline-control-mesh-resolutions"]], "splinepy.splinepy_core.PySpline.current_core_properties": [[551, "splinepy-splinepy-core-pyspline-current-core-properties"]], "splinepy.splinepy_core.PySpline.derivative": [[552, "splinepy-splinepy-core-pyspline-derivative"]], "splinepy.splinepy_core.PySpline.dim": [[553, "splinepy-splinepy-core-pyspline-dim"]], "splinepy.splinepy_core.PySpline.elevate_degrees": [[554, "splinepy-splinepy-core-pyspline-elevate-degrees"]], "splinepy.splinepy_core.PySpline.evaluate": [[555, "splinepy-splinepy-core-pyspline-evaluate"]], "splinepy.splinepy_core.PySpline.has_knot_vectors": [[556, "splinepy-splinepy-core-pyspline-has-knot-vectors"]], "splinepy.splinepy_core.PySpline.is_rational": [[557, "splinepy-splinepy-core-pyspline-is-rational"]], "splinepy.splinepy_core.PySpline.jacobian": [[558, "splinepy-splinepy-core-pyspline-jacobian"]], "splinepy.splinepy_core.PySpline.name": [[559, "splinepy-splinepy-core-pyspline-name"]], "splinepy.splinepy_core.PySpline.para_dim": [[560, "splinepy-splinepy-core-pyspline-para-dim"]], "splinepy.splinepy_core.PySpline.parametric_bounds": [[561, "splinepy-splinepy-core-pyspline-parametric-bounds"]], "splinepy.splinepy_core.PySpline.proximities": [[562, "splinepy-splinepy-core-pyspline-proximities"]], "splinepy.splinepy_core.PySpline.reduce_degrees": [[563, "splinepy-splinepy-core-pyspline-reduce-degrees"]], "splinepy.splinepy_core.PySpline.sample": [[564, "splinepy-splinepy-core-pyspline-sample"]], "splinepy.splinepy_core.PySpline.support": [[565, "splinepy-splinepy-core-pyspline-support"]], "splinepy.splinepy_core.PySpline.whatami": [[566, "splinepy-splinepy-core-pyspline-whatami"]], "splinepy.splinepy_core.WeightPointers": [[567, "splinepy-splinepy-core-weightpointers"]], "splinepy.splinepy_core.WeightPointers.dim": [[568, "splinepy-splinepy-core-weightpointers-dim"]], "splinepy.splinepy_core.WeightPointers.len": [[569, "splinepy-splinepy-core-weightpointers-len"]], "splinepy.splinepy_core.WeightPointers.set_row": [[570, "splinepy-splinepy-core-weightpointers-set-row"]], "splinepy.splinepy_core.WeightPointers.set_rows": [[571, "splinepy-splinepy-core-weightpointers-set-rows"]], "splinepy.splinepy_core.WeightPointers.sync": [[572, "splinepy-splinepy-core-weightpointers-sync"]], "splinepy.splinepy_core.WeightPointers.sync_rows": [[573, "splinepy-splinepy-core-weightpointers-sync-rows"]], "splinepy.splinepy_core.add": [[574, "splinepy-splinepy-core-add"]], "splinepy.splinepy_core.annul_core": [[575, "splinepy-splinepy-core-annul-core"]], "splinepy.splinepy_core.bezier_extraction_matrix": [[576, "splinepy-splinepy-core-bezier-extraction-matrix"]], "splinepy.splinepy_core.boundaries_from_continuity": [[577, "splinepy-splinepy-core-boundaries-from-continuity"]], "splinepy.splinepy_core.boundary_centers": [[578, "splinepy-splinepy-core-boundary-centers"]], "splinepy.splinepy_core.build_type": [[579, "splinepy-splinepy-core-build-type"]], "splinepy.splinepy_core.compose": [[580, "splinepy-splinepy-core-compose"]], "splinepy.splinepy_core.compose_sensitivities": [[581, "splinepy-splinepy-core-compose-sensitivities"]], "splinepy.splinepy_core.composition_derivative": [[582, "splinepy-splinepy-core-composition-derivative"]], "splinepy.splinepy_core.core_id": [[583, "splinepy-splinepy-core-core-id"]], "splinepy.splinepy_core.core_ref_count": [[584, "splinepy-splinepy-core-core-ref-count"]], "splinepy.splinepy_core.derivative_spline": [[585, "splinepy-splinepy-core-derivative-spline"]], "splinepy.splinepy_core.export_iges": [[586, "splinepy-splinepy-core-export-iges"]], "splinepy.splinepy_core.extract_all_boundary_splines": [[587, "splinepy-splinepy-core-extract-all-boundary-splines"]], "splinepy.splinepy_core.extract_bezier_patches": [[588, "splinepy-splinepy-core-extract-bezier-patches"]], "splinepy.splinepy_core.extract_boundaries": [[589, "splinepy-splinepy-core-extract-boundaries"]], "splinepy.splinepy_core.extract_dim": [[590, "splinepy-splinepy-core-extract-dim"]], "splinepy.splinepy_core.global_knot_insertion_matrix": [[591, "splinepy-splinepy-core-global-knot-insertion-matrix"]], "splinepy.splinepy_core.has_core": [[592, "splinepy-splinepy-core-has-core"]], "splinepy.splinepy_core.insert_knots": [[593, "splinepy-splinepy-core-insert-knots"]], "splinepy.splinepy_core.interfaces_from_boundary_centers": [[594, "splinepy-splinepy-core-interfaces-from-boundary-centers"]], "splinepy.splinepy_core.is_minimal": [[595, "splinepy-splinepy-core-is-minimal"]], "splinepy.splinepy_core.knot_insertion_matrix": [[596, "splinepy-splinepy-core-knot-insertion-matrix"]], "splinepy.splinepy_core.multiply": [[597, "splinepy-splinepy-core-multiply"]], "splinepy.splinepy_core.null_spline": [[598, "splinepy-splinepy-core-null-spline"]], "splinepy.splinepy_core.orientations": [[599, "splinepy-splinepy-core-orientations"]], "splinepy.splinepy_core.read_iges": [[600, "splinepy-splinepy-core-read-iges"]], "splinepy.splinepy_core.remove_knots": [[601, "splinepy-splinepy-core-remove-knots"]], "splinepy.splinepy_core.same_spline_with_knot_vectors": [[602, "splinepy-splinepy-core-same-spline-with-knot-vectors"]], "splinepy.splinepy_core.split": [[603, "splinepy-splinepy-core-split"]], "splinepy.to_derived": [[604, "splinepy-to-derived"]], "splinepy.utils": [[605, "splinepy-utils"]], "splinepy.utils.data": [[606, "splinepy-utils-data"]], "splinepy.utils.data.MultipatchData": [[607, "splinepy-utils-data-multipatchdata"]], "splinepy.utils.data.MultipatchData.as_arrow": [[608, "splinepy-utils-data-multipatchdata-as-arrow"]], "splinepy.utils.data.MultipatchData.as_scalar": [[609, "splinepy-utils-data-multipatchdata-as-scalar"]], "splinepy.utils.data.MultipatchData.clear": [[610, "splinepy-utils-data-multipatchdata-clear"]], "splinepy.utils.data.MultipatchData.get": [[611, "splinepy-utils-data-multipatchdata-get"]], "splinepy.utils.data.MultipatchData.items": [[612, "splinepy-utils-data-multipatchdata-items"]], "splinepy.utils.data.MultipatchData.keys": [[613, "splinepy-utils-data-multipatchdata-keys"]], "splinepy.utils.data.MultipatchData.pop": [[614, "splinepy-utils-data-multipatchdata-pop"]], "splinepy.utils.data.MultipatchData.values": [[615, "splinepy-utils-data-multipatchdata-values"]], "splinepy.utils.data.PhysicalSpaceArray": [[616, "splinepy-utils-data-physicalspacearray"]], "splinepy.utils.data.PhysicalSpaceArray.all": [[617, "splinepy-utils-data-physicalspacearray-all"]], "splinepy.utils.data.PhysicalSpaceArray.any": [[618, "splinepy-utils-data-physicalspacearray-any"]], "splinepy.utils.data.PhysicalSpaceArray.argmax": [[619, "splinepy-utils-data-physicalspacearray-argmax"]], "splinepy.utils.data.PhysicalSpaceArray.argmin": [[620, "splinepy-utils-data-physicalspacearray-argmin"]], "splinepy.utils.data.PhysicalSpaceArray.argpartition": [[621, "splinepy-utils-data-physicalspacearray-argpartition"]], "splinepy.utils.data.PhysicalSpaceArray.argsort": [[622, "splinepy-utils-data-physicalspacearray-argsort"]], "splinepy.utils.data.PhysicalSpaceArray.astype": [[623, "splinepy-utils-data-physicalspacearray-astype"]], "splinepy.utils.data.PhysicalSpaceArray.byteswap": [[624, "splinepy-utils-data-physicalspacearray-byteswap"]], "splinepy.utils.data.PhysicalSpaceArray.choose": [[625, "splinepy-utils-data-physicalspacearray-choose"]], "splinepy.utils.data.PhysicalSpaceArray.clip": [[626, "splinepy-utils-data-physicalspacearray-clip"]], "splinepy.utils.data.PhysicalSpaceArray.compress": [[627, "splinepy-utils-data-physicalspacearray-compress"]], "splinepy.utils.data.PhysicalSpaceArray.conj": [[628, "splinepy-utils-data-physicalspacearray-conj"]], "splinepy.utils.data.PhysicalSpaceArray.conjugate": [[629, "splinepy-utils-data-physicalspacearray-conjugate"]], "splinepy.utils.data.PhysicalSpaceArray.copy": [[630, "splinepy-utils-data-physicalspacearray-copy"]], "splinepy.utils.data.PhysicalSpaceArray.cumprod": [[631, "splinepy-utils-data-physicalspacearray-cumprod"]], "splinepy.utils.data.PhysicalSpaceArray.cumsum": [[632, "splinepy-utils-data-physicalspacearray-cumsum"]], "splinepy.utils.data.PhysicalSpaceArray.diagonal": [[633, "splinepy-utils-data-physicalspacearray-diagonal"]], "splinepy.utils.data.PhysicalSpaceArray.dot": [[634, "splinepy-utils-data-physicalspacearray-dot"]], "splinepy.utils.data.PhysicalSpaceArray.dump": [[635, "splinepy-utils-data-physicalspacearray-dump"]], "splinepy.utils.data.PhysicalSpaceArray.dumps": [[636, "splinepy-utils-data-physicalspacearray-dumps"]], "splinepy.utils.data.PhysicalSpaceArray.fill": [[637, "splinepy-utils-data-physicalspacearray-fill"]], "splinepy.utils.data.PhysicalSpaceArray.flatten": [[638, "splinepy-utils-data-physicalspacearray-flatten"]], "splinepy.utils.data.PhysicalSpaceArray.full_row_indices": [[639, "splinepy-utils-data-physicalspacearray-full-row-indices"]], "splinepy.utils.data.PhysicalSpaceArray.getfield": [[640, "splinepy-utils-data-physicalspacearray-getfield"]], "splinepy.utils.data.PhysicalSpaceArray.item": [[641, "splinepy-utils-data-physicalspacearray-item"]], "splinepy.utils.data.PhysicalSpaceArray.itemset": [[642, "splinepy-utils-data-physicalspacearray-itemset"]], "splinepy.utils.data.PhysicalSpaceArray.max": [[643, "splinepy-utils-data-physicalspacearray-max"]], "splinepy.utils.data.PhysicalSpaceArray.mean": [[644, "splinepy-utils-data-physicalspacearray-mean"]], "splinepy.utils.data.PhysicalSpaceArray.min": [[645, "splinepy-utils-data-physicalspacearray-min"]], "splinepy.utils.data.PhysicalSpaceArray.newbyteorder": [[646, "splinepy-utils-data-physicalspacearray-newbyteorder"]], "splinepy.utils.data.PhysicalSpaceArray.nonzero": [[647, "splinepy-utils-data-physicalspacearray-nonzero"]], "splinepy.utils.data.PhysicalSpaceArray.partition": [[648, "splinepy-utils-data-physicalspacearray-partition"]], "splinepy.utils.data.PhysicalSpaceArray.prod": [[649, "splinepy-utils-data-physicalspacearray-prod"]], "splinepy.utils.data.PhysicalSpaceArray.ptp": [[650, "splinepy-utils-data-physicalspacearray-ptp"]], "splinepy.utils.data.PhysicalSpaceArray.put": [[651, "splinepy-utils-data-physicalspacearray-put"]], "splinepy.utils.data.PhysicalSpaceArray.ravel": [[652, "splinepy-utils-data-physicalspacearray-ravel"]], "splinepy.utils.data.PhysicalSpaceArray.repeat": [[653, "splinepy-utils-data-physicalspacearray-repeat"]], "splinepy.utils.data.PhysicalSpaceArray.reshape": [[654, "splinepy-utils-data-physicalspacearray-reshape"]], "splinepy.utils.data.PhysicalSpaceArray.resize": [[655, "splinepy-utils-data-physicalspacearray-resize"]], "splinepy.utils.data.PhysicalSpaceArray.round": [[656, "splinepy-utils-data-physicalspacearray-round"]], "splinepy.utils.data.PhysicalSpaceArray.row_indices": [[657, "splinepy-utils-data-physicalspacearray-row-indices"]], "splinepy.utils.data.PhysicalSpaceArray.searchsorted": [[658, "splinepy-utils-data-physicalspacearray-searchsorted"]], "splinepy.utils.data.PhysicalSpaceArray.setfield": [[659, "splinepy-utils-data-physicalspacearray-setfield"]], "splinepy.utils.data.PhysicalSpaceArray.setflags": [[660, "splinepy-utils-data-physicalspacearray-setflags"]], "splinepy.utils.data.PhysicalSpaceArray.sort": [[661, "splinepy-utils-data-physicalspacearray-sort"]], "splinepy.utils.data.PhysicalSpaceArray.squeeze": [[662, "splinepy-utils-data-physicalspacearray-squeeze"]], "splinepy.utils.data.PhysicalSpaceArray.std": [[663, "splinepy-utils-data-physicalspacearray-std"]], "splinepy.utils.data.PhysicalSpaceArray.sum": [[664, "splinepy-utils-data-physicalspacearray-sum"]], "splinepy.utils.data.PhysicalSpaceArray.swapaxes": [[665, "splinepy-utils-data-physicalspacearray-swapaxes"]], "splinepy.utils.data.PhysicalSpaceArray.take": [[666, "splinepy-utils-data-physicalspacearray-take"]], "splinepy.utils.data.PhysicalSpaceArray.tobytes": [[667, "splinepy-utils-data-physicalspacearray-tobytes"]], "splinepy.utils.data.PhysicalSpaceArray.tofile": [[668, "splinepy-utils-data-physicalspacearray-tofile"]], "splinepy.utils.data.PhysicalSpaceArray.tolist": [[669, "splinepy-utils-data-physicalspacearray-tolist"]], "splinepy.utils.data.PhysicalSpaceArray.tostring": [[670, "splinepy-utils-data-physicalspacearray-tostring"]], "splinepy.utils.data.PhysicalSpaceArray.trace": [[671, "splinepy-utils-data-physicalspacearray-trace"]], "splinepy.utils.data.PhysicalSpaceArray.transpose": [[672, "splinepy-utils-data-physicalspacearray-transpose"]], "splinepy.utils.data.PhysicalSpaceArray.var": [[673, "splinepy-utils-data-physicalspacearray-var"]], "splinepy.utils.data.PhysicalSpaceArray.view": [[674, "splinepy-utils-data-physicalspacearray-view"]], "splinepy.utils.data.SplineData": [[675, "splinepy-utils-data-splinedata"]], "splinepy.utils.data.SplineData.as_arrow": [[676, "splinepy-utils-data-splinedata-as-arrow"]], "splinepy.utils.data.SplineData.as_scalar": [[677, "splinepy-utils-data-splinedata-as-scalar"]], "splinepy.utils.data.SplineData.clear": [[678, "splinepy-utils-data-splinedata-clear"]], "splinepy.utils.data.SplineData.get": [[679, "splinepy-utils-data-splinedata-get"]], "splinepy.utils.data.SplineData.items": [[680, "splinepy-utils-data-splinedata-items"]], "splinepy.utils.data.SplineData.keys": [[681, "splinepy-utils-data-splinedata-keys"]], "splinepy.utils.data.SplineData.pop": [[682, "splinepy-utils-data-splinedata-pop"]], "splinepy.utils.data.SplineData.values": [[683, "splinepy-utils-data-splinedata-values"]], "splinepy.utils.data.SplineDataAdaptor": [[684, "splinepy-utils-data-splinedataadaptor"]], "splinepy.utils.data.SplineDataAdaptor.arrow_data_only": [[685, "splinepy-utils-data-splinedataadaptor-arrow-data-only"]], "splinepy.utils.data.SplineDataAdaptor.as_vertex_data": [[686, "splinepy-utils-data-splinedataadaptor-as-vertex-data"]], "splinepy.utils.data.SplineDataAdaptor.data": [[687, "splinepy-utils-data-splinedataadaptor-data"]], "splinepy.utils.data.SplineDataAdaptor.function": [[688, "splinepy-utils-data-splinedataadaptor-function"]], "splinepy.utils.data.SplineDataAdaptor.has_evaluate": [[689, "splinepy-utils-data-splinedataadaptor-has-evaluate"]], "splinepy.utils.data.SplineDataAdaptor.has_function": [[690, "splinepy-utils-data-splinedataadaptor-has-function"]], "splinepy.utils.data.SplineDataAdaptor.has_locations": [[691, "splinepy-utils-data-splinedataadaptor-has-locations"]], "splinepy.utils.data.SplineDataAdaptor.is_spline": [[692, "splinepy-utils-data-splinedataadaptor-is-spline"]], "splinepy.utils.data.SplineDataAdaptor.locations": [[693, "splinepy-utils-data-splinedataadaptor-locations"]], "splinepy.utils.data.SplineDataAdaptor.parametric_bounds": [[694, "splinepy-utils-data-splinedataadaptor-parametric-bounds"]], "splinepy.utils.data.cartesian_product": [[695, "splinepy-utils-data-cartesian-product"]], "splinepy.utils.data.enforce_contiguous": [[696, "splinepy-utils-data-enforce-contiguous"]], "splinepy.utils.data.enforce_contiguous_values": [[697, "splinepy-utils-data-enforce-contiguous-values"]], "splinepy.utils.data.make_matrix": [[698, "splinepy-utils-data-make-matrix"]], "splinepy.utils.data.uniform_query": [[699, "splinepy-utils-data-uniform-query"]], "splinepy.utils.log": [[700, "splinepy-utils-log"]], "splinepy.utils.log.configure": [[701, "splinepy-utils-log-configure"]], "splinepy.utils.log.debug": [[702, "splinepy-utils-log-debug"]], "splinepy.utils.log.info": [[703, "splinepy-utils-log-info"]], "splinepy.utils.log.prepend_log": [[704, "splinepy-utils-log-prepend-log"]], "splinepy.utils.log.warning": [[705, "splinepy-utils-log-warning"]], "API References": [[706, "api-references"]], "Overview": [[706, "overview"]], "Python API": [[706, "python-api"]], "Install guide": [[707, "install-guide"]], "Feature Summary": [[707, "feature-summary"]], "Splines": [[707, "splines"]], "Multipatch": [[707, "multipatch"]], "IO": [[707, "io"]], "Dependencies": [[707, "dependencies"]], "Table of Contents": [[707, "table-of-contents"]], "Splines?": [[707, null]], "Library": [[707, null]], "Introduction to Splines": [[709, "introduction-to-splines"]], "A general introduction to splines": [[709, "a-general-introduction-to-splines"]], "In which situations are splines helpful?": [[709, "in-which-situations-are-splines-helpful"]], "An introduction to different spline types": [[709, "an-introduction-to-different-spline-types"]], "B\u00e9zier splines": [[709, "bezier-splines"]], "Examples": [[709, "examples"]], "Properties of B\u00e9zier curves": [[709, "properties-of-bezier-curves"]], "Drawbacks of B\u00e9zier curves": [[709, "drawbacks-of-bezier-curves"]], "Rational B\u00e9zier splines": [[709, "rational-bezier-splines"]], "B-splines": [[709, "b-splines"]], "Properties of B-spline basis functions:": [[709, "properties-of-b-spline-basis-functions"]], "Non-uniform rational B-splines (NURBS)": [[709, "non-uniform-rational-b-splines-nurbs"]], "Further reading": [[709, "further-reading"]], "Creating and Plotting Splines": [[709, "creating-and-plotting-splines"]], "Visualizing Splines": [[709, "visualizing-splines"]], "Creating a basic NURBS": [[709, "creating-a-basic-nurbs"]], "Creation of common geometries": [[709, "creation-of-common-geometries"]], "Expanding into 3D": [[709, "expanding-into-3d"]], "Notebook plotting": [[709, "notebook-plotting"]]}, "indexentries": {"module": [[1, "module-splinepy"], [2, "module-splinepy.bezier"], [61, "module-splinepy.bspline"], [118, "module-splinepy.cli"], [122, "module-splinepy.helpme"], [123, "module-splinepy.helpme.check"], [129, "module-splinepy.helpme.create"], [153, "module-splinepy.helpme.extract"], [178, "module-splinepy.helpme.ffd"], [185, "module-splinepy.helpme.fit"], [191, "module-splinepy.helpme.integrate"], [198, "module-splinepy.helpme.mapper"], [209, "module-splinepy.helpme.multi_index"], [211, "module-splinepy.helpme.reparametrize"], [214, "module-splinepy.helpme.visualize"], [237, "module-splinepy.io"], [238, "module-splinepy.io.cats"], [241, "module-splinepy.io.default"], [244, "module-splinepy.io.gismo"], [247, "module-splinepy.io.iges"], [250, "module-splinepy.io.ioutils"], [257, "module-splinepy.io.irit"], [260, "module-splinepy.io.json"], [263, "module-splinepy.io.mfem"], [269, "module-splinepy.io.npz"], [272, "module-splinepy.io.svg"], [274, "module-splinepy.microstructure"], [275, "module-splinepy.microstructure.microstructure"], [284, "module-splinepy.microstructure.tiles"], [285, "module-splinepy.microstructure.tiles.armadillo"], [291, "module-splinepy.microstructure.tiles.chi"], [296, "module-splinepy.microstructure.tiles.cross_2d"], [301, "module-splinepy.microstructure.tiles.cross_3d"], [306, "module-splinepy.microstructure.tiles.cross_3d_linear"], [311, "module-splinepy.microstructure.tiles.cube_void"], [316, "module-splinepy.microstructure.tiles.double_lattice"], [321, "module-splinepy.microstructure.tiles.ellips_v_oid"], [326, "module-splinepy.microstructure.tiles.hollow_cube"], [331, "module-splinepy.microstructure.tiles.hollow_octagon"], [336, "module-splinepy.microstructure.tiles.hollow_octagon_extrude"], [342, "module-splinepy.microstructure.tiles.inverse_cross_3d"], [347, "module-splinepy.microstructure.tiles.snappy"], [352, "module-splinepy.microstructure.tiles.tile_base"], [359, "module-splinepy.multipatch"], [388, "module-splinepy.nurbs"], [417, "module-splinepy.rational_bezier"], [447, "module-splinepy.settings"], [452, "module-splinepy.spline"], [506, "module-splinepy.splinepy_core"], [605, "module-splinepy.utils"], [606, "module-splinepy.utils.data"], [700, "module-splinepy.utils.log"]], "splinepy": [[1, "module-splinepy"]], "splinepy.bezier": [[2, "module-splinepy.bezier"]], "bezier (class in splinepy.bezier)": [[3, "splinepy.bezier.Bezier"]], "basis() (splinepy.bezier.bezier method)": [[4, "splinepy.bezier.Bezier.basis"]], "basis_and_support() (splinepy.bezier.bezier method)": [[5, "splinepy.bezier.Bezier.basis_and_support"]], "basis_derivative() (splinepy.bezier.bezier method)": [[6, "splinepy.bezier.Bezier.basis_derivative"]], "basis_derivative_and_support() (splinepy.bezier.bezier method)": [[7, "splinepy.bezier.Bezier.basis_derivative_and_support"]], "bezier (splinepy.bezier.bezier property)": [[8, "splinepy.bezier.Bezier.bezier"]], "bspline (splinepy.bezier.bezier property)": [[9, "splinepy.bezier.Bezier.bspline"]], "clear() (splinepy.bezier.bezier method)": [[10, "splinepy.bezier.Bezier.clear"]], "compose() (splinepy.bezier.bezier method)": [[11, "splinepy.bezier.Bezier.compose"]], "composition_derivative() (splinepy.bezier.bezier method)": [[12, "splinepy.bezier.Bezier.composition_derivative"]], "copy() (splinepy.bezier.bezier method)": [[13, "splinepy.bezier.Bezier.copy"]], "current_core_properties() (splinepy.bezier.bezier method)": [[14, "splinepy.bezier.Bezier.current_core_properties"]], "derivative() (splinepy.bezier.bezier method)": [[15, "splinepy.bezier.Bezier.derivative"]], "derivative_spline() (splinepy.bezier.bezier method)": [[16, "splinepy.bezier.Bezier.derivative_spline"]], "elevate_degrees() (splinepy.bezier.bezier method)": [[17, "splinepy.bezier.Bezier.elevate_degrees"]], "evaluate() (splinepy.bezier.bezier method)": [[18, "splinepy.bezier.Bezier.evaluate"]], "export() (splinepy.bezier.bezier method)": [[19, "splinepy.bezier.Bezier.export"]], "extract_dim() (splinepy.bezier.bezier method)": [[20, "splinepy.bezier.Bezier.extract_dim"]], "greville_abscissae() (splinepy.bezier.bezier method)": [[21, "splinepy.bezier.Bezier.greville_abscissae"]], "jacobian() (splinepy.bezier.bezier method)": [[22, "splinepy.bezier.Bezier.jacobian"]], "mapper() (splinepy.bezier.bezier method)": [[23, "splinepy.bezier.Bezier.mapper"]], "nurbs (splinepy.bezier.bezier property)": [[24, "splinepy.bezier.Bezier.nurbs"]], "proximities() (splinepy.bezier.bezier method)": [[25, "splinepy.bezier.Bezier.proximities"]], "rationalbezier (splinepy.bezier.bezier property)": [[26, "splinepy.bezier.Bezier.rationalbezier"]], "reduce_degrees() (splinepy.bezier.bezier method)": [[27, "splinepy.bezier.Bezier.reduce_degrees"]], "sample() (splinepy.bezier.bezier method)": [[28, "splinepy.bezier.Bezier.sample"]], "show() (splinepy.bezier.bezier method)": [[29, "splinepy.bezier.Bezier.show"]], "showable() (splinepy.bezier.bezier method)": [[30, "splinepy.bezier.Bezier.showable"]], "split() (splinepy.bezier.bezier method)": [[31, "splinepy.bezier.Bezier.split"]], "support() (splinepy.bezier.bezier method)": [[32, "splinepy.bezier.Bezier.support"]], "todict() (splinepy.bezier.bezier method)": [[33, "splinepy.bezier.Bezier.todict"]], "bezierbase (class in splinepy.bezier)": [[34, "splinepy.bezier.BezierBase"]], "basis() (splinepy.bezier.bezierbase method)": [[35, "splinepy.bezier.BezierBase.basis"]], "basis_and_support() (splinepy.bezier.bezierbase method)": [[36, "splinepy.bezier.BezierBase.basis_and_support"]], "basis_derivative() (splinepy.bezier.bezierbase method)": [[37, "splinepy.bezier.BezierBase.basis_derivative"]], "basis_derivative_and_support() (splinepy.bezier.bezierbase method)": [[38, "splinepy.bezier.BezierBase.basis_derivative_and_support"]], "clear() (splinepy.bezier.bezierbase method)": [[39, "splinepy.bezier.BezierBase.clear"]], "compose() (splinepy.bezier.bezierbase method)": [[40, "splinepy.bezier.BezierBase.compose"]], "composition_derivative() (splinepy.bezier.bezierbase method)": [[41, "splinepy.bezier.BezierBase.composition_derivative"]], "copy() (splinepy.bezier.bezierbase method)": [[42, "splinepy.bezier.BezierBase.copy"]], "current_core_properties() (splinepy.bezier.bezierbase method)": [[43, "splinepy.bezier.BezierBase.current_core_properties"]], "derivative() (splinepy.bezier.bezierbase method)": [[44, "splinepy.bezier.BezierBase.derivative"]], "derivative_spline() (splinepy.bezier.bezierbase method)": [[45, "splinepy.bezier.BezierBase.derivative_spline"]], "elevate_degrees() (splinepy.bezier.bezierbase method)": [[46, "splinepy.bezier.BezierBase.elevate_degrees"]], "evaluate() (splinepy.bezier.bezierbase method)": [[47, "splinepy.bezier.BezierBase.evaluate"]], "export() (splinepy.bezier.bezierbase method)": [[48, "splinepy.bezier.BezierBase.export"]], "extract_dim() (splinepy.bezier.bezierbase method)": [[49, "splinepy.bezier.BezierBase.extract_dim"]], "greville_abscissae() (splinepy.bezier.bezierbase method)": [[50, "splinepy.bezier.BezierBase.greville_abscissae"]], "jacobian() (splinepy.bezier.bezierbase method)": [[51, "splinepy.bezier.BezierBase.jacobian"]], "mapper() (splinepy.bezier.bezierbase method)": [[52, "splinepy.bezier.BezierBase.mapper"]], "proximities() (splinepy.bezier.bezierbase method)": [[53, "splinepy.bezier.BezierBase.proximities"]], "reduce_degrees() (splinepy.bezier.bezierbase method)": [[54, "splinepy.bezier.BezierBase.reduce_degrees"]], "sample() (splinepy.bezier.bezierbase method)": [[55, "splinepy.bezier.BezierBase.sample"]], "show() (splinepy.bezier.bezierbase method)": [[56, "splinepy.bezier.BezierBase.show"]], "showable() (splinepy.bezier.bezierbase method)": [[57, "splinepy.bezier.BezierBase.showable"]], "split() (splinepy.bezier.bezierbase method)": [[58, "splinepy.bezier.BezierBase.split"]], "support() (splinepy.bezier.bezierbase method)": [[59, "splinepy.bezier.BezierBase.support"]], "todict() (splinepy.bezier.bezierbase method)": [[60, "splinepy.bezier.BezierBase.todict"]], "splinepy.bspline": [[61, "module-splinepy.bspline"]], "bspline (class in splinepy.bspline)": [[62, "splinepy.bspline.BSpline"]], "basis() (splinepy.bspline.bspline method)": [[63, "splinepy.bspline.BSpline.basis"]], "basis_and_support() (splinepy.bspline.bspline method)": [[64, "splinepy.bspline.BSpline.basis_and_support"]], "basis_derivative() (splinepy.bspline.bspline method)": [[65, "splinepy.bspline.BSpline.basis_derivative"]], "basis_derivative_and_support() (splinepy.bspline.bspline method)": [[66, "splinepy.bspline.BSpline.basis_derivative_and_support"]], "bspline (splinepy.bspline.bspline property)": [[67, "splinepy.bspline.BSpline.bspline"]], "clear() (splinepy.bspline.bspline method)": [[68, "splinepy.bspline.BSpline.clear"]], "copy() (splinepy.bspline.bspline method)": [[69, "splinepy.bspline.BSpline.copy"]], "current_core_properties() (splinepy.bspline.bspline method)": [[70, "splinepy.bspline.BSpline.current_core_properties"]], "derivative() (splinepy.bspline.bspline method)": [[71, "splinepy.bspline.BSpline.derivative"]], "elevate_degrees() (splinepy.bspline.bspline method)": [[72, "splinepy.bspline.BSpline.elevate_degrees"]], "evaluate() (splinepy.bspline.bspline method)": [[73, "splinepy.bspline.BSpline.evaluate"]], "export() (splinepy.bspline.bspline method)": [[74, "splinepy.bspline.BSpline.export"]], "extract_bezier_patches() (splinepy.bspline.bspline method)": [[75, "splinepy.bspline.BSpline.extract_bezier_patches"]], "greville_abscissae() (splinepy.bspline.bspline method)": [[76, "splinepy.bspline.BSpline.greville_abscissae"]], "insert_knots() (splinepy.bspline.bspline method)": [[77, "splinepy.bspline.BSpline.insert_knots"]], "jacobian() (splinepy.bspline.bspline method)": [[78, "splinepy.bspline.BSpline.jacobian"]], "knot_insertion_matrix() (splinepy.bspline.bspline method)": [[79, "splinepy.bspline.BSpline.knot_insertion_matrix"]], "mapper() (splinepy.bspline.bspline method)": [[80, "splinepy.bspline.BSpline.mapper"]], "normalize_knot_vectors() (splinepy.bspline.bspline method)": [[81, "splinepy.bspline.BSpline.normalize_knot_vectors"]], "nurbs (splinepy.bspline.bspline property)": [[82, "splinepy.bspline.BSpline.nurbs"]], "proximities() (splinepy.bspline.bspline method)": [[83, "splinepy.bspline.BSpline.proximities"]], "reduce_degrees() (splinepy.bspline.bspline method)": [[84, "splinepy.bspline.BSpline.reduce_degrees"]], "remove_knots() (splinepy.bspline.bspline method)": [[85, "splinepy.bspline.BSpline.remove_knots"]], "sample() (splinepy.bspline.bspline method)": [[86, "splinepy.bspline.BSpline.sample"]], "show() (splinepy.bspline.bspline method)": [[87, "splinepy.bspline.BSpline.show"]], "showable() (splinepy.bspline.bspline method)": [[88, "splinepy.bspline.BSpline.showable"]], "support() (splinepy.bspline.bspline method)": [[89, "splinepy.bspline.BSpline.support"]], "todict() (splinepy.bspline.bspline method)": [[90, "splinepy.bspline.BSpline.todict"]], "bsplinebase (class in splinepy.bspline)": [[91, "splinepy.bspline.BSplineBase"]], "basis() (splinepy.bspline.bsplinebase method)": [[92, "splinepy.bspline.BSplineBase.basis"]], "basis_and_support() (splinepy.bspline.bsplinebase method)": [[93, "splinepy.bspline.BSplineBase.basis_and_support"]], "basis_derivative() (splinepy.bspline.bsplinebase method)": [[94, "splinepy.bspline.BSplineBase.basis_derivative"]], "basis_derivative_and_support() (splinepy.bspline.bsplinebase method)": [[95, "splinepy.bspline.BSplineBase.basis_derivative_and_support"]], "clear() (splinepy.bspline.bsplinebase method)": [[96, "splinepy.bspline.BSplineBase.clear"]], "copy() (splinepy.bspline.bsplinebase method)": [[97, "splinepy.bspline.BSplineBase.copy"]], "current_core_properties() (splinepy.bspline.bsplinebase method)": [[98, "splinepy.bspline.BSplineBase.current_core_properties"]], "derivative() (splinepy.bspline.bsplinebase method)": [[99, "splinepy.bspline.BSplineBase.derivative"]], "elevate_degrees() (splinepy.bspline.bsplinebase method)": [[100, "splinepy.bspline.BSplineBase.elevate_degrees"]], "evaluate() (splinepy.bspline.bsplinebase method)": [[101, "splinepy.bspline.BSplineBase.evaluate"]], "export() (splinepy.bspline.bsplinebase method)": [[102, "splinepy.bspline.BSplineBase.export"]], "extract_bezier_patches() (splinepy.bspline.bsplinebase method)": [[103, "splinepy.bspline.BSplineBase.extract_bezier_patches"]], "greville_abscissae() (splinepy.bspline.bsplinebase method)": [[104, "splinepy.bspline.BSplineBase.greville_abscissae"]], "insert_knots() (splinepy.bspline.bsplinebase method)": [[105, "splinepy.bspline.BSplineBase.insert_knots"]], "jacobian() (splinepy.bspline.bsplinebase method)": [[106, "splinepy.bspline.BSplineBase.jacobian"]], "knot_insertion_matrix() (splinepy.bspline.bsplinebase method)": [[107, "splinepy.bspline.BSplineBase.knot_insertion_matrix"]], "mapper() (splinepy.bspline.bsplinebase method)": [[108, "splinepy.bspline.BSplineBase.mapper"]], "normalize_knot_vectors() (splinepy.bspline.bsplinebase method)": [[109, "splinepy.bspline.BSplineBase.normalize_knot_vectors"]], "proximities() (splinepy.bspline.bsplinebase method)": [[110, "splinepy.bspline.BSplineBase.proximities"]], "reduce_degrees() (splinepy.bspline.bsplinebase method)": [[111, "splinepy.bspline.BSplineBase.reduce_degrees"]], "remove_knots() (splinepy.bspline.bsplinebase method)": [[112, "splinepy.bspline.BSplineBase.remove_knots"]], "sample() (splinepy.bspline.bsplinebase method)": [[113, "splinepy.bspline.BSplineBase.sample"]], "show() (splinepy.bspline.bsplinebase method)": [[114, "splinepy.bspline.BSplineBase.show"]], "showable() (splinepy.bspline.bsplinebase method)": [[115, "splinepy.bspline.BSplineBase.showable"]], "support() (splinepy.bspline.bsplinebase method)": [[116, "splinepy.bspline.BSplineBase.support"]], "todict() (splinepy.bspline.bsplinebase method)": [[117, "splinepy.bspline.BSplineBase.todict"]], "splinepy.cli": [[118, "module-splinepy.cli"]], "convert() (in module splinepy.cli)": [[119, "splinepy.cli.convert"]], "entry() (in module splinepy.cli)": [[120, "splinepy.cli.entry"]], "show() (in module splinepy.cli)": [[121, "splinepy.cli.show"]], "splinepy.helpme": [[122, "module-splinepy.helpme"]], "splinepy.helpme.check": [[123, "module-splinepy.helpme.check"]], "checker (class in splinepy.helpme.check)": [[124, "splinepy.helpme.check.Checker"]], "clamped_knot_vectors() (splinepy.helpme.check.checker method)": [[125, "splinepy.helpme.check.Checker.clamped_knot_vectors"]], "valid_queries() (splinepy.helpme.check.checker method)": [[126, "splinepy.helpme.check.Checker.valid_queries"]], "clamped_knot_vectors() (in module splinepy.helpme.check)": [[127, "splinepy.helpme.check.clamped_knot_vectors"]], "valid_queries() (in module splinepy.helpme.check)": [[128, "splinepy.helpme.check.valid_queries"]], "splinepy.helpme.create": [[129, "module-splinepy.helpme.create"]], "creator (class in splinepy.helpme.create)": [[130, "splinepy.helpme.create.Creator"]], "determinant_spline() (splinepy.helpme.create.creator method)": [[131, "splinepy.helpme.create.Creator.determinant_spline"]], "embedded() (splinepy.helpme.create.creator method)": [[132, "splinepy.helpme.create.Creator.embedded"]], "extruded() (splinepy.helpme.create.creator method)": [[133, "splinepy.helpme.create.Creator.extruded"]], "parametric_view() (splinepy.helpme.create.creator method)": [[134, "splinepy.helpme.create.Creator.parametric_view"]], "revolved() (splinepy.helpme.create.creator method)": [[135, "splinepy.helpme.create.Creator.revolved"]], "arc() (in module splinepy.helpme.create)": [[136, "splinepy.helpme.create.arc"]], "box() (in module splinepy.helpme.create)": [[137, "splinepy.helpme.create.box"]], "circle() (in module splinepy.helpme.create)": [[138, "splinepy.helpme.create.circle"]], "cone() (in module splinepy.helpme.create)": [[139, "splinepy.helpme.create.cone"]], "determinant_spline() (in module splinepy.helpme.create)": [[140, "splinepy.helpme.create.determinant_spline"]], "disk() (in module splinepy.helpme.create)": [[141, "splinepy.helpme.create.disk"]], "embedded() (in module splinepy.helpme.create)": [[142, "splinepy.helpme.create.embedded"]], "extruded() (in module splinepy.helpme.create)": [[143, "splinepy.helpme.create.extruded"]], "from_bounds() (in module splinepy.helpme.create)": [[144, "splinepy.helpme.create.from_bounds"]], "line() (in module splinepy.helpme.create)": [[145, "splinepy.helpme.create.line"]], "parametric_view() (in module splinepy.helpme.create)": [[146, "splinepy.helpme.create.parametric_view"]], "plate() (in module splinepy.helpme.create)": [[147, "splinepy.helpme.create.plate"]], "pyramid() (in module splinepy.helpme.create)": [[148, "splinepy.helpme.create.pyramid"]], "revolved() (in module splinepy.helpme.create)": [[149, "splinepy.helpme.create.revolved"]], "sphere() (in module splinepy.helpme.create)": [[150, "splinepy.helpme.create.sphere"]], "surface_circle() (in module splinepy.helpme.create)": [[151, "splinepy.helpme.create.surface_circle"]], "torus() (in module splinepy.helpme.create)": [[152, "splinepy.helpme.create.torus"]], "splinepy.helpme.extract": [[153, "module-splinepy.helpme.extract"]], "extractor (class in splinepy.helpme.extract)": [[154, "splinepy.helpme.extract.Extractor"]], "arrow_data() (splinepy.helpme.extract.extractor method)": [[155, "splinepy.helpme.extract.Extractor.arrow_data"]], "beziers() (splinepy.helpme.extract.extractor method)": [[156, "splinepy.helpme.extract.Extractor.beziers"]], "boundaries() (splinepy.helpme.extract.extractor method)": [[157, "splinepy.helpme.extract.Extractor.boundaries"]], "control_edges() (splinepy.helpme.extract.extractor method)": [[158, "splinepy.helpme.extract.Extractor.control_edges"]], "control_faces() (splinepy.helpme.extract.extractor method)": [[159, "splinepy.helpme.extract.Extractor.control_faces"]], "control_mesh() (splinepy.helpme.extract.extractor method)": [[160, "splinepy.helpme.extract.Extractor.control_mesh"]], "control_points() (splinepy.helpme.extract.extractor method)": [[161, "splinepy.helpme.extract.Extractor.control_points"]], "control_volumes() (splinepy.helpme.extract.extractor method)": [[162, "splinepy.helpme.extract.Extractor.control_volumes"]], "edges() (splinepy.helpme.extract.extractor method)": [[163, "splinepy.helpme.extract.Extractor.edges"]], "faces() (splinepy.helpme.extract.extractor method)": [[164, "splinepy.helpme.extract.Extractor.faces"]], "spline() (splinepy.helpme.extract.extractor method)": [[165, "splinepy.helpme.extract.Extractor.spline"]], "volumes() (splinepy.helpme.extract.extractor method)": [[166, "splinepy.helpme.extract.Extractor.volumes"]], "arrow_data() (in module splinepy.helpme.extract)": [[167, "splinepy.helpme.extract.arrow_data"]], "boundaries() (in module splinepy.helpme.extract)": [[168, "splinepy.helpme.extract.boundaries"]], "control_edges() (in module splinepy.helpme.extract)": [[169, "splinepy.helpme.extract.control_edges"]], "control_faces() (in module splinepy.helpme.extract)": [[170, "splinepy.helpme.extract.control_faces"]], "control_mesh() (in module splinepy.helpme.extract)": [[171, "splinepy.helpme.extract.control_mesh"]], "control_points() (in module splinepy.helpme.extract)": [[172, "splinepy.helpme.extract.control_points"]], "control_volumes() (in module splinepy.helpme.extract)": [[173, "splinepy.helpme.extract.control_volumes"]], "edges() (in module splinepy.helpme.extract)": [[174, "splinepy.helpme.extract.edges"]], "faces() (in module splinepy.helpme.extract)": [[175, "splinepy.helpme.extract.faces"]], "spline() (in module splinepy.helpme.extract)": [[176, "splinepy.helpme.extract.spline"]], "volumes() (in module splinepy.helpme.extract)": [[177, "splinepy.helpme.extract.volumes"]], "splinepy.helpme.ffd": [[178, "module-splinepy.helpme.ffd"]], "ffd (class in splinepy.helpme.ffd)": [[179, "splinepy.helpme.ffd.FFD"]], "mesh (splinepy.helpme.ffd.ffd property)": [[180, "splinepy.helpme.ffd.FFD.mesh"]], "padding (splinepy.helpme.ffd.ffd property)": [[181, "splinepy.helpme.ffd.FFD.padding"]], "show() (splinepy.helpme.ffd.ffd method)": [[182, "splinepy.helpme.ffd.FFD.show"]], "showable() (splinepy.helpme.ffd.ffd method)": [[183, "splinepy.helpme.ffd.FFD.showable"]], "spline (splinepy.helpme.ffd.ffd property)": [[184, "splinepy.helpme.ffd.FFD.spline"]], "splinepy.helpme.fit": [[185, "module-splinepy.helpme.fit"]], "compute_knot_vector() (in module splinepy.helpme.fit)": [[186, "splinepy.helpme.fit.compute_knot_vector"]], "curve() (in module splinepy.helpme.fit)": [[187, "splinepy.helpme.fit.curve"]], "parameterize() (in module splinepy.helpme.fit)": [[188, "splinepy.helpme.fit.parameterize"]], "solve_for_control_points() (in module splinepy.helpme.fit)": [[189, "splinepy.helpme.fit.solve_for_control_points"]], "surface() (in module splinepy.helpme.fit)": [[190, "splinepy.helpme.fit.surface"]], "splinepy.helpme.integrate": [[191, "module-splinepy.helpme.integrate"]], "integrator (class in splinepy.helpme.integrate)": [[192, "splinepy.helpme.integrate.Integrator"]], "parametric_function() (splinepy.helpme.integrate.integrator method)": [[193, "splinepy.helpme.integrate.Integrator.parametric_function"]], "volume() (splinepy.helpme.integrate.integrator method)": [[194, "splinepy.helpme.integrate.Integrator.volume"]], "parametric_function() (in module splinepy.helpme.integrate)": [[195, "splinepy.helpme.integrate.parametric_function"]], "physical_function() (in module splinepy.helpme.integrate)": [[196, "splinepy.helpme.integrate.physical_function"]], "volume() (in module splinepy.helpme.integrate)": [[197, "splinepy.helpme.integrate.volume"]], "splinepy.helpme.mapper": [[198, "module-splinepy.helpme.mapper"]], "mapper (class in splinepy.helpme.mapper)": [[199, "splinepy.helpme.mapper.Mapper"]], "basis_function_derivatives() (splinepy.helpme.mapper.mapper method)": [[200, "splinepy.helpme.mapper.Mapper.basis_function_derivatives"]], "basis_gradient_and_support() (splinepy.helpme.mapper.mapper method)": [[201, "splinepy.helpme.mapper.Mapper.basis_gradient_and_support"]], "basis_hessian_and_support() (splinepy.helpme.mapper.mapper method)": [[202, "splinepy.helpme.mapper.Mapper.basis_hessian_and_support"]], "basis_laplacian_and_support() (splinepy.helpme.mapper.mapper method)": [[203, "splinepy.helpme.mapper.Mapper.basis_laplacian_and_support"]], "divergence() (splinepy.helpme.mapper.mapper method)": [[204, "splinepy.helpme.mapper.Mapper.divergence"]], "field_derivatives() (splinepy.helpme.mapper.mapper method)": [[205, "splinepy.helpme.mapper.Mapper.field_derivatives"]], "gradient() (splinepy.helpme.mapper.mapper method)": [[206, "splinepy.helpme.mapper.Mapper.gradient"]], "hessian() (splinepy.helpme.mapper.mapper method)": [[207, "splinepy.helpme.mapper.Mapper.hessian"]], "laplacian() (splinepy.helpme.mapper.mapper method)": [[208, "splinepy.helpme.mapper.Mapper.laplacian"]], "splinepy.helpme.multi_index": [[209, "module-splinepy.helpme.multi_index"]], "multiindex (class in splinepy.helpme.multi_index)": [[210, "splinepy.helpme.multi_index.MultiIndex"]], "splinepy.helpme.reparametrize": [[211, "module-splinepy.helpme.reparametrize"]], "flip_axes() (in module splinepy.helpme.reparametrize)": [[212, "splinepy.helpme.reparametrize.flip_axes"]], "permute_parametric_axes() (in module splinepy.helpme.reparametrize)": [[213, "splinepy.helpme.reparametrize.permute_parametric_axes"]], "splinepy.helpme.visualize": [[214, "module-splinepy.helpme.visualize"]], "multipatchshowoption (class in splinepy.helpme.visualize)": [[215, "splinepy.helpme.visualize.MultipatchShowOption"]], "clear() (splinepy.helpme.visualize.multipatchshowoption method)": [[216, "splinepy.helpme.visualize.MultipatchShowOption.clear"]], "copy_valid_options() (splinepy.helpme.visualize.multipatchshowoption method)": [[217, "splinepy.helpme.visualize.MultipatchShowOption.copy_valid_options"]], "get() (splinepy.helpme.visualize.multipatchshowoption method)": [[218, "splinepy.helpme.visualize.MultipatchShowOption.get"]], "items() (splinepy.helpme.visualize.multipatchshowoption method)": [[219, "splinepy.helpme.visualize.MultipatchShowOption.items"]], "keys() (splinepy.helpme.visualize.multipatchshowoption method)": [[220, "splinepy.helpme.visualize.MultipatchShowOption.keys"]], "pop() (splinepy.helpme.visualize.multipatchshowoption method)": [[221, "splinepy.helpme.visualize.MultipatchShowOption.pop"]], "update() (splinepy.helpme.visualize.multipatchshowoption method)": [[222, "splinepy.helpme.visualize.MultipatchShowOption.update"]], "valid_keys() (splinepy.helpme.visualize.multipatchshowoption method)": [[223, "splinepy.helpme.visualize.MultipatchShowOption.valid_keys"]], "values() (splinepy.helpme.visualize.multipatchshowoption method)": [[224, "splinepy.helpme.visualize.MultipatchShowOption.values"]], "splineshowoption (class in splinepy.helpme.visualize)": [[225, "splinepy.helpme.visualize.SplineShowOption"]], "clear() (splinepy.helpme.visualize.splineshowoption method)": [[226, "splinepy.helpme.visualize.SplineShowOption.clear"]], "copy_valid_options() (splinepy.helpme.visualize.splineshowoption method)": [[227, "splinepy.helpme.visualize.SplineShowOption.copy_valid_options"]], "get() (splinepy.helpme.visualize.splineshowoption method)": [[228, "splinepy.helpme.visualize.SplineShowOption.get"]], "items() (splinepy.helpme.visualize.splineshowoption method)": [[229, "splinepy.helpme.visualize.SplineShowOption.items"]], "keys() (splinepy.helpme.visualize.splineshowoption method)": [[230, "splinepy.helpme.visualize.SplineShowOption.keys"]], "pop() (splinepy.helpme.visualize.splineshowoption method)": [[231, "splinepy.helpme.visualize.SplineShowOption.pop"]], "update() (splinepy.helpme.visualize.splineshowoption method)": [[232, "splinepy.helpme.visualize.SplineShowOption.update"]], "valid_keys() (splinepy.helpme.visualize.splineshowoption method)": [[233, "splinepy.helpme.visualize.SplineShowOption.valid_keys"]], "values() (splinepy.helpme.visualize.splineshowoption method)": [[234, "splinepy.helpme.visualize.SplineShowOption.values"]], "make_showable() (in module splinepy.helpme.visualize)": [[235, "splinepy.helpme.visualize.make_showable"]], "show() (in module splinepy.helpme.visualize)": [[236, "splinepy.helpme.visualize.show"]], "splinepy.io": [[237, "module-splinepy.io"]], "splinepy.io.cats": [[238, "module-splinepy.io.cats"]], "export() (in module splinepy.io.cats)": [[239, "splinepy.io.cats.export"]], "load() (in module splinepy.io.cats)": [[240, "splinepy.io.cats.load"]], "splinepy.io.default": [[241, "module-splinepy.io.default"]], "export() (in module splinepy.io.default)": [[242, "splinepy.io.default.export"]], "load() (in module splinepy.io.default)": [[243, "splinepy.io.default.load"]], "splinepy.io.gismo": [[244, "module-splinepy.io.gismo"]], "export() (in module splinepy.io.gismo)": [[245, "splinepy.io.gismo.export"]], "load() (in module splinepy.io.gismo)": [[246, "splinepy.io.gismo.load"]], "splinepy.io.iges": [[247, "module-splinepy.io.iges"]], "export() (in module splinepy.io.iges)": [[248, "splinepy.io.iges.export"]], "load() (in module splinepy.io.iges)": [[249, "splinepy.io.iges.load"]], "splinepy.io.ioutils": [[250, "module-splinepy.io.ioutils"]], "abs_fname() (in module splinepy.io.ioutils)": [[251, "splinepy.io.ioutils.abs_fname"]], "dict_to_spline() (in module splinepy.io.ioutils)": [[252, "splinepy.io.ioutils.dict_to_spline"]], "expand_tabs() (in module splinepy.io.ioutils)": [[253, "splinepy.io.ioutils.expand_tabs"]], "form_lines() (in module splinepy.io.ioutils)": [[254, "splinepy.io.ioutils.form_lines"]], "make_meaningful() (in module splinepy.io.ioutils)": [[255, "splinepy.io.ioutils.make_meaningful"]], "next_line() (in module splinepy.io.ioutils)": [[256, "splinepy.io.ioutils.next_line"]], "splinepy.io.irit": [[257, "module-splinepy.io.irit"]], "export() (in module splinepy.io.irit)": [[258, "splinepy.io.irit.export"]], "load() (in module splinepy.io.irit)": [[259, "splinepy.io.irit.load"]], "splinepy.io.json": [[260, "module-splinepy.io.json"]], "export() (in module splinepy.io.json)": [[261, "splinepy.io.json.export"]], "load() (in module splinepy.io.json)": [[262, "splinepy.io.json.load"]], "splinepy.io.mfem": [[263, "module-splinepy.io.mfem"]], "dof_mapping() (in module splinepy.io.mfem)": [[264, "splinepy.io.mfem.dof_mapping"]], "export() (in module splinepy.io.mfem)": [[265, "splinepy.io.mfem.export"]], "export_cartesian() (in module splinepy.io.mfem)": [[266, "splinepy.io.mfem.export_cartesian"]], "load() (in module splinepy.io.mfem)": [[267, "splinepy.io.mfem.load"]], "read_solution() (in module splinepy.io.mfem)": [[268, "splinepy.io.mfem.read_solution"]], "splinepy.io.npz": [[269, "module-splinepy.io.npz"]], "export() (in module splinepy.io.npz)": [[270, "splinepy.io.npz.export"]], "load() (in module splinepy.io.npz)": [[271, "splinepy.io.npz.load"]], "splinepy.io.svg": [[272, "module-splinepy.io.svg"]], "export() (in module splinepy.io.svg)": [[273, "splinepy.io.svg.export"]], "splinepy.microstructure": [[274, "module-splinepy.microstructure"]], "splinepy.microstructure.microstructure": [[275, "module-splinepy.microstructure.microstructure"]], "microstructure (class in splinepy.microstructure.microstructure)": [[276, "splinepy.microstructure.microstructure.Microstructure"]], "create() (splinepy.microstructure.microstructure.microstructure method)": [[277, "splinepy.microstructure.microstructure.Microstructure.create"]], "deformation_function (splinepy.microstructure.microstructure.microstructure property)": [[278, "splinepy.microstructure.microstructure.Microstructure.deformation_function"]], "microtile (splinepy.microstructure.microstructure.microstructure property)": [[279, "splinepy.microstructure.microstructure.Microstructure.microtile"]], "parameter_sensitivity_function (splinepy.microstructure.microstructure.microstructure property)": [[280, "splinepy.microstructure.microstructure.Microstructure.parameter_sensitivity_function"]], "parametrization_function (splinepy.microstructure.microstructure.microstructure property)": [[281, "splinepy.microstructure.microstructure.Microstructure.parametrization_function"]], "show() (splinepy.microstructure.microstructure.microstructure method)": [[282, "splinepy.microstructure.microstructure.Microstructure.show"]], "tiling (splinepy.microstructure.microstructure.microstructure property)": [[283, "splinepy.microstructure.microstructure.Microstructure.tiling"]], "splinepy.microstructure.tiles": [[284, "module-splinepy.microstructure.tiles"]], "splinepy.microstructure.tiles.armadillo": [[285, "module-splinepy.microstructure.tiles.armadillo"]], "armadillo (class in splinepy.microstructure.tiles.armadillo)": [[286, "splinepy.microstructure.tiles.armadillo.Armadillo"]], "check_param_derivatives() (splinepy.microstructure.tiles.armadillo.armadillo method)": [[287, "splinepy.microstructure.tiles.armadillo.Armadillo.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.armadillo.armadillo method)": [[288, "splinepy.microstructure.tiles.armadillo.Armadillo.check_params"]], "closing_tile() (splinepy.microstructure.tiles.armadillo.armadillo method)": [[289, "splinepy.microstructure.tiles.armadillo.Armadillo.closing_tile"]], "create_tile() (splinepy.microstructure.tiles.armadillo.armadillo method)": [[290, "splinepy.microstructure.tiles.armadillo.Armadillo.create_tile"]], "splinepy.microstructure.tiles.chi": [[291, "module-splinepy.microstructure.tiles.chi"]], "chi (class in splinepy.microstructure.tiles.chi)": [[292, "splinepy.microstructure.tiles.chi.Chi"]], "check_param_derivatives() (splinepy.microstructure.tiles.chi.chi method)": [[293, "splinepy.microstructure.tiles.chi.Chi.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.chi.chi method)": [[294, "splinepy.microstructure.tiles.chi.Chi.check_params"]], "create_tile() (splinepy.microstructure.tiles.chi.chi method)": [[295, "splinepy.microstructure.tiles.chi.Chi.create_tile"]], "splinepy.microstructure.tiles.cross_2d": [[296, "module-splinepy.microstructure.tiles.cross_2d"]], "cross2d (class in splinepy.microstructure.tiles.cross_2d)": [[297, "splinepy.microstructure.tiles.cross_2d.Cross2D"]], "check_param_derivatives() (splinepy.microstructure.tiles.cross_2d.cross2d method)": [[298, "splinepy.microstructure.tiles.cross_2d.Cross2D.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.cross_2d.cross2d method)": [[299, "splinepy.microstructure.tiles.cross_2d.Cross2D.check_params"]], "create_tile() (splinepy.microstructure.tiles.cross_2d.cross2d method)": [[300, "splinepy.microstructure.tiles.cross_2d.Cross2D.create_tile"]], "splinepy.microstructure.tiles.cross_3d": [[301, "module-splinepy.microstructure.tiles.cross_3d"]], "cross3d (class in splinepy.microstructure.tiles.cross_3d)": [[302, "splinepy.microstructure.tiles.cross_3d.Cross3D"]], "check_param_derivatives() (splinepy.microstructure.tiles.cross_3d.cross3d method)": [[303, "splinepy.microstructure.tiles.cross_3d.Cross3D.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.cross_3d.cross3d method)": [[304, "splinepy.microstructure.tiles.cross_3d.Cross3D.check_params"]], "create_tile() (splinepy.microstructure.tiles.cross_3d.cross3d method)": [[305, "splinepy.microstructure.tiles.cross_3d.Cross3D.create_tile"]], "splinepy.microstructure.tiles.cross_3d_linear": [[306, "module-splinepy.microstructure.tiles.cross_3d_linear"]], "cross3dlinear (class in splinepy.microstructure.tiles.cross_3d_linear)": [[307, "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear"]], "check_param_derivatives() (splinepy.microstructure.tiles.cross_3d_linear.cross3dlinear method)": [[308, "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.cross_3d_linear.cross3dlinear method)": [[309, "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.check_params"]], "create_tile() (splinepy.microstructure.tiles.cross_3d_linear.cross3dlinear method)": [[310, "splinepy.microstructure.tiles.cross_3d_linear.Cross3DLinear.create_tile"]], "splinepy.microstructure.tiles.cube_void": [[311, "module-splinepy.microstructure.tiles.cube_void"]], "cubevoid (class in splinepy.microstructure.tiles.cube_void)": [[312, "splinepy.microstructure.tiles.cube_void.CubeVoid"]], "check_param_derivatives() (splinepy.microstructure.tiles.cube_void.cubevoid method)": [[313, "splinepy.microstructure.tiles.cube_void.CubeVoid.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.cube_void.cubevoid method)": [[314, "splinepy.microstructure.tiles.cube_void.CubeVoid.check_params"]], "create_tile() (splinepy.microstructure.tiles.cube_void.cubevoid method)": [[315, "splinepy.microstructure.tiles.cube_void.CubeVoid.create_tile"]], "splinepy.microstructure.tiles.double_lattice": [[316, "module-splinepy.microstructure.tiles.double_lattice"]], "doublelattice (class in splinepy.microstructure.tiles.double_lattice)": [[317, "splinepy.microstructure.tiles.double_lattice.DoubleLattice"]], "check_param_derivatives() (splinepy.microstructure.tiles.double_lattice.doublelattice method)": [[318, "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.double_lattice.doublelattice method)": [[319, "splinepy.microstructure.tiles.double_lattice.DoubleLattice.check_params"]], "create_tile() (splinepy.microstructure.tiles.double_lattice.doublelattice method)": [[320, "splinepy.microstructure.tiles.double_lattice.DoubleLattice.create_tile"]], "splinepy.microstructure.tiles.ellips_v_oid": [[321, "module-splinepy.microstructure.tiles.ellips_v_oid"]], "ellipsvoid (class in splinepy.microstructure.tiles.ellips_v_oid)": [[322, "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid"]], "check_param_derivatives() (splinepy.microstructure.tiles.ellips_v_oid.ellipsvoid method)": [[323, "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.ellips_v_oid.ellipsvoid method)": [[324, "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.check_params"]], "create_tile() (splinepy.microstructure.tiles.ellips_v_oid.ellipsvoid method)": [[325, "splinepy.microstructure.tiles.ellips_v_oid.EllipsVoid.create_tile"]], "splinepy.microstructure.tiles.hollow_cube": [[326, "module-splinepy.microstructure.tiles.hollow_cube"]], "hollowcube (class in splinepy.microstructure.tiles.hollow_cube)": [[327, "splinepy.microstructure.tiles.hollow_cube.HollowCube"]], "check_param_derivatives() (splinepy.microstructure.tiles.hollow_cube.hollowcube method)": [[328, "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.hollow_cube.hollowcube method)": [[329, "splinepy.microstructure.tiles.hollow_cube.HollowCube.check_params"]], "create_tile() (splinepy.microstructure.tiles.hollow_cube.hollowcube method)": [[330, "splinepy.microstructure.tiles.hollow_cube.HollowCube.create_tile"]], "splinepy.microstructure.tiles.hollow_octagon": [[331, "module-splinepy.microstructure.tiles.hollow_octagon"]], "hollowoctagon (class in splinepy.microstructure.tiles.hollow_octagon)": [[332, "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon"]], "check_param_derivatives() (splinepy.microstructure.tiles.hollow_octagon.hollowoctagon method)": [[333, "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.hollow_octagon.hollowoctagon method)": [[334, "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.check_params"]], "create_tile() (splinepy.microstructure.tiles.hollow_octagon.hollowoctagon method)": [[335, "splinepy.microstructure.tiles.hollow_octagon.HollowOctagon.create_tile"]], "splinepy.microstructure.tiles.hollow_octagon_extrude": [[336, "module-splinepy.microstructure.tiles.hollow_octagon_extrude"]], "hollowoctagonextrude (class in splinepy.microstructure.tiles.hollow_octagon_extrude)": [[337, "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude"]], "check_param_derivatives() (splinepy.microstructure.tiles.hollow_octagon_extrude.hollowoctagonextrude method)": [[338, "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.hollow_octagon_extrude.hollowoctagonextrude method)": [[339, "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.check_params"]], "closing_tile() (splinepy.microstructure.tiles.hollow_octagon_extrude.hollowoctagonextrude method)": [[340, "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.closing_tile"]], "create_tile() (splinepy.microstructure.tiles.hollow_octagon_extrude.hollowoctagonextrude method)": [[341, "splinepy.microstructure.tiles.hollow_octagon_extrude.HollowOctagonExtrude.create_tile"]], "splinepy.microstructure.tiles.inverse_cross_3d": [[342, "module-splinepy.microstructure.tiles.inverse_cross_3d"]], "inversecross3d (class in splinepy.microstructure.tiles.inverse_cross_3d)": [[343, "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D"]], "check_param_derivatives() (splinepy.microstructure.tiles.inverse_cross_3d.inversecross3d method)": [[344, "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.inverse_cross_3d.inversecross3d method)": [[345, "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.check_params"]], "create_tile() (splinepy.microstructure.tiles.inverse_cross_3d.inversecross3d method)": [[346, "splinepy.microstructure.tiles.inverse_cross_3d.InverseCross3D.create_tile"]], "splinepy.microstructure.tiles.snappy": [[347, "module-splinepy.microstructure.tiles.snappy"]], "snappy (class in splinepy.microstructure.tiles.snappy)": [[348, "splinepy.microstructure.tiles.snappy.Snappy"]], "check_param_derivatives() (splinepy.microstructure.tiles.snappy.snappy method)": [[349, "splinepy.microstructure.tiles.snappy.Snappy.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.snappy.snappy method)": [[350, "splinepy.microstructure.tiles.snappy.Snappy.check_params"]], "create_tile() (splinepy.microstructure.tiles.snappy.snappy method)": [[351, "splinepy.microstructure.tiles.snappy.Snappy.create_tile"]], "splinepy.microstructure.tiles.tile_base": [[352, "module-splinepy.microstructure.tiles.tile_base"]], "tilebase (class in splinepy.microstructure.tiles.tile_base)": [[353, "splinepy.microstructure.tiles.tile_base.TileBase"]], "check_param_derivatives() (splinepy.microstructure.tiles.tile_base.tilebase method)": [[354, "splinepy.microstructure.tiles.tile_base.TileBase.check_param_derivatives"]], "check_params() (splinepy.microstructure.tiles.tile_base.tilebase method)": [[355, "splinepy.microstructure.tiles.tile_base.TileBase.check_params"]], "dim (splinepy.microstructure.tiles.tile_base.tilebase property)": [[356, "splinepy.microstructure.tiles.tile_base.TileBase.dim"]], "evaluation_points (splinepy.microstructure.tiles.tile_base.tilebase property)": [[357, "splinepy.microstructure.tiles.tile_base.TileBase.evaluation_points"]], "para_dim (splinepy.microstructure.tiles.tile_base.tilebase property)": [[358, "splinepy.microstructure.tiles.tile_base.TileBase.para_dim"]], "splinepy.multipatch": [[359, "module-splinepy.multipatch"]], "multipatch (class in splinepy.multipatch)": [[360, "splinepy.multipatch.Multipatch"]], "add_fields() (splinepy.multipatch.multipatch method)": [[361, "splinepy.multipatch.Multipatch.add_fields"]], "boundaries (splinepy.multipatch.multipatch property)": [[362, "splinepy.multipatch.Multipatch.boundaries"]], "boundaries_from_continuity() (splinepy.multipatch.multipatch method)": [[363, "splinepy.multipatch.Multipatch.boundaries_from_continuity"]], "boundary_from_function() (splinepy.multipatch.multipatch method)": [[364, "splinepy.multipatch.Multipatch.boundary_from_function"]], "boundary_multipatch() (splinepy.multipatch.multipatch method)": [[365, "splinepy.multipatch.Multipatch.boundary_multipatch"]], "boundary_patch_ids() (splinepy.multipatch.multipatch method)": [[366, "splinepy.multipatch.Multipatch.boundary_patch_ids"]], "clear() (splinepy.multipatch.multipatch method)": [[367, "splinepy.multipatch.Multipatch.clear"]], "combine_boundaries() (splinepy.multipatch.multipatch method)": [[368, "splinepy.multipatch.Multipatch.combine_boundaries"]], "control_point_offsets() (splinepy.multipatch.multipatch method)": [[369, "splinepy.multipatch.Multipatch.control_point_offsets"]], "determine_interfaces() (splinepy.multipatch.multipatch method)": [[370, "splinepy.multipatch.Multipatch.determine_interfaces"]], "dim (splinepy.multipatch.multipatch property)": [[371, "splinepy.multipatch.Multipatch.dim"]], "evaluate() (splinepy.multipatch.multipatch method)": [[372, "splinepy.multipatch.Multipatch.evaluate"]], "extract (splinepy.multipatch.multipatch property)": [[373, "splinepy.multipatch.Multipatch.extract"]], "fields (splinepy.multipatch.multipatch property)": [[374, "splinepy.multipatch.Multipatch.fields"]], "get_interfaces() (splinepy.multipatch.multipatch method)": [[375, "splinepy.multipatch.Multipatch.get_interfaces"]], "interfaces (splinepy.multipatch.multipatch property)": [[376, "splinepy.multipatch.Multipatch.interfaces"]], "para_dim (splinepy.multipatch.multipatch property)": [[377, "splinepy.multipatch.Multipatch.para_dim"]], "patches (splinepy.multipatch.multipatch property)": [[378, "splinepy.multipatch.Multipatch.patches"]], "sample() (splinepy.multipatch.multipatch method)": [[379, "splinepy.multipatch.Multipatch.sample"]], "set_boundary() (splinepy.multipatch.multipatch method)": [[380, "splinepy.multipatch.Multipatch.set_boundary"]], "set_interfaces() (splinepy.multipatch.multipatch method)": [[381, "splinepy.multipatch.Multipatch.set_interfaces"]], "show() (splinepy.multipatch.multipatch method)": [[382, "splinepy.multipatch.Multipatch.show"]], "show_options (splinepy.multipatch.multipatch property)": [[383, "splinepy.multipatch.Multipatch.show_options"]], "showable() (splinepy.multipatch.multipatch method)": [[384, "splinepy.multipatch.Multipatch.showable"]], "spline_data (splinepy.multipatch.multipatch property)": [[385, "splinepy.multipatch.Multipatch.spline_data"]], "sub_multipatch() (splinepy.multipatch.multipatch method)": [[386, "splinepy.multipatch.Multipatch.sub_multipatch"]], "sub_patch_centers (splinepy.multipatch.multipatch property)": [[387, "splinepy.multipatch.Multipatch.sub_patch_centers"]], "splinepy.nurbs": [[388, "module-splinepy.nurbs"]], "nurbs (class in splinepy.nurbs)": [[389, "splinepy.nurbs.NURBS"]], "basis() (splinepy.nurbs.nurbs method)": [[390, "splinepy.nurbs.NURBS.basis"]], "basis_and_support() (splinepy.nurbs.nurbs method)": [[391, "splinepy.nurbs.NURBS.basis_and_support"]], "basis_derivative() (splinepy.nurbs.nurbs method)": [[392, "splinepy.nurbs.NURBS.basis_derivative"]], "basis_derivative_and_support() (splinepy.nurbs.nurbs method)": [[393, "splinepy.nurbs.NURBS.basis_derivative_and_support"]], "clear() (splinepy.nurbs.nurbs method)": [[394, "splinepy.nurbs.NURBS.clear"]], "copy() (splinepy.nurbs.nurbs method)": [[395, "splinepy.nurbs.NURBS.copy"]], "current_core_properties() (splinepy.nurbs.nurbs method)": [[396, "splinepy.nurbs.NURBS.current_core_properties"]], "derivative() (splinepy.nurbs.nurbs method)": [[397, "splinepy.nurbs.NURBS.derivative"]], "elevate_degrees() (splinepy.nurbs.nurbs method)": [[398, "splinepy.nurbs.NURBS.elevate_degrees"]], "evaluate() (splinepy.nurbs.nurbs method)": [[399, "splinepy.nurbs.NURBS.evaluate"]], "export() (splinepy.nurbs.nurbs method)": [[400, "splinepy.nurbs.NURBS.export"]], "extract_bezier_patches() (splinepy.nurbs.nurbs method)": [[401, "splinepy.nurbs.NURBS.extract_bezier_patches"]], "greville_abscissae() (splinepy.nurbs.nurbs method)": [[402, "splinepy.nurbs.NURBS.greville_abscissae"]], "insert_knots() (splinepy.nurbs.nurbs method)": [[403, "splinepy.nurbs.NURBS.insert_knots"]], "jacobian() (splinepy.nurbs.nurbs method)": [[404, "splinepy.nurbs.NURBS.jacobian"]], "knot_insertion_matrix() (splinepy.nurbs.nurbs method)": [[405, "splinepy.nurbs.NURBS.knot_insertion_matrix"]], "mapper() (splinepy.nurbs.nurbs method)": [[406, "splinepy.nurbs.NURBS.mapper"]], "normalize_knot_vectors() (splinepy.nurbs.nurbs method)": [[407, "splinepy.nurbs.NURBS.normalize_knot_vectors"]], "nurbs (splinepy.nurbs.nurbs property)": [[408, "splinepy.nurbs.NURBS.nurbs"]], "proximities() (splinepy.nurbs.nurbs method)": [[409, "splinepy.nurbs.NURBS.proximities"]], "reduce_degrees() (splinepy.nurbs.nurbs method)": [[410, "splinepy.nurbs.NURBS.reduce_degrees"]], "remove_knots() (splinepy.nurbs.nurbs method)": [[411, "splinepy.nurbs.NURBS.remove_knots"]], "sample() (splinepy.nurbs.nurbs method)": [[412, "splinepy.nurbs.NURBS.sample"]], "show() (splinepy.nurbs.nurbs method)": [[413, "splinepy.nurbs.NURBS.show"]], "showable() (splinepy.nurbs.nurbs method)": [[414, "splinepy.nurbs.NURBS.showable"]], "support() (splinepy.nurbs.nurbs method)": [[415, "splinepy.nurbs.NURBS.support"]], "todict() (splinepy.nurbs.nurbs method)": [[416, "splinepy.nurbs.NURBS.todict"]], "splinepy.rational_bezier": [[417, "module-splinepy.rational_bezier"]], "rationalbezier (class in splinepy.rational_bezier)": [[418, "splinepy.rational_bezier.RationalBezier"]], "basis() (splinepy.rational_bezier.rationalbezier method)": [[419, "splinepy.rational_bezier.RationalBezier.basis"]], "basis_and_support() (splinepy.rational_bezier.rationalbezier method)": [[420, "splinepy.rational_bezier.RationalBezier.basis_and_support"]], "basis_derivative() (splinepy.rational_bezier.rationalbezier method)": [[421, "splinepy.rational_bezier.RationalBezier.basis_derivative"]], "basis_derivative_and_support() (splinepy.rational_bezier.rationalbezier method)": [[422, "splinepy.rational_bezier.RationalBezier.basis_derivative_and_support"]], "clear() (splinepy.rational_bezier.rationalbezier method)": [[423, "splinepy.rational_bezier.RationalBezier.clear"]], "compose() (splinepy.rational_bezier.rationalbezier method)": [[424, "splinepy.rational_bezier.RationalBezier.compose"]], "composition_derivative() (splinepy.rational_bezier.rationalbezier method)": [[425, "splinepy.rational_bezier.RationalBezier.composition_derivative"]], "copy() (splinepy.rational_bezier.rationalbezier method)": [[426, "splinepy.rational_bezier.RationalBezier.copy"]], "current_core_properties() (splinepy.rational_bezier.rationalbezier method)": [[427, "splinepy.rational_bezier.RationalBezier.current_core_properties"]], "derivative() (splinepy.rational_bezier.rationalbezier method)": [[428, "splinepy.rational_bezier.RationalBezier.derivative"]], "derivative_spline() (splinepy.rational_bezier.rationalbezier method)": [[429, "splinepy.rational_bezier.RationalBezier.derivative_spline"]], "elevate_degrees() (splinepy.rational_bezier.rationalbezier method)": [[430, "splinepy.rational_bezier.RationalBezier.elevate_degrees"]], "evaluate() (splinepy.rational_bezier.rationalbezier method)": [[431, "splinepy.rational_bezier.RationalBezier.evaluate"]], "export() (splinepy.rational_bezier.rationalbezier method)": [[432, "splinepy.rational_bezier.RationalBezier.export"]], "extract_dim() (splinepy.rational_bezier.rationalbezier method)": [[433, "splinepy.rational_bezier.RationalBezier.extract_dim"]], "greville_abscissae() (splinepy.rational_bezier.rationalbezier method)": [[434, "splinepy.rational_bezier.RationalBezier.greville_abscissae"]], "jacobian() (splinepy.rational_bezier.rationalbezier method)": [[435, "splinepy.rational_bezier.RationalBezier.jacobian"]], "mapper() (splinepy.rational_bezier.rationalbezier method)": [[436, "splinepy.rational_bezier.RationalBezier.mapper"]], "nurbs (splinepy.rational_bezier.rationalbezier property)": [[437, "splinepy.rational_bezier.RationalBezier.nurbs"]], "proximities() (splinepy.rational_bezier.rationalbezier method)": [[438, "splinepy.rational_bezier.RationalBezier.proximities"]], "rationalbezier (splinepy.rational_bezier.rationalbezier property)": [[439, "splinepy.rational_bezier.RationalBezier.rationalbezier"]], "reduce_degrees() (splinepy.rational_bezier.rationalbezier method)": [[440, "splinepy.rational_bezier.RationalBezier.reduce_degrees"]], "sample() (splinepy.rational_bezier.rationalbezier method)": [[441, "splinepy.rational_bezier.RationalBezier.sample"]], "show() (splinepy.rational_bezier.rationalbezier method)": [[442, "splinepy.rational_bezier.RationalBezier.show"]], "showable() (splinepy.rational_bezier.rationalbezier method)": [[443, "splinepy.rational_bezier.RationalBezier.showable"]], "split() (splinepy.rational_bezier.rationalbezier method)": [[444, "splinepy.rational_bezier.RationalBezier.split"]], "support() (splinepy.rational_bezier.rationalbezier method)": [[445, "splinepy.rational_bezier.RationalBezier.support"]], "todict() (splinepy.rational_bezier.rationalbezier method)": [[446, "splinepy.rational_bezier.RationalBezier.todict"]], "splinepy.settings": [[447, "module-splinepy.settings"]], "check_bounds (in module splinepy.settings)": [[448, "splinepy.settings.CHECK_BOUNDS"]], "name_to_type (in module splinepy.settings)": [[449, "splinepy.settings.NAME_TO_TYPE"]], "nthreads (in module splinepy.settings)": [[450, "splinepy.settings.NTHREADS"]], "tolerance (in module splinepy.settings)": [[451, "splinepy.settings.TOLERANCE"]], "splinepy.spline": [[452, "module-splinepy.spline"]], "requiredproperties (class in splinepy.spline)": [[453, "splinepy.spline.RequiredProperties"]], "intersection() (splinepy.spline.requiredproperties class method)": [[454, "splinepy.spline.RequiredProperties.intersection"]], "of() (splinepy.spline.requiredproperties class method)": [[455, "splinepy.spline.RequiredProperties.of"]], "union() (splinepy.spline.requiredproperties class method)": [[456, "splinepy.spline.RequiredProperties.union"]], "spline (class in splinepy.spline)": [[457, "splinepy.spline.Spline"]], "basis() (splinepy.spline.spline method)": [[458, "splinepy.spline.Spline.basis"]], "basis_and_support() (splinepy.spline.spline method)": [[459, "splinepy.spline.Spline.basis_and_support"]], "basis_derivative() (splinepy.spline.spline method)": [[460, "splinepy.spline.Spline.basis_derivative"]], "basis_derivative_and_support() (splinepy.spline.spline method)": [[461, "splinepy.spline.Spline.basis_derivative_and_support"]], "check (splinepy.spline.spline property)": [[462, "splinepy.spline.Spline.check"]], "clear() (splinepy.spline.spline method)": [[463, "splinepy.spline.Spline.clear"]], "control_mesh_resolutions (splinepy.spline.spline property)": [[464, "splinepy.spline.Spline.control_mesh_resolutions"]], "control_point_bounds (splinepy.spline.spline property)": [[465, "splinepy.spline.Spline.control_point_bounds"]], "control_points (splinepy.spline.spline property)": [[466, "splinepy.spline.Spline.control_points"]], "copy() (splinepy.spline.spline method)": [[467, "splinepy.spline.Spline.copy"]], "cps (splinepy.spline.spline property)": [[468, "splinepy.spline.Spline.cps"]], "create (splinepy.spline.spline property)": [[469, "splinepy.spline.Spline.create"]], "current_core_properties() (splinepy.spline.spline method)": [[470, "splinepy.spline.Spline.current_core_properties"]], "degrees (splinepy.spline.spline property)": [[471, "splinepy.spline.Spline.degrees"]], "derivative() (splinepy.spline.spline method)": [[472, "splinepy.spline.Spline.derivative"]], "dim (splinepy.spline.spline property)": [[473, "splinepy.spline.Spline.dim"]], "ds (splinepy.spline.spline property)": [[474, "splinepy.spline.Spline.ds"]], "elevate_degrees() (splinepy.spline.spline method)": [[475, "splinepy.spline.Spline.elevate_degrees"]], "evaluate() (splinepy.spline.spline method)": [[476, "splinepy.spline.Spline.evaluate"]], "export() (splinepy.spline.spline method)": [[477, "splinepy.spline.Spline.export"]], "extract (splinepy.spline.spline property)": [[478, "splinepy.spline.Spline.extract"]], "greville_abscissae() (splinepy.spline.spline method)": [[479, "splinepy.spline.Spline.greville_abscissae"]], "has_knot_vectors (splinepy.spline.spline property)": [[480, "splinepy.spline.Spline.has_knot_vectors"]], "integrate (splinepy.spline.spline property)": [[481, "splinepy.spline.Spline.integrate"]], "is_rational (splinepy.spline.spline property)": [[482, "splinepy.spline.Spline.is_rational"]], "jacobian() (splinepy.spline.spline method)": [[483, "splinepy.spline.Spline.jacobian"]], "knot_multiplicities (splinepy.spline.spline property)": [[484, "splinepy.spline.Spline.knot_multiplicities"]], "knot_vectors (splinepy.spline.spline property)": [[485, "splinepy.spline.Spline.knot_vectors"]], "kvs (splinepy.spline.spline property)": [[486, "splinepy.spline.Spline.kvs"]], "mapper() (splinepy.spline.spline method)": [[487, "splinepy.spline.Spline.mapper"]], "multi_index (splinepy.spline.spline property)": [[488, "splinepy.spline.Spline.multi_index"]], "name (splinepy.spline.spline property)": [[489, "splinepy.spline.Spline.name"]], "para_dim (splinepy.spline.spline property)": [[490, "splinepy.spline.Spline.para_dim"]], "parametric_bounds (splinepy.spline.spline property)": [[491, "splinepy.spline.Spline.parametric_bounds"]], "proximities() (splinepy.spline.spline method)": [[492, "splinepy.spline.Spline.proximities"]], "reduce_degrees() (splinepy.spline.spline method)": [[493, "splinepy.spline.Spline.reduce_degrees"]], "required_properties (splinepy.spline.spline property)": [[494, "splinepy.spline.Spline.required_properties"]], "sample() (splinepy.spline.spline method)": [[495, "splinepy.spline.Spline.sample"]], "show() (splinepy.spline.spline method)": [[496, "splinepy.spline.Spline.show"]], "show_options (splinepy.spline.spline property)": [[497, "splinepy.spline.Spline.show_options"]], "showable() (splinepy.spline.spline method)": [[498, "splinepy.spline.Spline.showable"]], "spline_data (splinepy.spline.spline property)": [[499, "splinepy.spline.Spline.spline_data"]], "support() (splinepy.spline.spline method)": [[500, "splinepy.spline.Spline.support"]], "todict() (splinepy.spline.spline method)": [[501, "splinepy.spline.Spline.todict"]], "unique_knots (splinepy.spline.spline property)": [[502, "splinepy.spline.Spline.unique_knots"]], "weights (splinepy.spline.spline property)": [[503, "splinepy.spline.Spline.weights"]], "whatami (splinepy.spline.spline property)": [[504, "splinepy.spline.Spline.whatami"]], "ws (splinepy.spline.spline property)": [[505, "splinepy.spline.Spline.ws"]], "splinepy.splinepy_core": [[506, "module-splinepy.splinepy_core"]], "controlpointpointers (class in splinepy.splinepy_core)": [[507, "splinepy.splinepy_core.ControlPointPointers"]], "dim() (splinepy.splinepy_core.controlpointpointers method)": [[508, "splinepy.splinepy_core.ControlPointPointers.dim"]], "len() (splinepy.splinepy_core.controlpointpointers method)": [[509, "splinepy.splinepy_core.ControlPointPointers.len"]], "set_row() (splinepy.splinepy_core.controlpointpointers method)": [[510, "splinepy.splinepy_core.ControlPointPointers.set_row"]], "set_rows() (splinepy.splinepy_core.controlpointpointers method)": [[511, "splinepy.splinepy_core.ControlPointPointers.set_rows"]], "sync() (splinepy.splinepy_core.controlpointpointers method)": [[512, "splinepy.splinepy_core.ControlPointPointers.sync"]], "sync_rows() (splinepy.splinepy_core.controlpointpointers method)": [[513, "splinepy.splinepy_core.ControlPointPointers.sync_rows"]], "knotvector (class in splinepy.splinepy_core)": [[514, "splinepy.splinepy_core.KnotVector"]], "find_span() (splinepy.splinepy_core.knotvector method)": [[515, "splinepy.splinepy_core.KnotVector.find_span"]], "multiplicities() (splinepy.splinepy_core.knotvector method)": [[516, "splinepy.splinepy_core.KnotVector.multiplicities"]], "numpy() (splinepy.splinepy_core.knotvector method)": [[517, "splinepy.splinepy_core.KnotVector.numpy"]], "scale() (splinepy.splinepy_core.knotvector method)": [[518, "splinepy.splinepy_core.KnotVector.scale"]], "unique() (splinepy.splinepy_core.knotvector method)": [[519, "splinepy.splinepy_core.KnotVector.unique"]], "parameterspace (class in splinepy.splinepy_core)": [[520, "splinepy.splinepy_core.ParameterSpace"]], "copy() (splinepy.splinepy_core.parameterspace method)": [[521, "splinepy.splinepy_core.ParameterSpace.copy"]], "unique_knots() (splinepy.splinepy_core.parameterspace method)": [[522, "splinepy.splinepy_core.ParameterSpace.unique_knots"]], "pymultipatch (class in splinepy.splinepy_core)": [[523, "splinepy.splinepy_core.PyMultipatch"]], "add_fields() (splinepy.splinepy_core.pymultipatch method)": [[524, "splinepy.splinepy_core.PyMultipatch.add_fields"]], "boundary_multipatch() (splinepy.splinepy_core.pymultipatch method)": [[525, "splinepy.splinepy_core.PyMultipatch.boundary_multipatch"]], "boundary_patch_ids() (splinepy.splinepy_core.pymultipatch method)": [[526, "splinepy.splinepy_core.PyMultipatch.boundary_patch_ids"]], "clear() (splinepy.splinepy_core.pymultipatch method)": [[527, "splinepy.splinepy_core.PyMultipatch.clear"]], "control_point_offsets() (splinepy.splinepy_core.pymultipatch method)": [[528, "splinepy.splinepy_core.PyMultipatch.control_point_offsets"]], "control_points (splinepy.splinepy_core.pymultipatch property)": [[529, "splinepy.splinepy_core.PyMultipatch.control_points"]], "dim (splinepy.splinepy_core.pymultipatch property)": [[530, "splinepy.splinepy_core.PyMultipatch.dim"]], "evaluate() (splinepy.splinepy_core.pymultipatch method)": [[531, "splinepy.splinepy_core.PyMultipatch.evaluate"]], "fields() (splinepy.splinepy_core.pymultipatch method)": [[532, "splinepy.splinepy_core.PyMultipatch.fields"]], "get_interfaces() (splinepy.splinepy_core.pymultipatch method)": [[533, "splinepy.splinepy_core.PyMultipatch.get_interfaces"]], "n_default_threads (splinepy.splinepy_core.pymultipatch property)": [[534, "splinepy.splinepy_core.PyMultipatch.n_default_threads"]], "name (splinepy.splinepy_core.pymultipatch property)": [[535, "splinepy.splinepy_core.PyMultipatch.name"]], "para_dim (splinepy.splinepy_core.pymultipatch property)": [[536, "splinepy.splinepy_core.PyMultipatch.para_dim"]], "patches (splinepy.splinepy_core.pymultipatch property)": [[537, "splinepy.splinepy_core.PyMultipatch.patches"]], "same_parametric_bounds (splinepy.splinepy_core.pymultipatch property)": [[538, "splinepy.splinepy_core.PyMultipatch.same_parametric_bounds"]], "sample() (splinepy.splinepy_core.pymultipatch method)": [[539, "splinepy.splinepy_core.PyMultipatch.sample"]], "set_interfaces() (splinepy.splinepy_core.pymultipatch method)": [[540, "splinepy.splinepy_core.PyMultipatch.set_interfaces"]], "sub_multipatch() (splinepy.splinepy_core.pymultipatch method)": [[541, "splinepy.splinepy_core.PyMultipatch.sub_multipatch"]], "sub_patch_centers() (splinepy.splinepy_core.pymultipatch method)": [[542, "splinepy.splinepy_core.PyMultipatch.sub_patch_centers"]], "tolerance (splinepy.splinepy_core.pymultipatch property)": [[543, "splinepy.splinepy_core.PyMultipatch.tolerance"]], "whatami (splinepy.splinepy_core.pymultipatch property)": [[544, "splinepy.splinepy_core.PyMultipatch.whatami"]], "pyspline (class in splinepy.splinepy_core)": [[545, "splinepy.splinepy_core.PySpline"]], "basis() (splinepy.splinepy_core.pyspline method)": [[546, "splinepy.splinepy_core.PySpline.basis"]], "basis_and_support() (splinepy.splinepy_core.pyspline method)": [[547, "splinepy.splinepy_core.PySpline.basis_and_support"]], "basis_derivative() (splinepy.splinepy_core.pyspline method)": [[548, "splinepy.splinepy_core.PySpline.basis_derivative"]], "basis_derivative_and_support() (splinepy.splinepy_core.pyspline method)": [[549, "splinepy.splinepy_core.PySpline.basis_derivative_and_support"]], "control_mesh_resolutions (splinepy.splinepy_core.pyspline property)": [[550, "splinepy.splinepy_core.PySpline.control_mesh_resolutions"]], "current_core_properties() (splinepy.splinepy_core.pyspline method)": [[551, "splinepy.splinepy_core.PySpline.current_core_properties"]], "derivative() (splinepy.splinepy_core.pyspline method)": [[552, "splinepy.splinepy_core.PySpline.derivative"]], "dim (splinepy.splinepy_core.pyspline property)": [[553, "splinepy.splinepy_core.PySpline.dim"]], "elevate_degrees() (splinepy.splinepy_core.pyspline method)": [[554, "splinepy.splinepy_core.PySpline.elevate_degrees"]], "evaluate() (splinepy.splinepy_core.pyspline method)": [[555, "splinepy.splinepy_core.PySpline.evaluate"]], "has_knot_vectors (splinepy.splinepy_core.pyspline property)": [[556, "splinepy.splinepy_core.PySpline.has_knot_vectors"]], "is_rational (splinepy.splinepy_core.pyspline property)": [[557, "splinepy.splinepy_core.PySpline.is_rational"]], "jacobian() (splinepy.splinepy_core.pyspline method)": [[558, "splinepy.splinepy_core.PySpline.jacobian"]], "name (splinepy.splinepy_core.pyspline property)": [[559, "splinepy.splinepy_core.PySpline.name"]], "para_dim (splinepy.splinepy_core.pyspline property)": [[560, "splinepy.splinepy_core.PySpline.para_dim"]], "parametric_bounds (splinepy.splinepy_core.pyspline property)": [[561, "splinepy.splinepy_core.PySpline.parametric_bounds"]], "proximities() (splinepy.splinepy_core.pyspline method)": [[562, "splinepy.splinepy_core.PySpline.proximities"]], "reduce_degrees() (splinepy.splinepy_core.pyspline method)": [[563, "splinepy.splinepy_core.PySpline.reduce_degrees"]], "sample() (splinepy.splinepy_core.pyspline method)": [[564, "splinepy.splinepy_core.PySpline.sample"]], "support() (splinepy.splinepy_core.pyspline method)": [[565, "splinepy.splinepy_core.PySpline.support"]], "whatami (splinepy.splinepy_core.pyspline property)": [[566, "splinepy.splinepy_core.PySpline.whatami"]], "weightpointers (class in splinepy.splinepy_core)": [[567, "splinepy.splinepy_core.WeightPointers"]], "dim() (splinepy.splinepy_core.weightpointers method)": [[568, "splinepy.splinepy_core.WeightPointers.dim"]], "len() (splinepy.splinepy_core.weightpointers method)": [[569, "splinepy.splinepy_core.WeightPointers.len"]], "set_row() (splinepy.splinepy_core.weightpointers method)": [[570, "splinepy.splinepy_core.WeightPointers.set_row"]], "set_rows() (splinepy.splinepy_core.weightpointers method)": [[571, "splinepy.splinepy_core.WeightPointers.set_rows"]], "sync() (splinepy.splinepy_core.weightpointers method)": [[572, "splinepy.splinepy_core.WeightPointers.sync"]], "sync_rows() (splinepy.splinepy_core.weightpointers method)": [[573, "splinepy.splinepy_core.WeightPointers.sync_rows"]], "add() (in module splinepy.splinepy_core)": [[574, "splinepy.splinepy_core.add"]], "annul_core() (in module splinepy.splinepy_core)": [[575, "splinepy.splinepy_core.annul_core"]], "bezier_extraction_matrix() (in module splinepy.splinepy_core)": [[576, "splinepy.splinepy_core.bezier_extraction_matrix"]], "boundaries_from_continuity() (in module splinepy.splinepy_core)": [[577, "splinepy.splinepy_core.boundaries_from_continuity"]], "boundary_centers() (in module splinepy.splinepy_core)": [[578, "splinepy.splinepy_core.boundary_centers"]], "build_type() (in module splinepy.splinepy_core)": [[579, "splinepy.splinepy_core.build_type"]], "compose() (in module splinepy.splinepy_core)": [[580, "splinepy.splinepy_core.compose"]], "compose_sensitivities() (in module splinepy.splinepy_core)": [[581, "splinepy.splinepy_core.compose_sensitivities"]], "composition_derivative() (in module splinepy.splinepy_core)": [[582, "splinepy.splinepy_core.composition_derivative"]], "core_id() (in module splinepy.splinepy_core)": [[583, "splinepy.splinepy_core.core_id"]], "core_ref_count() (in module splinepy.splinepy_core)": [[584, "splinepy.splinepy_core.core_ref_count"]], "derivative_spline() (in module splinepy.splinepy_core)": [[585, "splinepy.splinepy_core.derivative_spline"]], "export_iges() (in module splinepy.splinepy_core)": [[586, "splinepy.splinepy_core.export_iges"]], "extract_all_boundary_splines() (in module splinepy.splinepy_core)": [[587, "splinepy.splinepy_core.extract_all_boundary_splines"]], "extract_bezier_patches() (in module splinepy.splinepy_core)": [[588, "splinepy.splinepy_core.extract_bezier_patches"]], "extract_boundaries() (in module splinepy.splinepy_core)": [[589, "splinepy.splinepy_core.extract_boundaries"]], "extract_dim() (in module splinepy.splinepy_core)": [[590, "splinepy.splinepy_core.extract_dim"]], "global_knot_insertion_matrix() (in module splinepy.splinepy_core)": [[591, "splinepy.splinepy_core.global_knot_insertion_matrix"]], "has_core() (in module splinepy.splinepy_core)": [[592, "splinepy.splinepy_core.has_core"]], "insert_knots() (in module splinepy.splinepy_core)": [[593, "splinepy.splinepy_core.insert_knots"]], "interfaces_from_boundary_centers() (in module splinepy.splinepy_core)": [[594, "splinepy.splinepy_core.interfaces_from_boundary_centers"]], "is_minimal() (in module splinepy.splinepy_core)": [[595, "splinepy.splinepy_core.is_minimal"]], "knot_insertion_matrix() (in module splinepy.splinepy_core)": [[596, "splinepy.splinepy_core.knot_insertion_matrix"]], "multiply() (in module splinepy.splinepy_core)": [[597, "splinepy.splinepy_core.multiply"]], "null_spline() (in module splinepy.splinepy_core)": [[598, "splinepy.splinepy_core.null_spline"]], "orientations() (in module splinepy.splinepy_core)": [[599, "splinepy.splinepy_core.orientations"]], "read_iges() (in module splinepy.splinepy_core)": [[600, "splinepy.splinepy_core.read_iges"]], "remove_knots() (in module splinepy.splinepy_core)": [[601, "splinepy.splinepy_core.remove_knots"]], "same_spline_with_knot_vectors() (in module splinepy.splinepy_core)": [[602, "splinepy.splinepy_core.same_spline_with_knot_vectors"]], "split() (in module splinepy.splinepy_core)": [[603, "splinepy.splinepy_core.split"]], "to_derived() (in module splinepy)": [[604, "splinepy.to_derived"]], "splinepy.utils": [[605, "module-splinepy.utils"]], "splinepy.utils.data": [[606, "module-splinepy.utils.data"]], "multipatchdata (class in splinepy.utils.data)": [[607, "splinepy.utils.data.MultipatchData"]], "as_arrow() (splinepy.utils.data.multipatchdata method)": [[608, "splinepy.utils.data.MultipatchData.as_arrow"]], "as_scalar() (splinepy.utils.data.multipatchdata method)": [[609, "splinepy.utils.data.MultipatchData.as_scalar"]], "clear() (splinepy.utils.data.multipatchdata method)": [[610, "splinepy.utils.data.MultipatchData.clear"]], "get() (splinepy.utils.data.multipatchdata method)": [[611, "splinepy.utils.data.MultipatchData.get"]], "items() (splinepy.utils.data.multipatchdata method)": [[612, "splinepy.utils.data.MultipatchData.items"]], "keys() (splinepy.utils.data.multipatchdata method)": [[613, "splinepy.utils.data.MultipatchData.keys"]], "pop() (splinepy.utils.data.multipatchdata method)": [[614, "splinepy.utils.data.MultipatchData.pop"]], "values() (splinepy.utils.data.multipatchdata method)": [[615, "splinepy.utils.data.MultipatchData.values"]], "physicalspacearray (class in splinepy.utils.data)": [[616, "splinepy.utils.data.PhysicalSpaceArray"]], "all() (splinepy.utils.data.physicalspacearray method)": [[617, "splinepy.utils.data.PhysicalSpaceArray.all"]], "any() (splinepy.utils.data.physicalspacearray method)": [[618, "splinepy.utils.data.PhysicalSpaceArray.any"]], "argmax() (splinepy.utils.data.physicalspacearray method)": [[619, "splinepy.utils.data.PhysicalSpaceArray.argmax"]], "argmin() (splinepy.utils.data.physicalspacearray method)": [[620, "splinepy.utils.data.PhysicalSpaceArray.argmin"]], "argpartition() (splinepy.utils.data.physicalspacearray method)": [[621, "splinepy.utils.data.PhysicalSpaceArray.argpartition"]], "argsort() (splinepy.utils.data.physicalspacearray method)": [[622, "splinepy.utils.data.PhysicalSpaceArray.argsort"]], "astype() (splinepy.utils.data.physicalspacearray method)": [[623, "splinepy.utils.data.PhysicalSpaceArray.astype"]], "byteswap() (splinepy.utils.data.physicalspacearray method)": [[624, "splinepy.utils.data.PhysicalSpaceArray.byteswap"]], "choose() (splinepy.utils.data.physicalspacearray method)": [[625, "splinepy.utils.data.PhysicalSpaceArray.choose"]], "clip() (splinepy.utils.data.physicalspacearray method)": [[626, "splinepy.utils.data.PhysicalSpaceArray.clip"]], "compress() (splinepy.utils.data.physicalspacearray method)": [[627, "splinepy.utils.data.PhysicalSpaceArray.compress"]], "conj() (splinepy.utils.data.physicalspacearray method)": [[628, "splinepy.utils.data.PhysicalSpaceArray.conj"]], "conjugate() (splinepy.utils.data.physicalspacearray method)": [[629, "splinepy.utils.data.PhysicalSpaceArray.conjugate"]], "copy() (splinepy.utils.data.physicalspacearray method)": [[630, "splinepy.utils.data.PhysicalSpaceArray.copy"]], "cumprod() (splinepy.utils.data.physicalspacearray method)": [[631, "splinepy.utils.data.PhysicalSpaceArray.cumprod"]], "cumsum() (splinepy.utils.data.physicalspacearray method)": [[632, "splinepy.utils.data.PhysicalSpaceArray.cumsum"]], "diagonal() (splinepy.utils.data.physicalspacearray method)": [[633, "splinepy.utils.data.PhysicalSpaceArray.diagonal"]], "dot() (splinepy.utils.data.physicalspacearray method)": [[634, "splinepy.utils.data.PhysicalSpaceArray.dot"]], "dump() (splinepy.utils.data.physicalspacearray method)": [[635, "splinepy.utils.data.PhysicalSpaceArray.dump"]], "dumps() (splinepy.utils.data.physicalspacearray method)": [[636, "splinepy.utils.data.PhysicalSpaceArray.dumps"]], "fill() (splinepy.utils.data.physicalspacearray method)": [[637, "splinepy.utils.data.PhysicalSpaceArray.fill"]], "flatten() (splinepy.utils.data.physicalspacearray method)": [[638, "splinepy.utils.data.PhysicalSpaceArray.flatten"]], "full_row_indices() (splinepy.utils.data.physicalspacearray method)": [[639, "splinepy.utils.data.PhysicalSpaceArray.full_row_indices"]], "getfield() (splinepy.utils.data.physicalspacearray method)": [[640, "splinepy.utils.data.PhysicalSpaceArray.getfield"]], "item() (splinepy.utils.data.physicalspacearray method)": [[641, "splinepy.utils.data.PhysicalSpaceArray.item"]], "itemset() (splinepy.utils.data.physicalspacearray method)": [[642, "splinepy.utils.data.PhysicalSpaceArray.itemset"]], "max() (splinepy.utils.data.physicalspacearray method)": [[643, "splinepy.utils.data.PhysicalSpaceArray.max"]], "mean() (splinepy.utils.data.physicalspacearray method)": [[644, "splinepy.utils.data.PhysicalSpaceArray.mean"]], "min() (splinepy.utils.data.physicalspacearray method)": [[645, "splinepy.utils.data.PhysicalSpaceArray.min"]], "newbyteorder() (splinepy.utils.data.physicalspacearray method)": [[646, "splinepy.utils.data.PhysicalSpaceArray.newbyteorder"]], "nonzero() (splinepy.utils.data.physicalspacearray method)": [[647, "splinepy.utils.data.PhysicalSpaceArray.nonzero"]], "partition() (splinepy.utils.data.physicalspacearray method)": [[648, "splinepy.utils.data.PhysicalSpaceArray.partition"]], "prod() (splinepy.utils.data.physicalspacearray method)": [[649, "splinepy.utils.data.PhysicalSpaceArray.prod"]], "ptp() (splinepy.utils.data.physicalspacearray method)": [[650, "splinepy.utils.data.PhysicalSpaceArray.ptp"]], "put() (splinepy.utils.data.physicalspacearray method)": [[651, "splinepy.utils.data.PhysicalSpaceArray.put"]], "ravel() (splinepy.utils.data.physicalspacearray method)": [[652, "splinepy.utils.data.PhysicalSpaceArray.ravel"]], "repeat() (splinepy.utils.data.physicalspacearray method)": [[653, "splinepy.utils.data.PhysicalSpaceArray.repeat"]], "reshape() (splinepy.utils.data.physicalspacearray method)": [[654, "splinepy.utils.data.PhysicalSpaceArray.reshape"]], "resize() (splinepy.utils.data.physicalspacearray method)": [[655, "splinepy.utils.data.PhysicalSpaceArray.resize"]], "round() (splinepy.utils.data.physicalspacearray method)": [[656, "splinepy.utils.data.PhysicalSpaceArray.round"]], "row_indices() (splinepy.utils.data.physicalspacearray method)": [[657, "splinepy.utils.data.PhysicalSpaceArray.row_indices"]], "searchsorted() (splinepy.utils.data.physicalspacearray method)": [[658, "splinepy.utils.data.PhysicalSpaceArray.searchsorted"]], "setfield() (splinepy.utils.data.physicalspacearray method)": [[659, "splinepy.utils.data.PhysicalSpaceArray.setfield"]], "setflags() (splinepy.utils.data.physicalspacearray method)": [[660, "splinepy.utils.data.PhysicalSpaceArray.setflags"]], "sort() (splinepy.utils.data.physicalspacearray method)": [[661, "splinepy.utils.data.PhysicalSpaceArray.sort"]], "squeeze() (splinepy.utils.data.physicalspacearray method)": [[662, "splinepy.utils.data.PhysicalSpaceArray.squeeze"]], "std() (splinepy.utils.data.physicalspacearray method)": [[663, "splinepy.utils.data.PhysicalSpaceArray.std"]], "sum() (splinepy.utils.data.physicalspacearray method)": [[664, "splinepy.utils.data.PhysicalSpaceArray.sum"]], "swapaxes() (splinepy.utils.data.physicalspacearray method)": [[665, "splinepy.utils.data.PhysicalSpaceArray.swapaxes"]], "take() (splinepy.utils.data.physicalspacearray method)": [[666, "splinepy.utils.data.PhysicalSpaceArray.take"]], "tobytes() (splinepy.utils.data.physicalspacearray method)": [[667, "splinepy.utils.data.PhysicalSpaceArray.tobytes"]], "tofile() (splinepy.utils.data.physicalspacearray method)": [[668, "splinepy.utils.data.PhysicalSpaceArray.tofile"]], "tolist() (splinepy.utils.data.physicalspacearray method)": [[669, "splinepy.utils.data.PhysicalSpaceArray.tolist"]], "tostring() (splinepy.utils.data.physicalspacearray method)": [[670, "splinepy.utils.data.PhysicalSpaceArray.tostring"]], "trace() (splinepy.utils.data.physicalspacearray method)": [[671, "splinepy.utils.data.PhysicalSpaceArray.trace"]], "transpose() (splinepy.utils.data.physicalspacearray method)": [[672, "splinepy.utils.data.PhysicalSpaceArray.transpose"]], "var() (splinepy.utils.data.physicalspacearray method)": [[673, "splinepy.utils.data.PhysicalSpaceArray.var"]], "view() (splinepy.utils.data.physicalspacearray method)": [[674, "splinepy.utils.data.PhysicalSpaceArray.view"]], "splinedata (class in splinepy.utils.data)": [[675, "splinepy.utils.data.SplineData"]], "as_arrow() (splinepy.utils.data.splinedata method)": [[676, "splinepy.utils.data.SplineData.as_arrow"]], "as_scalar() (splinepy.utils.data.splinedata method)": [[677, "splinepy.utils.data.SplineData.as_scalar"]], "clear() (splinepy.utils.data.splinedata method)": [[678, "splinepy.utils.data.SplineData.clear"]], "get() (splinepy.utils.data.splinedata method)": [[679, "splinepy.utils.data.SplineData.get"]], "items() (splinepy.utils.data.splinedata method)": [[680, "splinepy.utils.data.SplineData.items"]], "keys() (splinepy.utils.data.splinedata method)": [[681, "splinepy.utils.data.SplineData.keys"]], "pop() (splinepy.utils.data.splinedata method)": [[682, "splinepy.utils.data.SplineData.pop"]], "values() (splinepy.utils.data.splinedata method)": [[683, "splinepy.utils.data.SplineData.values"]], "splinedataadaptor (class in splinepy.utils.data)": [[684, "splinepy.utils.data.SplineDataAdaptor"]], "arrow_data_only (splinepy.utils.data.splinedataadaptor attribute)": [[685, "splinepy.utils.data.SplineDataAdaptor.arrow_data_only"]], "as_vertex_data() (splinepy.utils.data.splinedataadaptor method)": [[686, "splinepy.utils.data.SplineDataAdaptor.as_vertex_data"]], "data (splinepy.utils.data.splinedataadaptor attribute)": [[687, "splinepy.utils.data.SplineDataAdaptor.data"]], "function (splinepy.utils.data.splinedataadaptor attribute)": [[688, "splinepy.utils.data.SplineDataAdaptor.function"]], "has_evaluate (splinepy.utils.data.splinedataadaptor attribute)": [[689, "splinepy.utils.data.SplineDataAdaptor.has_evaluate"]], "has_function (splinepy.utils.data.splinedataadaptor attribute)": [[690, "splinepy.utils.data.SplineDataAdaptor.has_function"]], "has_locations (splinepy.utils.data.splinedataadaptor attribute)": [[691, "splinepy.utils.data.SplineDataAdaptor.has_locations"]], "is_spline (splinepy.utils.data.splinedataadaptor attribute)": [[692, "splinepy.utils.data.SplineDataAdaptor.is_spline"]], "locations (splinepy.utils.data.splinedataadaptor attribute)": [[693, "splinepy.utils.data.SplineDataAdaptor.locations"]], "parametric_bounds (splinepy.utils.data.splinedataadaptor attribute)": [[694, "splinepy.utils.data.SplineDataAdaptor.parametric_bounds"]], "cartesian_product() (in module splinepy.utils.data)": [[695, "splinepy.utils.data.cartesian_product"]], "enforce_contiguous() (in module splinepy.utils.data)": [[696, "splinepy.utils.data.enforce_contiguous"]], "enforce_contiguous_values() (in module splinepy.utils.data)": [[697, "splinepy.utils.data.enforce_contiguous_values"]], "make_matrix() (in module splinepy.utils.data)": [[698, "splinepy.utils.data.make_matrix"]], "uniform_query() (in module splinepy.utils.data)": [[699, "splinepy.utils.data.uniform_query"]], "splinepy.utils.log": [[700, "module-splinepy.utils.log"]], "configure() (in module splinepy.utils.log)": [[701, "splinepy.utils.log.configure"]], "debug() (in module splinepy.utils.log)": [[702, "splinepy.utils.log.debug"]], "info() (in module splinepy.utils.log)": [[703, "splinepy.utils.log.info"]], "prepend_log() (in module splinepy.utils.log)": [[704, "splinepy.utils.log.prepend_log"]], "warning() (in module splinepy.utils.log)": [[705, "splinepy.utils.log.warning"]]}})